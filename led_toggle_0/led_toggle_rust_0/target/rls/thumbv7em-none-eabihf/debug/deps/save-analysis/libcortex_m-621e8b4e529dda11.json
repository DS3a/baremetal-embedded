{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3","program":"/home/d33p/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cortex_m","--edition=2018","/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=621e8b4e529dda11","-C","extra-filename=-621e8b4e529dda11","--out-dir","/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/debug/deps","--extern","bare_metal=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libbare_metal-82ec2b472a5005e0.rmeta","--extern","bitfield=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libbitfield-f3b82647aa2c221a.rmeta","--extern","embedded_hal=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_hal-cd29f01e59f6805e.rmeta","--extern","volatile_register=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libvolatile_register-bc48b8c08a717d8c.rmeta","--cap-lints","allow","-L","/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-d1c01c9da6b40276/out","--cfg","cortex_m","--cfg","armv7m","--cfg","armv7em","--cfg","has_fpu","-l","static=cortex-m","--error-format=json","--sysroot","/home/d33p/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m-621e8b4e529dda11.rmeta"},"prelude":{"crate_id":{"name":"cortex_m","disambiguator":[640354376001017179,674240275051986860]},"crate_root":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src","external_crates":[{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2184632775997829466,18026496178680965583]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3726307931522043477,4911878782996857177]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8506066526834043935,2338947288633172727]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","num":4,"id":{"name":"bare_metal","disambiguator":[4564207712410018107,9487563642666486471]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","num":5,"id":{"name":"volatile_register","disambiguator":[12924141464269962721,11423500608467426660]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","num":6,"id":{"name":"vcell","disambiguator":[13115093308910904468,13284027448544462362]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","num":7,"id":{"name":"embedded_hal","disambiguator":[11190912420879959913,7761254619970545346]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","num":8,"id":{"name":"nb","disambiguator":[15401273450865999483,13772608842728756265]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","num":9,"id":{"name":"nb","disambiguator":[15010377001352867217,15689185407496902103]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","num":10,"id":{"name":"void","disambiguator":[13969028487453651476,12471677446926910835]}}],"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":0,"byte_end":3770,"line_start":1,"line_end":99,"column_start":1,"column_end":40}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":11},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17309,"byte_end":17324,"line_start":3,"line_end":3,"column_start":22,"column_end":37},"alias_span":null,"name":"CriticalSection","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":4,"index":15},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17326,"byte_end":17331,"line_start":3,"line_end":3,"column_start":39,"column_end":44},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":59}},{"kind":"Use","ref_id":{"krate":4,"index":26},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17333,"byte_end":17335,"line_start":3,"line_end":3,"column_start":46,"column_end":48},"alias_span":null,"name":"Nr","value":"","parent":{"krate":0,"index":59}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/prelude.rs","byte_start":108969,"byte_end":108970,"line_start":3,"line_end":3,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":674}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3758,"byte_end":3769,"line_start":99,"line_end":99,"column_start":28,"column_end":39},"alias_span":null,"name":"Peripherals","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":0,"byte_end":3770,"line_start":1,"line_end":99,"column_start":1,"column_end":40},"name":"","qualname":"::","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":28},{"krate":0,"index":59},{"krate":0,"index":74},{"krate":0,"index":98},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":758}],"decl_id":null,"docs":" Low level access to Cortex-M processors","sig":null,"attributes":[{"value":"/ Low level access to Cortex-M processors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":0,"byte_end":43,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":44,"byte_end":47,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":48,"byte_end":72,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":73,"byte_end":76,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - Access to core peripherals like NVIC, SCB and SysTick.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":77,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ - Access to core registers like CONTROL, MSP and PSR.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":138,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/ - Interrupt manipulation mechanisms","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":196,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ - Safe wrappers around Cortex-M specific instructions like `bkpt`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":236,"byte_end":305,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":306,"byte_end":309,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Optional features","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":310,"byte_end":333,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":334,"byte_end":337,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## `inline-asm`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":338,"byte_end":357,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":358,"byte_end":361,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled the implementation of all the functions inside the `asm` and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":362,"byte_end":455,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ `register` modules use inline assembly (`asm!`) instead of external assembly (FFI into separate","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":456,"byte_end":555,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ assembly files pre-compiled using `arm-none-eabi-gcc`). The advantages of enabling `inline-asm`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":556,"byte_end":655,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ are:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":656,"byte_end":664,"line_start":17,"line_end":17,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":665,"byte_end":668,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - Reduced overhead. FFI eliminates the possibility of inlining so all operations include a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":669,"byte_end":763,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/ function call overhead when `inline-asm` is not enabled.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":764,"byte_end":824,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":825,"byte_end":828,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - Some of the `register` API only becomes available only when `inline-asm` is enabled. Check the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":829,"byte_end":929,"line_start":22,"line_end":22,"column_start":1,"column_end":101}},{"value":"/ API docs for details.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":930,"byte_end":955,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":956,"byte_end":959,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The disadvantage is that `inline-asm` requires a nightly toolchain.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":960,"byte_end":1031,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ## `cm7-r0p1`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1036,"byte_end":1053,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1054,"byte_end":1057,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This feature enables workarounds for errata found on Cortex-M7 chips with revision r0p1. Some","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1058,"byte_end":1155,"line_start":29,"line_end":29,"column_start":1,"column_end":98}},{"value":"/ functions in this crate only work correctly on those chips if this Cargo feature is enabled","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1156,"byte_end":1251,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ (the functions are documented accordingly).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1252,"byte_end":1299,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ## `linker-plugin-lto`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1304,"byte_end":1330,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1331,"byte_end":1334,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This feature links against prebuilt assembly blobs that are compatible with [Linker-Plugin LTO].","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1335,"byte_end":1435,"line_start":35,"line_end":35,"column_start":1,"column_end":101}},{"value":"/ This allows inlining assembly routines into the caller, even without the `inline-asm` feature,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1436,"byte_end":1534,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and works on stable Rust (but note the drawbacks below!).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1535,"byte_end":1596,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1597,"byte_end":1600,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ If you want to use this feature, you need to be aware of a few things:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1601,"byte_end":1675,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1676,"byte_end":1679,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ - You need to make sure that `-Clinker-plugin-lto` is passed to rustc. Please refer to the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1680,"byte_end":1774,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/   [Linker-Plugin LTO] documentation for details.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1775,"byte_end":1827,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1828,"byte_end":1831,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ - You have to use a Rust version whose LLVM version is compatible with the toolchain in","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1832,"byte_end":1923,"line_start":44,"line_end":44,"column_start":1,"column_end":92}},{"value":"/   `asm-toolchain`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1924,"byte_end":1946,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1947,"byte_end":1950,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ - Due to a [Rust bug][rust-lang/rust#75940] in compiler versions **before 1.49**, this option","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":1951,"byte_end":2048,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/   does not work with optimization levels `s` and `z`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2049,"byte_end":2106,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2107,"byte_end":2110,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [Linker-Plugin LTO]: https://doc.rust-lang.org/stable/rustc/linker-plugin-lto.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2111,"byte_end":2197,"line_start":50,"line_end":50,"column_start":1,"column_end":87}},{"value":"/ [rust-lang/rust#75940]: https://github.com/rust-lang/rust/issues/75940","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2198,"byte_end":2272,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2273,"byte_end":2276,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Minimum Supported Rust Version (MSRV)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2277,"byte_end":2320,"line_start":53,"line_end":53,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2321,"byte_end":2324,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This crate is guaranteed to compile on stable Rust 1.38 and up. It *might*","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2325,"byte_end":2403,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ compile with older versions but that may change in any new patch release.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2404,"byte_end":2481,"line_start":56,"line_end":56,"column_start":1,"column_end":78}},{"value":"deny(missing_docs)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2534,"byte_end":2556,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2557,"byte_end":2567,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2568,"byte_end":2598,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2599,"byte_end":2636,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"allow(clippy :: match_single_binding)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":2731,"byte_end":2770,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"deny(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3382,"byte_end":3430,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"asm","qualname":"::asm","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" Miscellaneous assembly instructions\n","sig":null,"attributes":[{"value":"/ Miscellaneous assembly instructions","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7314,"byte_end":7353,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7775,"byte_end":7779,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"bkpt","qualname":"::asm::bkpt","value":"pub fn bkpt()","parent":null,"children":[],"decl_id":null,"docs":" Puts the processor in Debug state. Debuggers can pick this up as a \"breakpoint\".","sig":null,"attributes":[{"value":"/ Puts the processor in Debug state. Debuggers can pick this up as a \"breakpoint\".","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7554,"byte_end":7638,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7639,"byte_end":7642,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ **NOTE** calling `bkpt` when the processor is not connected to a debugger will cause an","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7643,"byte_end":7734,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ exception.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7735,"byte_end":7749,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7750,"byte_end":7767,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8435,"byte_end":8440,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"delay","qualname":"::asm::delay","value":"pub fn delay(u32)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the program for *at least* `cycles` CPU cycles.","sig":null,"attributes":[{"value":"/ Blocks the program for *at least* `cycles` CPU cycles.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7812,"byte_end":7870,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7871,"byte_end":7874,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is implemented in assembly so its execution time is independent of the optimization","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7875,"byte_end":7967,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"/ level, however it is dependent on the specific architecture and core configuration.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":7968,"byte_end":8055,"line_start":21,"line_end":21,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8056,"byte_end":8059,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ NOTE that the delay can take much longer if interrupts are serviced during its execution","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8060,"byte_end":8152,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ and the execution time may vary with other factors. This delay is mainly useful for simple","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8153,"byte_end":8247,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ timer-less initialization of peripherals if and only if accurate timing is not essential. In","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8248,"byte_end":8344,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ any other case please use a more accurate method to produce a delay.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8345,"byte_end":8417,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8418,"byte_end":8427,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":17},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8590,"byte_end":8593,"line_start":34,"line_end":34,"column_start":8,"column_end":11},"name":"nop","qualname":"::asm::nop","value":"pub fn nop()","parent":null,"children":[],"decl_id":null,"docs":" A no-operation. Useful to prevent delay loops from being optimized away.\n","sig":null,"attributes":[{"value":"/ A no-operation. Useful to prevent delay loops from being optimized away.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8496,"byte_end":8572,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8573,"byte_end":8582,"line_start":33,"line_end":33,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8765,"byte_end":8768,"line_start":42,"line_end":42,"column_start":8,"column_end":11},"name":"udf","qualname":"::asm::udf","value":"pub fn udf() -> !","parent":null,"children":[],"decl_id":null,"docs":" Generate an Undefined Instruction exception.","sig":null,"attributes":[{"value":"/ Generate an Undefined Instruction exception.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8625,"byte_end":8673,"line_start":38,"line_end":38,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8674,"byte_end":8677,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Can be used as a stable alternative to `core::intrinsics::abort`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8678,"byte_end":8747,"line_start":40,"line_end":40,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8748,"byte_end":8757,"line_start":41,"line_end":41,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":19},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8845,"byte_end":8848,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"wfe","qualname":"::asm::wfe","value":"pub fn wfe()","parent":null,"children":[],"decl_id":null,"docs":" Wait For Event\n","sig":null,"attributes":[{"value":"/ Wait For Event","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8809,"byte_end":8827,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8828,"byte_end":8837,"line_start":47,"line_end":47,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8919,"byte_end":8922,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"wfi","qualname":"::asm::wfi","value":"pub fn wfi()","parent":null,"children":[],"decl_id":null,"docs":" Wait For Interrupt\n","sig":null,"attributes":[{"value":"/ Wait For Interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8879,"byte_end":8901,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8902,"byte_end":8911,"line_start":53,"line_end":53,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":21},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8985,"byte_end":8988,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"sev","qualname":"::asm::sev","value":"pub fn sev()","parent":null,"children":[],"decl_id":null,"docs":" Send Event\n","sig":null,"attributes":[{"value":"/ Send Event","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8953,"byte_end":8967,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":8968,"byte_end":8977,"line_start":59,"line_end":59,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9248,"byte_end":9251,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"isb","qualname":"::asm::isb","value":"pub fn isb()","parent":null,"children":[],"decl_id":null,"docs":" Instruction Synchronization Barrier","sig":null,"attributes":[{"value":"/ Instruction Synchronization Barrier","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9019,"byte_end":9058,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9059,"byte_end":9062,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Flushes the pipeline in the processor, so that all instructions following the `ISB` are fetched","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9063,"byte_end":9162,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/ from cache or memory, after the instruction has been completed.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9163,"byte_end":9230,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9231,"byte_end":9240,"line_start":68,"line_end":68,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9703,"byte_end":9706,"line_start":81,"line_end":81,"column_start":8,"column_end":11},"name":"dsb","qualname":"::asm::dsb","value":"pub fn dsb()","parent":null,"children":[],"decl_id":null,"docs":" Data Synchronization Barrier","sig":null,"attributes":[{"value":"/ Data Synchronization Barrier","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9282,"byte_end":9314,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9315,"byte_end":9318,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Acts as a special kind of memory barrier. No instruction in program order after this instruction","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9319,"byte_end":9419,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ can execute until this instruction completes. This instruction completes only when both:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9420,"byte_end":9512,"line_start":76,"line_end":76,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9513,"byte_end":9516,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/  * any explicit memory access made before this instruction is complete","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9517,"byte_end":9591,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/  * all cache and branch predictor maintenance operations before this instruction complete","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9592,"byte_end":9685,"line_start":79,"line_end":79,"column_start":1,"column_end":94}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9686,"byte_end":9695,"line_start":80,"line_end":80,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":10001,"byte_end":10004,"line_start":91,"line_end":91,"column_start":8,"column_end":11},"name":"dmb","qualname":"::asm::dmb","value":"pub fn dmb()","parent":null,"children":[],"decl_id":null,"docs":" Data Memory Barrier","sig":null,"attributes":[{"value":"/ Data Memory Barrier","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9737,"byte_end":9760,"line_start":85,"line_end":85,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9761,"byte_end":9764,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Ensures that all explicit memory accesses that appear in program order before the `DMB`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9765,"byte_end":9856,"line_start":87,"line_end":87,"column_start":1,"column_end":92}},{"value":"/ instruction are observed before any explicit memory accesses that appear in program order","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9857,"byte_end":9950,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/ after the `DMB` instruction.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9951,"byte_end":9983,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":9984,"byte_end":9993,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12655,"byte_end":12674,"line_start":170,"line_end":170,"column_start":15,"column_end":34},"name":"semihosting_syscall","qualname":"::asm::semihosting_syscall","value":"pub unsafe fn semihosting_syscall(u32, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Semihosting syscall.","sig":null,"attributes":[{"value":"/ Semihosting syscall.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12521,"byte_end":12545,"line_start":166,"line_end":166,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12546,"byte_end":12549,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ This method is used by cortex-m-semihosting to provide semihosting syscalls.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12550,"byte_end":12630,"line_start":168,"line_end":168,"column_start":1,"column_end":81}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12631,"byte_end":12640,"line_start":169,"line_end":169,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13088,"byte_end":13097,"line_start":185,"line_end":185,"column_start":15,"column_end":24},"name":"bootstrap","qualname":"::asm::bootstrap","value":"pub unsafe fn bootstrap(*const u32, *const u32) -> !","parent":null,"children":[],"decl_id":null,"docs":" Bootstrap.","sig":null,"attributes":[{"value":"/ Bootstrap.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12760,"byte_end":12774,"line_start":174,"line_end":174,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12775,"byte_end":12778,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Clears CONTROL.SPSEL (setting the main stack to be the active stack),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12779,"byte_end":12852,"line_start":176,"line_end":176,"column_start":1,"column_end":74}},{"value":"/ updates the main stack pointer to the address in `msp`, then jumps","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12853,"byte_end":12923,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ to the address in `rv`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12924,"byte_end":12951,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12952,"byte_end":12955,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12956,"byte_end":12968,"line_start":180,"line_end":180,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12969,"byte_end":12972,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ `msp` and `rv` must point to valid stack memory and executable code,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":12973,"byte_end":13045,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/ respectively.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13046,"byte_end":13063,"line_start":183,"line_end":183,"column_start":1,"column_end":18}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13064,"byte_end":13073,"line_start":184,"line_end":184,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13757,"byte_end":13765,"line_start":205,"line_end":205,"column_start":15,"column_end":23},"name":"bootload","qualname":"::asm::bootload","value":"pub unsafe fn bootload(*const u32) -> !","parent":null,"children":[],"decl_id":null,"docs":" Bootload.","sig":null,"attributes":[{"value":"/ Bootload.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13282,"byte_end":13295,"line_start":192,"line_end":192,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13296,"byte_end":13299,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Reads the initial stack pointer value and reset vector from","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13300,"byte_end":13363,"line_start":194,"line_end":194,"column_start":1,"column_end":64}},{"value":"/ the provided vector table address, sets the active stack to","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13364,"byte_end":13427,"line_start":195,"line_end":195,"column_start":1,"column_end":64}},{"value":"/ the main stack, sets the main stack pointer to the new initial","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13428,"byte_end":13494,"line_start":196,"line_end":196,"column_start":1,"column_end":67}},{"value":"/ stack pointer, then jumps to the reset vector.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13495,"byte_end":13545,"line_start":197,"line_end":197,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13546,"byte_end":13549,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13550,"byte_end":13562,"line_start":199,"line_end":199,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13563,"byte_end":13566,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ The provided `vector_table` must point to a valid vector","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13567,"byte_end":13627,"line_start":201,"line_end":201,"column_start":1,"column_end":61}},{"value":"/ table, with a valid stack pointer as the first word and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13628,"byte_end":13687,"line_start":202,"line_end":202,"column_start":1,"column_end":60}},{"value":"/ a valid reset vector as the second word.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13688,"byte_end":13732,"line_start":203,"line_end":203,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/asm.rs","byte_start":13733,"byte_end":13742,"line_start":204,"line_end":204,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay","qualname":"::delay","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57}],"decl_id":null,"docs":" A delay driver based on SysTick.\n","sig":null,"attributes":[{"value":"/ A delay driver based on SysTick.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":13971,"byte_end":14007,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":35},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14176,"byte_end":14181,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Delay","qualname":"::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" System timer (SysTick) as a delay provider.\n","sig":null,"attributes":[{"value":"/ System timer (SysTick) as a delay provider.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14117,"byte_end":14164,"line_start":6,"line_end":6,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14401,"byte_end":14404,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Delay>::new","value":"pub fn new(SYST, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the system timer (SysTick) as a delay provider.","sig":null,"attributes":[{"value":"/ Configures the system timer (SysTick) as a delay provider.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14244,"byte_end":14306,"line_start":13,"line_end":13,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14311,"byte_end":14314,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ `ahb_frequency` is a frequency of the AHB bus in Hz.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14319,"byte_end":14375,"line_start":15,"line_end":15,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14380,"byte_end":14389,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14661,"byte_end":14665,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"free","qualname":"<Delay>::free","value":"pub fn free(Self) -> SYST","parent":null,"children":[],"decl_id":null,"docs":" Releases the system timer (SysTick) resource.\n","sig":null,"attributes":[{"value":"/ Releases the system timer (SysTick) resource.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14586,"byte_end":14635,"line_start":26,"line_end":26,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14640,"byte_end":14649,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14844,"byte_end":14852,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"delay_us","qualname":"<Delay>::delay_us","value":"pub fn delay_us(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Delay using the Cortex-M systick for a certain duration, in µs.\n","sig":null,"attributes":[{"value":"/ Delay using the Cortex-M systick for a certain duration, in µs.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14711,"byte_end":14779,"line_start":32,"line_end":32,"column_start":5,"column_end":72}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14784,"byte_end":14832,"line_start":33,"line_end":33,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":15657,"byte_end":15665,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"delay_ms","qualname":"<Delay>::delay_ms","value":"pub fn delay_ms(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Delay using the Cortex-M systick for a certain duration, in ms.\n","sig":null,"attributes":[{"value":"/ Delay using the Cortex-M systick for a certain duration, in ms.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":15564,"byte_end":15631,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":15636,"byte_end":15645,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interrupt","qualname":"::interrupt","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":" Interrupts\n","sig":null,"attributes":[{"value":"/ Interrupts","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17272,"byte_end":17286,"line_start":1,"line_end":1,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17975,"byte_end":17990,"line_start":19,"line_end":19,"column_start":18,"column_end":33},"name":"InterruptNumber","qualname":"::interrupt::InterruptNumber","value":"InterruptNumber: Copy","parent":null,"children":[{"krate":0,"index":65}],"decl_id":null,"docs":" Trait for enums of external interrupt numbers.","sig":null,"attributes":[{"value":"/ Trait for enums of external interrupt numbers.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17339,"byte_end":17389,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17390,"byte_end":17393,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This trait should be implemented by a peripheral access crate (PAC)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17394,"byte_end":17465,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ on its enum of available external interrupts for a specific device.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17466,"byte_end":17537,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ Each variant must convert to a u16 of its interrupt number,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17538,"byte_end":17601,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ which is its exception number - 16.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17602,"byte_end":17641,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17642,"byte_end":17645,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17646,"byte_end":17658,"line_start":12,"line_end":12,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17659,"byte_end":17662,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This trait must only be implemented on enums of device interrupts. Each","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17663,"byte_end":17738,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ enum variant must represent a distinct value (no duplicates are permitted),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17739,"byte_end":17818,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ and must always return the same value (do not change at runtime).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17819,"byte_end":17888,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17889,"byte_end":17892,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ These requirements ensure safe nesting of critical sections.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17893,"byte_end":17957,"line_start":18,"line_end":18,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18137,"byte_end":18143,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"number","qualname":"::interrupt::InterruptNumber::number","value":"pub fn number(Self) -> u16","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" Return the interrupt number associated with this variant.","sig":null,"attributes":[{"value":"/ Return the interrupt number associated with this variant.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18003,"byte_end":18064,"line_start":20,"line_end":20,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18069,"byte_end":18072,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ See trait documentation for safety requirements.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18077,"byte_end":18129,"line_start":22,"line_end":22,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18494,"byte_end":18501,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"disable","qualname":"::interrupt::disable","value":"pub fn disable()","parent":null,"children":[],"decl_id":null,"docs":" Disables all interrupts\n","sig":null,"attributes":[{"value":"/ Disables all interrupts","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18449,"byte_end":18476,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18477,"byte_end":18486,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18688,"byte_end":18694,"line_start":47,"line_end":47,"column_start":15,"column_end":21},"name":"enable","qualname":"::interrupt::enable","value":"pub unsafe fn enable()","parent":null,"children":[],"decl_id":null,"docs":" Enables all the interrupts","sig":null,"attributes":[{"value":"/ Enables all the interrupts","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18535,"byte_end":18565,"line_start":41,"line_end":41,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18566,"byte_end":18569,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18570,"byte_end":18582,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18583,"byte_end":18586,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ - Do not call this function inside an `interrupt::free` critical section","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18587,"byte_end":18663,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18664,"byte_end":18673,"line_start":46,"line_end":46,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18851,"byte_end":18855,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"free","qualname":"::interrupt::free","value":"pub fn free<F, R>(F) -> R where F: FnOnce(&CriticalSection) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute closure `f` in an interrupt-free context.","sig":null,"attributes":[{"value":"/ Execute closure `f` in an interrupt-free context.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18728,"byte_end":18781,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18782,"byte_end":18785,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This as also known as a \"critical section\".","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18786,"byte_end":18833,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18834,"byte_end":18843,"line_start":54,"line_end":54,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":74},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"itm","qualname":"::itm","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97}],"decl_id":null,"docs":" Instrumentation Trace Macrocell","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3619,"byte_end":3661,"line_start":93,"line_end":93,"column_start":1,"column_end":43}},{"value":"/ Instrumentation Trace Macrocell","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":19261,"byte_end":19296,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":19297,"byte_end":19300,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ **NOTE** This module is only available on ARMv7-M and newer.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":19301,"byte_end":19365,"line_start":3,"line_end":3,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":89},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":21021,"byte_end":21028,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Aligned","qualname":"::itm::Aligned","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper type that aligns its contents on a 4-Byte boundary.","sig":null,"attributes":[{"value":"/ A wrapper type that aligns its contents on a 4-Byte boundary.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":20772,"byte_end":20837,"line_start":68,"line_end":68,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":20838,"byte_end":20841,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ITM transfers are most efficient when the data is 4-Byte-aligned. This type provides an easy","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":20842,"byte_end":20938,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ way to accomplish and enforce such an alignment.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":20939,"byte_end":20991,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"repr(align(4))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":20992,"byte_end":21009,"line_start":72,"line_end":72,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":92},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":21040,"byte_end":21045,"line_start":73,"line_end":73,"column_start":31,"column_end":36},"name":"0","qualname":"::itm::Aligned::0","value":"T","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":93},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":21141,"byte_end":21150,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"write_all","qualname":"::itm::write_all","value":"pub fn write_all(&mut Stim, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Writes `buffer` to an ITM port.\n","sig":null,"attributes":[{"value":"/ Writes `buffer` to an ITM port.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":21049,"byte_end":21084,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":21085,"byte_end":21133,"line_start":76,"line_end":76,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22890,"byte_end":22903,"line_start":142,"line_end":142,"column_start":8,"column_end":21},"name":"write_aligned","qualname":"::itm::write_aligned","value":"pub fn write_aligned(&mut Stim, &Aligned<[u8]>)","parent":null,"children":[],"decl_id":null,"docs":" Writes a 4-byte aligned `buffer` to an ITM port.","sig":null,"attributes":[{"value":"/ Writes a 4-byte aligned `buffer` to an ITM port.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22395,"byte_end":22447,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22448,"byte_end":22451,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22452,"byte_end":22466,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22467,"byte_end":22470,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22471,"byte_end":22484,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"/ # use cortex_m::{itm::{self, Aligned}, peripheral::ITM};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22485,"byte_end":22545,"line_start":130,"line_end":130,"column_start":1,"column_end":61}},{"value":"/ # let port = unsafe { &mut (*ITM::ptr()).stim[0] };","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22546,"byte_end":22601,"line_start":131,"line_end":131,"column_start":1,"column_end":56}},{"value":"/ let mut buffer = Aligned([0; 14]);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22602,"byte_end":22640,"line_start":132,"line_end":132,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22641,"byte_end":22644,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ buffer.0.copy_from_slice(b\"Hello, world!\\n\");","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22645,"byte_end":22694,"line_start":134,"line_end":134,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22695,"byte_end":22698,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ itm::write_aligned(port, &buffer);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22699,"byte_end":22737,"line_start":136,"line_end":136,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22738,"byte_end":22741,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ // Or equivalently","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22742,"byte_end":22764,"line_start":138,"line_end":138,"column_start":1,"column_end":23}},{"value":"/ itm::write_aligned(port, &Aligned(*b\"Hello, world!\\n\"));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22765,"byte_end":22825,"line_start":139,"line_end":139,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22826,"byte_end":22833,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"allow(clippy :: missing_inline_in_public_items)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":22834,"byte_end":22882,"line_start":141,"line_end":141,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":95},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":23064,"byte_end":23073,"line_start":148,"line_end":148,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"::itm::write_fmt","value":"pub fn write_fmt(&mut Stim, fmt::Arguments)","parent":null,"children":[],"decl_id":null,"docs":" Writes `fmt::Arguments` to the ITM `port`\n","sig":null,"attributes":[{"value":"/ Writes `fmt::Arguments` to the ITM `port`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":23001,"byte_end":23046,"line_start":146,"line_end":146,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":23047,"byte_end":23056,"line_start":147,"line_end":147,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":97},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":23237,"byte_end":23246,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"write_str","qualname":"::itm::write_str","value":"pub fn write_str(&mut Stim, &str)","parent":null,"children":[],"decl_id":null,"docs":" Writes a string to the ITM `port`\n","sig":null,"attributes":[{"value":"/ Writes a string to the ITM `port`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":23182,"byte_end":23219,"line_start":154,"line_end":154,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":23220,"byte_end":23229,"line_start":155,"line_end":155,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"peripheral","qualname":"::peripheral","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":1086},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":132},{"krate":0,"index":170},{"krate":0,"index":188},{"krate":0,"index":219},{"krate":0,"index":233},{"krate":0,"index":244},{"krate":0,"index":250},{"krate":0,"index":281},{"krate":0,"index":297},{"krate":0,"index":351},{"krate":0,"index":463},{"krate":0,"index":503},{"krate":0,"index":527},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":671}],"decl_id":null,"docs":" Core peripherals.","sig":null,"attributes":[{"value":"/ Core peripherals.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23322,"byte_end":23343,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23344,"byte_end":23347,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # API","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23348,"byte_end":23357,"line_start":3,"line_end":3,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23358,"byte_end":23361,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ To use (most of) the peripheral API first you must get an *instance* of the peripheral. All the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23362,"byte_end":23461,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ core peripherals are modeled as singletons (there can only ever be, at most, one instance of any","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23462,"byte_end":23562,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/ one of them at any given point in time) and the only way to get an instance of them is through","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23563,"byte_end":23661,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ the [`Peripherals::take`](struct.Peripherals.html#method.take) method.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23662,"byte_end":23736,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23737,"byte_end":23740,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23741,"byte_end":23755,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/ # use cortex_m::peripheral::Peripherals;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23756,"byte_end":23800,"line_start":11,"line_end":11,"column_start":1,"column_end":45}},{"value":"/ let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23801,"byte_end":23856,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/ peripherals.DWT.enable_cycle_counter();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23857,"byte_end":23900,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23901,"byte_end":23908,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23909,"byte_end":23912,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This method can only be successfully called *once* -- this is why the method returns an","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":23913,"byte_end":24004,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ `Option`. Subsequent calls to the method will result in a `None` value being returned.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24005,"byte_end":24095,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24096,"byte_end":24099,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ``` no_run, should_panic","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24100,"byte_end":24128,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ # use cortex_m::peripheral::Peripherals;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24129,"byte_end":24173,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"/ let ok = Peripherals::take().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24174,"byte_end":24216,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ let panics = Peripherals::take().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24217,"byte_end":24263,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24264,"byte_end":24271,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ A part of the peripheral API doesn't require access to a peripheral instance. This part of the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24272,"byte_end":24370,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ API is provided as static methods on the peripheral types. One example is the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24371,"byte_end":24452,"line_start":25,"line_end":25,"column_start":1,"column_end":82}},{"value":"/ [`DWT::get_cycle_count`](struct.DWT.html#method.get_cycle_count) method.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24453,"byte_end":24529,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24530,"byte_end":24533,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24534,"byte_end":24548,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ # use cortex_m::peripheral::{DWT, Peripherals};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24549,"byte_end":24600,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ {","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24601,"byte_end":24606,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/     let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24607,"byte_end":24666,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/     peripherals.DWT.enable_cycle_counter();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24667,"byte_end":24714,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ } // all the peripheral singletons are destroyed here","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24715,"byte_end":24772,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24773,"byte_end":24776,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // but this method can be called without a DWT instance","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24777,"byte_end":24836,"line_start":35,"line_end":35,"column_start":1,"column_end":60}},{"value":"/ let cyccnt = DWT::get_cycle_count();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24837,"byte_end":24877,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24878,"byte_end":24885,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24886,"byte_end":24889,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The singleton property can be *unsafely* bypassed using the `ptr` static method which is","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24890,"byte_end":24982,"line_start":39,"line_end":39,"column_start":1,"column_end":93}},{"value":"/ available on all the peripheral types. This method is a useful building block for implementing","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":24983,"byte_end":25081,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/ safe higher level abstractions.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25082,"byte_end":25117,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25118,"byte_end":25121,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25122,"byte_end":25136,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/ # use cortex_m::peripheral::{DWT, Peripherals};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25137,"byte_end":25188,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ {","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25189,"byte_end":25194,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/     let mut peripherals = Peripherals::take().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25195,"byte_end":25254,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/     peripherals.DWT.enable_cycle_counter();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25255,"byte_end":25302,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ } // all the peripheral singletons are destroyed here","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25303,"byte_end":25360,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25361,"byte_end":25364,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // actually safe because this is an atomic read with no side effects","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25365,"byte_end":25437,"line_start":50,"line_end":50,"column_start":1,"column_end":73}},{"value":"/ let cyccnt = unsafe { (*DWT::ptr()).cyccnt.read() };","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25438,"byte_end":25494,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25495,"byte_end":25502,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25503,"byte_end":25506,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25507,"byte_end":25523,"line_start":54,"line_end":54,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25524,"byte_end":25527,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ - ARMv7-M Architecture Reference Manual (Issue E.b) - Chapter B3","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25528,"byte_end":25596,"line_start":56,"line_end":56,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":102},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cbp","qualname":"::peripheral::cbp","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":" Cache and branch predictor maintenance operations","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25668,"byte_end":25687,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/ Cache and branch predictor maintenance operations","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":38724,"byte_end":38777,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":38778,"byte_end":38781,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Not available on Armv6-M.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":38782,"byte_end":38818,"line_start":3,"line_end":3,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":105},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":38918,"byte_end":38931,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::cbp::RegisterBlock","value":"RegisterBlock { iciallu, icimvau, dcimvac, dcisw, dccmvau, dccmvac, dccsw, dccimvac, dccisw, bpiall }","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":38877,"byte_end":38895,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":38896,"byte_end":38906,"line_start":10,"line_end":10,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":106},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":38980,"byte_end":38987,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"iciallu","qualname":"::peripheral::cbp::RegisterBlock::iciallu","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" I-cache invalidate all to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate all to PoU","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":38938,"byte_end":38971,"line_start":12,"line_end":12,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39067,"byte_end":39074,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"icimvau","qualname":"::peripheral::cbp::RegisterBlock::icimvau","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" I-cache invalidate by MVA to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate by MVA to PoU","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39022,"byte_end":39058,"line_start":15,"line_end":15,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":109},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39134,"byte_end":39141,"line_start":18,"line_end":18,"column_start":9,"column_end":16},"name":"dcimvac","qualname":"::peripheral::cbp::RegisterBlock::dcimvac","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" D-cache invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache invalidate by MVA to PoC","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39089,"byte_end":39125,"line_start":17,"line_end":17,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":110},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39198,"byte_end":39203,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"dcisw","qualname":"::peripheral::cbp::RegisterBlock::dcisw","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" D-cache invalidate by set-way\n","sig":null,"attributes":[{"value":"/ D-cache invalidate by set-way","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39156,"byte_end":39189,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":111},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39258,"byte_end":39265,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"dccmvau","qualname":"::peripheral::cbp::RegisterBlock::dccmvau","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoU\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoU","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39218,"byte_end":39249,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":112},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39320,"byte_end":39327,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"dccmvac","qualname":"::peripheral::cbp::RegisterBlock::dccmvac","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoC","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39280,"byte_end":39311,"line_start":23,"line_end":23,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":113},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39379,"byte_end":39384,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"dccsw","qualname":"::peripheral::cbp::RegisterBlock::dccsw","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" D-cache clean by set-way\n","sig":null,"attributes":[{"value":"/ D-cache clean by set-way","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39342,"byte_end":39370,"line_start":25,"line_end":25,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":114},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39454,"byte_end":39462,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"name":"dccimvac","qualname":"::peripheral::cbp::RegisterBlock::dccimvac","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by MVA to PoC","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39399,"byte_end":39445,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":115},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39529,"byte_end":39535,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"dccisw","qualname":"::peripheral::cbp::RegisterBlock::dccisw","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by set-way\n","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by set-way","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39477,"byte_end":39520,"line_start":29,"line_end":29,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":116},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39594,"byte_end":39600,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"bpiall","qualname":"::peripheral::cbp::RegisterBlock::bpiall","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":" Branch predictor invalidate all\n","sig":null,"attributes":[{"value":"/ Branch predictor invalidate all","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39550,"byte_end":39585,"line_start":31,"line_end":31,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39866,"byte_end":39873,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"iciallu","qualname":"<CBP>::iciallu","value":"pub fn iciallu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" I-cache invalidate all to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate all to PoU","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39799,"byte_end":39832,"line_start":41,"line_end":41,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39837,"byte_end":39854,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":40010,"byte_end":40017,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"icimvau","qualname":"<CBP>::icimvau","value":"pub fn icimvau(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" I-cache invalidate by MVA to PoU\n","sig":null,"attributes":[{"value":"/ I-cache invalidate by MVA to PoU","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39940,"byte_end":39976,"line_start":47,"line_end":47,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39981,"byte_end":39998,"line_start":48,"line_end":48,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":40173,"byte_end":40180,"line_start":55,"line_end":55,"column_start":19,"column_end":26},"name":"dcimvac","qualname":"<CBP>::dcimvac","value":"pub unsafe fn dcimvac(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache invalidate by MVA to PoC","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":40096,"byte_end":40132,"line_start":53,"line_end":53,"column_start":5,"column_end":41}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":40137,"byte_end":40154,"line_start":54,"line_end":54,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":40406,"byte_end":40411,"line_start":63,"line_end":63,"column_start":19,"column_end":24},"name":"dcisw","qualname":"<CBP>::dcisw","value":"pub unsafe fn dcisw(&mut Self, u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" D-cache invalidate by set-way","sig":null,"attributes":[{"value":"/ D-cache invalidate by set-way","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":40248,"byte_end":40281,"line_start":59,"line_end":59,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":40286,"byte_end":40289,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ `set` is masked to be between 0 and 3, and `way` between 0 and 511.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":40294,"byte_end":40365,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":40370,"byte_end":40387,"line_start":62,"line_end":62,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41444,"byte_end":41451,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"dccmvau","qualname":"<CBP>::dccmvau","value":"pub fn dccmvau(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoU\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoU","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41379,"byte_end":41410,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41415,"byte_end":41432,"line_start":80,"line_end":80,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41615,"byte_end":41622,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"dccmvac","qualname":"<CBP>::dccmvac","value":"pub fn dccmvac(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean by MVA to PoC","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41550,"byte_end":41581,"line_start":87,"line_end":87,"column_start":5,"column_end":36}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41586,"byte_end":41603,"line_start":88,"line_end":88,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41867,"byte_end":41872,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"dccsw","qualname":"<CBP>::dccsw","value":"pub fn dccsw(&mut Self, u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean by set-way","sig":null,"attributes":[{"value":"/ D-cache clean by set-way","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41721,"byte_end":41749,"line_start":95,"line_end":95,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41754,"byte_end":41757,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ `set` is masked to be between 0 and 3, and `way` between 0 and 511.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41762,"byte_end":41833,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":41838,"byte_end":41855,"line_start":98,"line_end":98,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42315,"byte_end":42323,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"name":"dccimvac","qualname":"<CBP>::dccimvac","value":"pub fn dccimvac(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by MVA to PoC\n","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by MVA to PoC","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42235,"byte_end":42281,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42286,"byte_end":42303,"line_start":110,"line_end":110,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42584,"byte_end":42590,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"name":"dccisw","qualname":"<CBP>::dccisw","value":"pub fn dccisw(&mut Self, u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" D-cache clean and invalidate by set-way","sig":null,"attributes":[{"value":"/ D-cache clean and invalidate by set-way","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42423,"byte_end":42466,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42471,"byte_end":42474,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ `set` is masked to be between 0 and 3, and `way` between 0 and 511.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42479,"byte_end":42550,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42555,"byte_end":42572,"line_start":120,"line_end":120,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":43023,"byte_end":43029,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"bpiall","qualname":"<CBP>::bpiall","value":"pub fn bpiall(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Branch predictor invalidate all\n","sig":null,"attributes":[{"value":"/ Branch predictor invalidate all","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42954,"byte_end":42989,"line_start":131,"line_end":131,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":42994,"byte_end":43011,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":132},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cpuid","qualname":"::peripheral::cpuid","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":787},{"krate":0,"index":804},{"krate":0,"index":802},{"krate":0,"index":800},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":153}],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"/ CPUID","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43113,"byte_end":43122,"line_start":1,"line_end":1,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43291,"byte_end":43304,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::cpuid::RegisterBlock","value":"RegisterBlock { base, pfr, dfr, afr, mmfr, isar, clidr, ctr, ccsidr, csselr }","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43250,"byte_end":43268,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43269,"byte_end":43279,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":137},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43334,"byte_end":43338,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"base","qualname":"::peripheral::cpuid::RegisterBlock::base","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" CPUID base\n","sig":null,"attributes":[{"value":"/ CPUID base","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43311,"byte_end":43325,"line_start":13,"line_end":13,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":140},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43472,"byte_end":43475,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"pfr","qualname":"::peripheral::cpuid::RegisterBlock::pfr","value":"[volatile_register::RO<u32>; 2]","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Processor Feature (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Processor Feature (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43382,"byte_end":43439,"line_start":18,"line_end":18,"column_start":5,"column_end":62}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43444,"byte_end":43463,"line_start":19,"line_end":19,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43627,"byte_end":43630,"line_start":26,"line_end":26,"column_start":9,"column_end":12},"name":"dfr","qualname":"::peripheral::cpuid::RegisterBlock::dfr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Debug Feature (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Debug Feature (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43541,"byte_end":43594,"line_start":24,"line_end":24,"column_start":5,"column_end":58}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43599,"byte_end":43618,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":143},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43776,"byte_end":43779,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"afr","qualname":"::peripheral::cpuid::RegisterBlock::afr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Auxiliary Feature (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Auxiliary Feature (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43686,"byte_end":43743,"line_start":30,"line_end":30,"column_start":5,"column_end":62}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43748,"byte_end":43767,"line_start":31,"line_end":31,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":144},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43928,"byte_end":43932,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"mmfr","qualname":"::peripheral::cpuid::RegisterBlock::mmfr","value":"[volatile_register::RO<u32>; 4]","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Memory Model Feature (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Memory Model Feature (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43835,"byte_end":43895,"line_start":36,"line_end":36,"column_start":5,"column_end":65}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43900,"byte_end":43919,"line_start":37,"line_end":37,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44096,"byte_end":44100,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"isar","qualname":"::peripheral::cpuid::RegisterBlock::isar","value":"[volatile_register::RO<u32>; 5]","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Instruction Set Attribute (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Instruction Set Attribute (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":43998,"byte_end":44063,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44068,"byte_end":44087,"line_start":43,"line_end":43,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":149},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44267,"byte_end":44272,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"name":"clidr","qualname":"::peripheral::cpuid::RegisterBlock::clidr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Cache Level ID (only present on Cortex-M7)\n","sig":null,"attributes":[{"value":"/ Cache Level ID (only present on Cortex-M7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44188,"byte_end":44234,"line_start":50,"line_end":50,"column_start":5,"column_end":51}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44239,"byte_end":44258,"line_start":51,"line_end":51,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":150},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44363,"byte_end":44366,"line_start":56,"line_end":56,"column_start":9,"column_end":12},"name":"ctr","qualname":"::peripheral::cpuid::RegisterBlock::ctr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Cache Type (only present on Cortex-M7)\n","sig":null,"attributes":[{"value":"/ Cache Type (only present on Cortex-M7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44288,"byte_end":44330,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44335,"byte_end":44354,"line_start":55,"line_end":55,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":151},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44460,"byte_end":44466,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"ccsidr","qualname":"::peripheral::cpuid::RegisterBlock::ccsidr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Cache Size ID (only present on Cortex-M7)\n","sig":null,"attributes":[{"value":"/ Cache Size ID (only present on Cortex-M7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44382,"byte_end":44427,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44432,"byte_end":44451,"line_start":59,"line_end":59,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":152},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44567,"byte_end":44573,"line_start":64,"line_end":64,"column_start":9,"column_end":15},"name":"csselr","qualname":"::peripheral::cpuid::RegisterBlock::csselr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":" Cache Size Selection (only present on Cortex-M7)\n","sig":null,"attributes":[{"value":"/ Cache Size Selection (only present on Cortex-M7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44482,"byte_end":44534,"line_start":62,"line_end":62,"column_start":5,"column_end":57}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44539,"byte_end":44558,"line_start":63,"line_end":63,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":788},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44768,"byte_end":44781,"line_start":72,"line_end":72,"column_start":5,"column_end":18},"name":"DataOrUnified","qualname":"::peripheral::cpuid::CsselrCacheType::DataOrUnified","value":"CsselrCacheType::DataOrUnified","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Select DCache or unified cache\n","sig":null,"attributes":[{"value":"/ Select DCache or unified cache","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44729,"byte_end":44763,"line_start":71,"line_end":71,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44813,"byte_end":44824,"line_start":74,"line_end":74,"column_start":5,"column_end":16},"name":"Instruction","qualname":"::peripheral::cpuid::CsselrCacheType::Instruction","value":"CsselrCacheType::Instruction","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":" Select ICache\n","sig":null,"attributes":[{"value":"/ Select ICache","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44791,"byte_end":44808,"line_start":73,"line_end":73,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":787},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44707,"byte_end":44722,"line_start":70,"line_end":70,"column_start":10,"column_end":25},"name":"CsselrCacheType","qualname":"::peripheral::cpuid::CsselrCacheType","value":"pub enum CsselrCacheType {\n\n    /// Select DCache or unified cache\n    DataOrUnified = ,\n\n    /// Select ICache\n    Instruction = ,\n}","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":791}],"decl_id":null,"docs":" Type of cache to select on CSSELR writes.\n","sig":null,"attributes":[{"value":"/ Type of cache to select on CSSELR writes.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44587,"byte_end":44632,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44633,"byte_end":44652,"line_start":68,"line_end":68,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":45132,"byte_end":45144,"line_start":86,"line_end":86,"column_start":12,"column_end":24},"name":"select_cache","qualname":"<CPUID>::select_cache","value":"pub fn select_cache(&mut Self, u8, CsselrCacheType)","parent":null,"children":[],"decl_id":null,"docs":" Selects the current CCSIDR","sig":null,"attributes":[{"value":"/ Selects the current CCSIDR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44870,"byte_end":44900,"line_start":79,"line_end":79,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44905,"byte_end":44908,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ * `level`: the required cache level minus 1, e.g. 0 for L1, 1 for L2","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44913,"byte_end":44985,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ * `ind`: select instruction cache or data/unified cache","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44990,"byte_end":45049,"line_start":82,"line_end":82,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":45054,"byte_end":45057,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ `level` is masked to be between 0 and 7.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":45062,"byte_end":45106,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":45111,"byte_end":45120,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":45717,"byte_end":45736,"line_start":102,"line_end":102,"column_start":12,"column_end":31},"name":"cache_num_sets_ways","qualname":"<CPUID>::cache_num_sets_ways","value":"pub fn cache_num_sets_ways(&mut Self, u8, CsselrCacheType) -> (u16, u16)","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of sets and ways in the selected cache\n","sig":null,"attributes":[{"value":"/ Returns the number of sets and ways in the selected cache","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":45630,"byte_end":45691,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":45696,"byte_end":45705,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":46609,"byte_end":46623,"line_start":122,"line_end":122,"column_start":12,"column_end":26},"name":"cache_dminline","qualname":"<CPUID>::cache_dminline","value":"pub fn cache_dminline() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns log2 of the number of words in the smallest cache line of all the data cache and\n unified caches that are controlled by the processor.","sig":null,"attributes":[{"value":"/ Returns log2 of the number of words in the smallest cache line of all the data cache and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":46356,"byte_end":46448,"line_start":117,"line_end":117,"column_start":5,"column_end":97}},{"value":"/ unified caches that are controlled by the processor.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":46453,"byte_end":46509,"line_start":118,"line_end":118,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":46514,"byte_end":46517,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This is the `DminLine` field of the CTR register.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":46522,"byte_end":46575,"line_start":120,"line_end":120,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":46580,"byte_end":46597,"line_start":121,"line_end":121,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":47104,"byte_end":47118,"line_start":134,"line_end":134,"column_start":12,"column_end":26},"name":"cache_iminline","qualname":"<CPUID>::cache_iminline","value":"pub fn cache_iminline() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns log2 of the number of words in the smallest cache line of all the instruction\n caches that are controlled by the processor.","sig":null,"attributes":[{"value":"/ Returns log2 of the number of words in the smallest cache line of all the instruction","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":46862,"byte_end":46951,"line_start":129,"line_end":129,"column_start":5,"column_end":94}},{"value":"/ caches that are controlled by the processor.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":46956,"byte_end":47004,"line_start":130,"line_end":130,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":47009,"byte_end":47012,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is the `IminLine` field of the CTR register.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":47017,"byte_end":47070,"line_start":132,"line_end":132,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":47075,"byte_end":47092,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":170},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dcb","qualname":"::peripheral::dcb","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":182}],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"/ Debug Control Block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47354,"byte_end":47377,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":177},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47538,"byte_end":47551,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::dcb::RegisterBlock","value":"RegisterBlock { dhcsr, dcrsr, dcrdr, demcr }","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47497,"byte_end":47515,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47516,"byte_end":47526,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":178},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47603,"byte_end":47608,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"dhcsr","qualname":"::peripheral::dcb::RegisterBlock::dhcsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Debug Halting Control and Status\n","sig":null,"attributes":[{"value":"/ Debug Halting Control and Status","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47558,"byte_end":47594,"line_start":13,"line_end":13,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":179},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47664,"byte_end":47669,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"dcrsr","qualname":"::peripheral::dcb::RegisterBlock::dcrsr","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Debug Core Register Selector\n","sig":null,"attributes":[{"value":"/ Debug Core Register Selector","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47623,"byte_end":47655,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":180},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47721,"byte_end":47726,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"dcrdr","qualname":"::peripheral::dcb::RegisterBlock::dcrdr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Debug Core Register Data\n","sig":null,"attributes":[{"value":"/ Debug Core Register Data","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47684,"byte_end":47712,"line_start":17,"line_end":17,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":181},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47789,"byte_end":47794,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"demcr","qualname":"::peripheral::dcb::RegisterBlock::demcr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Debug Exception and Monitor Control\n","sig":null,"attributes":[{"value":"/ Debug Exception and Monitor Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47741,"byte_end":47780,"line_start":19,"line_end":19,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48061,"byte_end":48073,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"name":"enable_trace","qualname":"<DCB>::enable_trace","value":"pub fn enable_trace(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables TRACE. This is for example required by the\n `peripheral::DWT` cycle counter to work properly.\n As by STM documentation, this flag is not reset on\n soft-reset, only on power reset.\n","sig":null,"attributes":[{"value":"/ Enables TRACE. This is for example required by the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47823,"byte_end":47877,"line_start":24,"line_end":24,"column_start":5,"column_end":59}},{"value":"/ `peripheral::DWT` cycle counter to work properly.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47882,"byte_end":47935,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ As by STM documentation, this flag is not reset on","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47940,"byte_end":47994,"line_start":26,"line_end":26,"column_start":5,"column_end":59}},{"value":"/ soft-reset, only on power reset.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47999,"byte_end":48035,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48040,"byte_end":48049,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48301,"byte_end":48314,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"disable_trace","qualname":"<DCB>::disable_trace","value":"pub fn disable_trace(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables TRACE. See `DCB::enable_trace()` for more details\n","sig":null,"attributes":[{"value":"/ Disables TRACE. See `DCB::enable_trace()` for more details","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48213,"byte_end":48275,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48280,"byte_end":48289,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":49075,"byte_end":49095,"line_start":53,"line_end":53,"column_start":12,"column_end":32},"name":"is_debugger_attached","qualname":"<DCB>::is_debugger_attached","value":"pub fn is_debugger_attached() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is there a debugger attached? (see note)","sig":null,"attributes":[{"value":"/ Is there a debugger attached? (see note)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48457,"byte_end":48501,"line_start":45,"line_end":45,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48506,"byte_end":48509,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note: This function is [reported not to","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48514,"byte_end":48557,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/ work](http://web.archive.org/web/20180821191012/https://community.nxp.com/thread/424925#comment-782843)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48562,"byte_end":48669,"line_start":48,"line_end":48,"column_start":5,"column_end":112}},{"value":"/ on Cortex-M0 devices. Per the ARM v6-M Architecture Reference Manual, \"Access to the DHCSR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48674,"byte_end":48768,"line_start":49,"line_end":49,"column_start":5,"column_end":99}},{"value":"/ from software running on the processor is IMPLEMENTATION DEFINED\". Indeed, from the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48773,"byte_end":48860,"line_start":50,"line_end":50,"column_start":5,"column_end":92}},{"value":"/ [Cortex-M0+ r0p1 Technical Reference Manual](http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0484c/BABJHEIG.html), \"Note Software cannot access the debug registers.\"","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":48865,"byte_end":49049,"line_start":51,"line_end":51,"column_start":5,"column_end":189}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":49054,"byte_end":49063,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dwt","qualname":"::peripheral::dwt","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":209},{"krate":0,"index":214}],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"/ Data Watchpoint and Trace unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49321,"byte_end":49355,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49508,"byte_end":49521,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::dwt::RegisterBlock","value":"RegisterBlock { ctrl, cyccnt, cpicnt, exccnt, sleepcnt, lsucnt, foldcnt, pcsr, c, lar, lsr }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49467,"byte_end":49485,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49486,"byte_end":49496,"line_start":10,"line_end":10,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":195},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49548,"byte_end":49552,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::peripheral::dwt::RegisterBlock::ctrl","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Control\n","sig":null,"attributes":[{"value":"/ Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49528,"byte_end":49539,"line_start":12,"line_end":12,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":196},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49615,"byte_end":49621,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"cyccnt","qualname":"::peripheral::dwt::RegisterBlock::cyccnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Cycle Count\n","sig":null,"attributes":[{"value":"/ Cycle Count","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49567,"byte_end":49582,"line_start":14,"line_end":14,"column_start":5,"column_end":20}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49587,"byte_end":49606,"line_start":15,"line_end":15,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":197},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49682,"byte_end":49688,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"cpicnt","qualname":"::peripheral::dwt::RegisterBlock::cpicnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" CPI Count\n","sig":null,"attributes":[{"value":"/ CPI Count","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49636,"byte_end":49649,"line_start":17,"line_end":17,"column_start":5,"column_end":18}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49654,"byte_end":49673,"line_start":18,"line_end":18,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":198},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49764,"byte_end":49770,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"name":"exccnt","qualname":"::peripheral::dwt::RegisterBlock::exccnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Exception Overhead Count\n","sig":null,"attributes":[{"value":"/ Exception Overhead Count","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49703,"byte_end":49731,"line_start":20,"line_end":20,"column_start":5,"column_end":33}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49736,"byte_end":49755,"line_start":21,"line_end":21,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":199},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49833,"byte_end":49841,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"name":"sleepcnt","qualname":"::peripheral::dwt::RegisterBlock::sleepcnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Sleep Count\n","sig":null,"attributes":[{"value":"/ Sleep Count","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49785,"byte_end":49800,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49805,"byte_end":49824,"line_start":24,"line_end":24,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":200},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49902,"byte_end":49908,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"name":"lsucnt","qualname":"::peripheral::dwt::RegisterBlock::lsucnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" LSU Count\n","sig":null,"attributes":[{"value":"/ LSU Count","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49856,"byte_end":49869,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49874,"byte_end":49893,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":201},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49984,"byte_end":49991,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"foldcnt","qualname":"::peripheral::dwt::RegisterBlock::foldcnt","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Folded-instruction Count\n","sig":null,"attributes":[{"value":"/ Folded-instruction Count","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49923,"byte_end":49951,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":49956,"byte_end":49975,"line_start":30,"line_end":30,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":202},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50132,"byte_end":50136,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"pcsr","qualname":"::peripheral::dwt::RegisterBlock::pcsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Program Counter Sample\n","sig":null,"attributes":[{"value":"/ Program Counter Sample","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50097,"byte_end":50123,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":203},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50266,"byte_end":50267,"line_start":42,"line_end":42,"column_start":9,"column_end":10},"name":"c","qualname":"::peripheral::dwt::RegisterBlock::c","value":"[peripheral::dwt::Comparator; 16]","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Comparators\n","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50218,"byte_end":50237,"line_start":40,"line_end":40,"column_start":5,"column_end":24}},{"value":"/ Comparators","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50242,"byte_end":50257,"line_start":41,"line_end":41,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":207},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50389,"byte_end":50392,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"lar","qualname":"::peripheral::dwt::RegisterBlock::lar","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Lock Access\n","sig":null,"attributes":[{"value":"/ Lock Access","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50341,"byte_end":50356,"line_start":45,"line_end":45,"column_start":5,"column_end":20}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50361,"byte_end":50380,"line_start":46,"line_end":46,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":208},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50455,"byte_end":50458,"line_start":50,"line_end":50,"column_start":9,"column_end":12},"name":"lsr","qualname":"::peripheral::dwt::RegisterBlock::lsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":194},"children":[],"decl_id":null,"docs":" Lock Status\n","sig":null,"attributes":[{"value":"/ Lock Status","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50407,"byte_end":50422,"line_start":48,"line_end":48,"column_start":5,"column_end":20}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50427,"byte_end":50446,"line_start":49,"line_end":49,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50509,"byte_end":50519,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"Comparator","qualname":"::peripheral::dwt::Comparator","value":"Comparator { comp, mask, function }","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213}],"decl_id":null,"docs":" Comparator\n","sig":null,"attributes":[{"value":"/ Comparator","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50472,"byte_end":50486,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50487,"byte_end":50497,"line_start":54,"line_end":54,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":210},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50549,"byte_end":50553,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"name":"comp","qualname":"::peripheral::dwt::Comparator::comp","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Comparator\n","sig":null,"attributes":[{"value":"/ Comparator","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50526,"byte_end":50540,"line_start":56,"line_end":56,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":211},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50596,"byte_end":50600,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"name":"mask","qualname":"::peripheral::dwt::Comparator::mask","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Comparator Mask\n","sig":null,"attributes":[{"value":"/ Comparator Mask","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50568,"byte_end":50587,"line_start":58,"line_end":58,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":212},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50647,"byte_end":50655,"line_start":61,"line_end":61,"column_start":9,"column_end":17},"name":"function","qualname":"::peripheral::dwt::Comparator::function","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Comparator Function\n","sig":null,"attributes":[{"value":"/ Comparator Function","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50615,"byte_end":50638,"line_start":60,"line_end":60,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50782,"byte_end":50802,"line_start":69,"line_end":69,"column_start":12,"column_end":32},"name":"enable_cycle_counter","qualname":"<DWT>::enable_cycle_counter","value":"pub fn enable_cycle_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables the cycle counter\n","sig":null,"attributes":[{"value":"/ Enables the cycle counter","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50703,"byte_end":50732,"line_start":66,"line_end":66,"column_start":5,"column_end":34}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50737,"byte_end":50756,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50761,"byte_end":50770,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50965,"byte_end":50980,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"get_cycle_count","qualname":"<DWT>::get_cycle_count","value":"pub fn get_cycle_count() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current clock cycle count\n","sig":null,"attributes":[{"value":"/ Returns the current clock cycle count","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50874,"byte_end":50915,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50920,"byte_end":50939,"line_start":74,"line_end":74,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50944,"byte_end":50953,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":51289,"byte_end":51295,"line_start":86,"line_end":86,"column_start":12,"column_end":18},"name":"unlock","qualname":"<DWT>::unlock","value":"pub fn unlock()","parent":null,"children":[],"decl_id":null,"docs":" Removes the software lock on the DWT","sig":null,"attributes":[{"value":"/ Removes the software lock on the DWT","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":51108,"byte_end":51148,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":51153,"byte_end":51156,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Some devices, like the STM32F7, software lock the DWT after a power cycle.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":51161,"byte_end":51239,"line_start":83,"line_end":83,"column_start":5,"column_end":83}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":51244,"byte_end":51263,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":51268,"byte_end":51277,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":219},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fpb","qualname":"::peripheral::fpb","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" Flash Patch and Breakpoint unit","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25742,"byte_end":25761,"line_start":68,"line_end":68,"column_start":1,"column_end":20}},{"value":"/ Flash Patch and Breakpoint unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51439,"byte_end":51474,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51475,"byte_end":51478,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Not available on Armv6-M.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51479,"byte_end":51515,"line_start":3,"line_end":3,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":224},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51596,"byte_end":51609,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::fpb::RegisterBlock","value":"RegisterBlock { ctrl, remap, comp, lar, lsr }","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":232}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51555,"byte_end":51573,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51574,"byte_end":51584,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":225},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51636,"byte_end":51640,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::peripheral::fpb::RegisterBlock::ctrl","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Control\n","sig":null,"attributes":[{"value":"/ Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51616,"byte_end":51627,"line_start":10,"line_end":10,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":226},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51673,"byte_end":51678,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"remap","qualname":"::peripheral::fpb::RegisterBlock::remap","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Remap\n","sig":null,"attributes":[{"value":"/ Remap","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51655,"byte_end":51664,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":227},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51716,"byte_end":51720,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"comp","qualname":"::peripheral::fpb::RegisterBlock::comp","value":"[volatile_register::RW<u32>; 127]","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Comparator\n","sig":null,"attributes":[{"value":"/ Comparator","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51693,"byte_end":51707,"line_start":14,"line_end":14,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":231},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51792,"byte_end":51795,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"name":"lar","qualname":"::peripheral::fpb::RegisterBlock::lar","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Lock Access\n","sig":null,"attributes":[{"value":"/ Lock Access","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51768,"byte_end":51783,"line_start":17,"line_end":17,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":232},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51834,"byte_end":51837,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"lsr","qualname":"::peripheral::fpb::RegisterBlock::lsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":" Lock Status\n","sig":null,"attributes":[{"value":"/ Lock Status","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpb.rs","byte_start":51810,"byte_end":51825,"line_start":19,"line_end":19,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":233},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fpu","qualname":"::peripheral::fpu","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"decl_id":null,"docs":" Floating Point Unit","sig":null,"attributes":[{"value":"cfg(any(has_fpu, target_arch = \"x86_64\"))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25826,"byte_end":25870,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ Floating Point Unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":51851,"byte_end":51874,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":51875,"byte_end":51878,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Available only on targets with a Floating Point Unit (FPU) extension.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":51879,"byte_end":51959,"line_start":3,"line_end":3,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":237},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52036,"byte_end":52049,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::fpu::RegisterBlock","value":"RegisterBlock { fpccr, fpcar, fpdscr, mvfr }","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":51995,"byte_end":52013,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52014,"byte_end":52024,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":239},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52118,"byte_end":52123,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"fpccr","qualname":"::peripheral::fpu::RegisterBlock::fpccr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Floating Point Context Control\n","sig":null,"attributes":[{"value":"/ Floating Point Context Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52075,"byte_end":52109,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":240},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52181,"byte_end":52186,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"fpcar","qualname":"::peripheral::fpu::RegisterBlock::fpcar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Floating Point Context Address\n","sig":null,"attributes":[{"value":"/ Floating Point Context Address","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52138,"byte_end":52172,"line_start":13,"line_end":13,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":241},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52251,"byte_end":52257,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"fpdscr","qualname":"::peripheral::fpu::RegisterBlock::fpdscr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Floating Point Default Status Control\n","sig":null,"attributes":[{"value":"/ Floating Point Default Status Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52201,"byte_end":52242,"line_start":15,"line_end":15,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":242},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52305,"byte_end":52309,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"mvfr","qualname":"::peripheral::fpu::RegisterBlock::mvfr","value":"[volatile_register::RO<u32>; 3]","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Media and FP Feature\n","sig":null,"attributes":[{"value":"/ Media and FP Feature","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/fpu.rs","byte_start":52272,"byte_end":52296,"line_start":17,"line_end":17,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":244},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"icb","qualname":"::peripheral::icb","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" Implementation Control Block\n","sig":null,"attributes":[{"value":"/ Implementation Control Block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52328,"byte_end":52360,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52510,"byte_end":52523,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::icb::RegisterBlock","value":"RegisterBlock { ictr, actlr }","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52469,"byte_end":52487,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52488,"byte_end":52498,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":248},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52814,"byte_end":52818,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"ictr","qualname":"::peripheral::icb::RegisterBlock::ictr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" Interrupt Controller Type Register","sig":null,"attributes":[{"value":"/ Interrupt Controller Type Register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52530,"byte_end":52568,"line_start":10,"line_end":10,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52573,"byte_end":52576,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ The bottom four bits of this register give the number of implemented","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52581,"byte_end":52653,"line_start":12,"line_end":12,"column_start":5,"column_end":77}},{"value":"/ interrupt lines, divided by 32. So a value of `0b0010` indicates 64","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52658,"byte_end":52729,"line_start":13,"line_end":13,"column_start":5,"column_end":76}},{"value":"/ interrupts.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52734,"byte_end":52749,"line_start":14,"line_end":14,"column_start":5,"column_end":20}},{"value":"cfg(any(armv7m, armv8m, target_arch = \"x86_64\"))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":52754,"byte_end":52805,"line_start":15,"line_end":15,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":249},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":53221,"byte_end":53226,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"actlr","qualname":"::peripheral::icb::RegisterBlock::actlr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":247},"children":[],"decl_id":null,"docs":" Auxiliary Control Register","sig":null,"attributes":[{"value":"/ Auxiliary Control Register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":53030,"byte_end":53060,"line_start":23,"line_end":23,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":53065,"byte_end":53068,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ This register is entirely implementation defined -- the standard gives","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":53073,"byte_end":53147,"line_start":25,"line_end":25,"column_start":5,"column_end":79}},{"value":"/ it an address, but does not define its role or contents.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/icb.rs","byte_start":53152,"byte_end":53212,"line_start":26,"line_end":26,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":250},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"itm","qualname":"::peripheral::itm","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":274},{"krate":0,"index":276}],"decl_id":null,"docs":" Instrumentation Trace Macrocell","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25897,"byte_end":25939,"line_start":74,"line_end":74,"column_start":1,"column_end":43}},{"value":"/ Instrumentation Trace Macrocell","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53327,"byte_end":53362,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53363,"byte_end":53366,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Not available on Armv6-M and Armv8-M Baseline.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53367,"byte_end":53424,"line_start":3,"line_end":3,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":257},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53549,"byte_end":53562,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::itm::RegisterBlock","value":"RegisterBlock { stim, ter, tpr, tcr, lar, lsr }","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":273}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53508,"byte_end":53526,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53527,"byte_end":53537,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":258},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53595,"byte_end":53599,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"stim","qualname":"::peripheral::itm::RegisterBlock::stim","value":"[peripheral::itm::Stim; 256]","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Stimulus Port\n","sig":null,"attributes":[{"value":"/ Stimulus Port","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53569,"byte_end":53586,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":262},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53670,"byte_end":53673,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"ter","qualname":"::peripheral::itm::RegisterBlock::ter","value":"[volatile_register::RW<u32>; 8]","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Trace Enable\n","sig":null,"attributes":[{"value":"/ Trace Enable","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53645,"byte_end":53661,"line_start":16,"line_end":16,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":266},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53746,"byte_end":53749,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"tpr","qualname":"::peripheral::itm::RegisterBlock::tpr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Trace Privilege\n","sig":null,"attributes":[{"value":"/ Trace Privilege","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53718,"byte_end":53737,"line_start":19,"line_end":19,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":269},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53816,"byte_end":53819,"line_start":23,"line_end":23,"column_start":9,"column_end":12},"name":"tcr","qualname":"::peripheral::itm::RegisterBlock::tcr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Trace Control\n","sig":null,"attributes":[{"value":"/ Trace Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53790,"byte_end":53807,"line_start":22,"line_end":22,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":272},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53884,"byte_end":53887,"line_start":26,"line_end":26,"column_start":9,"column_end":12},"name":"lar","qualname":"::peripheral::itm::RegisterBlock::lar","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Lock Access\n","sig":null,"attributes":[{"value":"/ Lock Access","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53860,"byte_end":53875,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":273},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53926,"byte_end":53929,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"lsr","qualname":"::peripheral::itm::RegisterBlock::lsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":257},"children":[],"decl_id":null,"docs":" Lock Status\n","sig":null,"attributes":[{"value":"/ Lock Status","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53902,"byte_end":53917,"line_start":27,"line_end":27,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":274},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53972,"byte_end":53976,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Stim","qualname":"::peripheral::itm::Stim","value":"Stim {  }","parent":null,"children":[{"krate":0,"index":275}],"decl_id":null,"docs":" Stimulus Port\n","sig":null,"attributes":[{"value":"/ Stimulus Port","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":53943,"byte_end":53960,"line_start":31,"line_end":31,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54104,"byte_end":54112,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"write_u8","qualname":"<Stim>::write_u8","value":"pub fn write_u8(&mut Self, u8)","parent":null,"children":[],"decl_id":null,"docs":" Writes an `u8` payload into the stimulus port\n","sig":null,"attributes":[{"value":"/ Writes an `u8` payload into the stimulus port","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54029,"byte_end":54078,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54083,"byte_end":54092,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54302,"byte_end":54311,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"write_u16","qualname":"<Stim>::write_u16","value":"pub fn write_u16(&mut Self, u16)","parent":null,"children":[],"decl_id":null,"docs":" Writes an `u16` payload into the stimulus port\n","sig":null,"attributes":[{"value":"/ Writes an `u16` payload into the stimulus port","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54226,"byte_end":54276,"line_start":43,"line_end":43,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54281,"byte_end":54290,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54503,"byte_end":54512,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"write_u32","qualname":"<Stim>::write_u32","value":"pub fn write_u32(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Writes an `u32` payload into the stimulus port\n","sig":null,"attributes":[{"value":"/ Writes an `u32` payload into the stimulus port","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54427,"byte_end":54477,"line_start":49,"line_end":49,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54482,"byte_end":54491,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54734,"byte_end":54747,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"is_fifo_ready","qualname":"<Stim>::is_fifo_ready","value":"pub fn is_fifo_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the stimulus port is ready to accept more data\n","sig":null,"attributes":[{"value":"/ Returns `true` if the stimulus port is ready to accept more data","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54616,"byte_end":54684,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"cfg(not(armv8m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54689,"byte_end":54708,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54713,"byte_end":54722,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":281},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpu","qualname":"::peripheral::mpu","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55252,"byte_end":55278,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55387,"byte_end":55400,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::mpu::RegisterBlock","value":"RegisterBlock { _type, ctrl, rnr, rbar, rasr, rbar_a1, rasr_a1, rbar_a2, rasr_a2, rbar_a3, rasr_a3 }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"decl_id":null,"docs":" Register block for ARMv7-M\n","sig":null,"attributes":[{"value":"/ Register block for ARMv7-M","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55314,"byte_end":55344,"line_start":5,"line_end":5,"column_start":1,"column_end":31}},{"value":"cfg(not(armv8m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55345,"byte_end":55364,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55365,"byte_end":55375,"line_start":7,"line_end":7,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":286},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55424,"byte_end":55429,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"_type","qualname":"::peripheral::mpu::RegisterBlock::_type","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Type\n","sig":null,"attributes":[{"value":"/ Type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55407,"byte_end":55415,"line_start":9,"line_end":9,"column_start":5,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":287},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55464,"byte_end":55468,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::peripheral::mpu::RegisterBlock::ctrl","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Control\n","sig":null,"attributes":[{"value":"/ Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55444,"byte_end":55455,"line_start":11,"line_end":11,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":288},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55509,"byte_end":55512,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"rnr","qualname":"::peripheral::mpu::RegisterBlock::rnr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Region Number\n","sig":null,"attributes":[{"value":"/ Region Number","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55483,"byte_end":55500,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":289},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55559,"byte_end":55563,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"rbar","qualname":"::peripheral::mpu::RegisterBlock::rbar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Region Base Address\n","sig":null,"attributes":[{"value":"/ Region Base Address","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55527,"byte_end":55550,"line_start":15,"line_end":15,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":290},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55616,"byte_end":55620,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"rasr","qualname":"::peripheral::mpu::RegisterBlock::rasr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Region Attribute and Size\n","sig":null,"attributes":[{"value":"/ Region Attribute and Size","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55578,"byte_end":55607,"line_start":17,"line_end":17,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":291},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55663,"byte_end":55670,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"rbar_a1","qualname":"::peripheral::mpu::RegisterBlock::rbar_a1","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Alias 1 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 1 of RBAR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55635,"byte_end":55654,"line_start":19,"line_end":19,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":292},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55713,"byte_end":55720,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"rasr_a1","qualname":"::peripheral::mpu::RegisterBlock::rasr_a1","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Alias 1 of RASR\n","sig":null,"attributes":[{"value":"/ Alias 1 of RASR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55685,"byte_end":55704,"line_start":21,"line_end":21,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":293},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55763,"byte_end":55770,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"rbar_a2","qualname":"::peripheral::mpu::RegisterBlock::rbar_a2","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Alias 2 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 2 of RBAR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55735,"byte_end":55754,"line_start":23,"line_end":23,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":294},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55813,"byte_end":55820,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"name":"rasr_a2","qualname":"::peripheral::mpu::RegisterBlock::rasr_a2","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Alias 2 of RASR\n","sig":null,"attributes":[{"value":"/ Alias 2 of RASR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55785,"byte_end":55804,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":295},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55863,"byte_end":55870,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"name":"rbar_a3","qualname":"::peripheral::mpu::RegisterBlock::rbar_a3","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Alias 3 of RBAR\n","sig":null,"attributes":[{"value":"/ Alias 3 of RBAR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55835,"byte_end":55854,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":296},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55913,"byte_end":55920,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"rasr_a3","qualname":"::peripheral::mpu::RegisterBlock::rasr_a3","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Alias 3 of RASR\n","sig":null,"attributes":[{"value":"/ Alias 3 of RASR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mpu.rs","byte_start":55885,"byte_end":55904,"line_start":29,"line_end":29,"column_start":5,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":297},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nvic","qualname":"::peripheral::nvic","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":330}],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":56684,"byte_end":56722,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":56915,"byte_end":56928,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::nvic::RegisterBlock","value":"RegisterBlock { iser, icer, ispr, icpr, iabr, ipr, stir }","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":56874,"byte_end":56892,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":56893,"byte_end":56903,"line_start":11,"line_end":11,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":305},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":56968,"byte_end":56972,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"iser","qualname":"::peripheral::nvic::RegisterBlock::iser","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Interrupt Set-Enable\n","sig":null,"attributes":[{"value":"/ Interrupt Set-Enable","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":56935,"byte_end":56959,"line_start":13,"line_end":13,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":309},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57057,"byte_end":57061,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"icer","qualname":"::peripheral::nvic::RegisterBlock::icer","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Interrupt Clear-Enable\n","sig":null,"attributes":[{"value":"/ Interrupt Clear-Enable","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57022,"byte_end":57048,"line_start":18,"line_end":18,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":313},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57145,"byte_end":57149,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"ispr","qualname":"::peripheral::nvic::RegisterBlock::ispr","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Interrupt Set-Pending\n","sig":null,"attributes":[{"value":"/ Interrupt Set-Pending","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57111,"byte_end":57136,"line_start":23,"line_end":23,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":317},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57235,"byte_end":57239,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"icpr","qualname":"::peripheral::nvic::RegisterBlock::icpr","value":"[volatile_register::RW<u32>; 16]","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Interrupt Clear-Pending\n","sig":null,"attributes":[{"value":"/ Interrupt Clear-Pending","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57199,"byte_end":57226,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":321},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57382,"byte_end":57386,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"iabr","qualname":"::peripheral::nvic::RegisterBlock::iabr","value":"[volatile_register::RO<u32>; 16]","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Interrupt Active Bit (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Interrupt Active Bit (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57289,"byte_end":57349,"line_start":33,"line_end":33,"column_start":5,"column_end":65}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57354,"byte_end":57373,"line_start":34,"line_end":34,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":325},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58064,"byte_end":58067,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"name":"ipr","qualname":"::peripheral::nvic::RegisterBlock::ipr","value":"[volatile_register::RW<u8>; 496]","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Interrupt Priority","sig":null,"attributes":[{"value":"/ Interrupt Priority","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57482,"byte_end":57504,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57509,"byte_end":57512,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ On ARMv7-M, 124 word-sized registers are available. Each of those","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57517,"byte_end":57586,"line_start":43,"line_end":43,"column_start":5,"column_end":74}},{"value":"/ contains of 4 interrupt priorities of 8 byte each.The architecture","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57591,"byte_end":57661,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/ specifically allows accessing those along byte boundaries, so they are","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57666,"byte_end":57740,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ represented as 496 byte-sized registers, for convenience, and to allow","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57745,"byte_end":57819,"line_start":46,"line_end":46,"column_start":5,"column_end":79}},{"value":"/ atomic priority updates.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57824,"byte_end":57852,"line_start":47,"line_end":47,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57857,"byte_end":57860,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, the registers must only be accessed along word boundaries,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57865,"byte_end":57939,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ so convenient byte-sized representation wouldn't work on that","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":57944,"byte_end":58009,"line_start":50,"line_end":50,"column_start":5,"column_end":70}},{"value":"/ architecture.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58014,"byte_end":58031,"line_start":51,"line_end":51,"column_start":5,"column_end":22}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58036,"byte_end":58055,"line_start":52,"line_end":52,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":329},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58806,"byte_end":58810,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"stir","qualname":"::peripheral::nvic::RegisterBlock::stir","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Software Trigger Interrupt\n","sig":null,"attributes":[{"value":"/ Software Trigger Interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58743,"byte_end":58773,"line_start":72,"line_end":72,"column_start":5,"column_end":35}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58778,"byte_end":58797,"line_start":73,"line_end":73,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59256,"byte_end":59263,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"request","qualname":"<NVIC>::request","value":"pub fn request<I>(&mut Self, I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Request an IRQ in software","sig":null,"attributes":[{"value":"/ Request an IRQ in software","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58840,"byte_end":58870,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58875,"byte_end":58878,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Writing a value to the INTID field is the same as manually pending an interrupt by setting","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58883,"byte_end":58977,"line_start":80,"line_end":80,"column_start":5,"column_end":99}},{"value":"/ the corresponding interrupt bit in an Interrupt Set Pending Register. This is similar to","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58982,"byte_end":59074,"line_start":81,"line_end":81,"column_start":5,"column_end":97}},{"value":"/ [`NVIC::pend`].","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59079,"byte_end":59098,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59103,"byte_end":59106,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method is not available on ARMv6-M chips.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59111,"byte_end":59161,"line_start":84,"line_end":84,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59166,"byte_end":59169,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [`NVIC::pend`]: #method.pend","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59174,"byte_end":59206,"line_start":86,"line_end":86,"column_start":5,"column_end":37}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59211,"byte_end":59230,"line_start":87,"line_end":87,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59235,"byte_end":59244,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59506,"byte_end":59510,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"mask","qualname":"<NVIC>::mask","value":"pub fn mask<I>(I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Disables `interrupt`\n","sig":null,"attributes":[{"value":"/ Disables `interrupt`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59456,"byte_end":59480,"line_start":100,"line_end":100,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59485,"byte_end":59494,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59915,"byte_end":59921,"line_start":115,"line_end":115,"column_start":19,"column_end":25},"name":"unmask","qualname":"<NVIC>::unmask","value":"pub unsafe fn unmask<I>(I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Enables `interrupt`","sig":null,"attributes":[{"value":"/ Enables `interrupt`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59767,"byte_end":59790,"line_start":111,"line_end":111,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59795,"byte_end":59798,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This function is `unsafe` because it can break mask-based critical sections","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59803,"byte_end":59882,"line_start":113,"line_end":113,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":59887,"byte_end":59896,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":60493,"byte_end":60505,"line_start":130,"line_end":130,"column_start":12,"column_end":24},"name":"get_priority","qualname":"<NVIC>::get_priority","value":"pub fn get_priority<I>(I) -> u8 where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Returns the NVIC priority of `interrupt`","sig":null,"attributes":[{"value":"/ Returns the NVIC priority of `interrupt`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":60164,"byte_end":60208,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":60213,"byte_end":60216,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ *NOTE* NVIC encodes priority in the highest bits of a byte so values like `1` and `2` map","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":60221,"byte_end":60314,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ to the same priority. Also for NVIC priorities, a lower value (e.g. `16`) has higher","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":60319,"byte_end":60407,"line_start":127,"line_end":127,"column_start":5,"column_end":93}},{"value":"/ priority (urgency) than a larger value (e.g. `32`).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":60412,"byte_end":60467,"line_start":128,"line_end":128,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":60472,"byte_end":60481,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61195,"byte_end":61204,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"is_active","qualname":"<NVIC>::is_active","value":"pub fn is_active<I>(I) -> bool where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Is `interrupt` active or pre-empted and stacked\n","sig":null,"attributes":[{"value":"/ Is `interrupt` active or pre-empted and stacked","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61094,"byte_end":61145,"line_start":150,"line_end":150,"column_start":5,"column_end":56}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61150,"byte_end":61169,"line_start":151,"line_end":151,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61174,"byte_end":61183,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61562,"byte_end":61572,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<NVIC>::is_enabled","value":"pub fn is_enabled<I>(I) -> bool where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Checks if `interrupt` is enabled\n","sig":null,"attributes":[{"value":"/ Checks if `interrupt` is enabled","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61500,"byte_end":61536,"line_start":164,"line_end":164,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61541,"byte_end":61550,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61930,"byte_end":61940,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"is_pending","qualname":"<NVIC>::is_pending","value":"pub fn is_pending<I>(I) -> bool where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Checks if `interrupt` is pending\n","sig":null,"attributes":[{"value":"/ Checks if `interrupt` is pending","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61868,"byte_end":61904,"line_start":177,"line_end":177,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":61909,"byte_end":61918,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62303,"byte_end":62307,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"pend","qualname":"<NVIC>::pend","value":"pub fn pend<I>(I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Forces `interrupt` into pending state\n","sig":null,"attributes":[{"value":"/ Forces `interrupt` into pending state","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62236,"byte_end":62277,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62282,"byte_end":62291,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":63195,"byte_end":63207,"line_start":215,"line_end":215,"column_start":19,"column_end":31},"name":"set_priority","qualname":"<NVIC>::set_priority","value":"pub unsafe fn set_priority<I>(&mut Self, I, u8) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Sets the \"priority\" of `interrupt` to `prio`","sig":null,"attributes":[{"value":"/ Sets the \"priority\" of `interrupt` to `prio`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62578,"byte_end":62626,"line_start":202,"line_end":202,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62631,"byte_end":62634,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ *NOTE* See [`get_priority`](struct.NVIC.html#method.get_priority) method for an explanation","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62639,"byte_end":62734,"line_start":204,"line_end":204,"column_start":5,"column_end":100}},{"value":"/ of how NVIC priorities work.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62739,"byte_end":62771,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62776,"byte_end":62779,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, updating an interrupt priority requires a read-modify-write operation. On","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62784,"byte_end":62873,"line_start":207,"line_end":207,"column_start":5,"column_end":94}},{"value":"/ ARMv7-M, the operation is performed in a single atomic write operation.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62878,"byte_end":62953,"line_start":208,"line_end":208,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62958,"byte_end":62961,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62966,"byte_end":62980,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62985,"byte_end":62988,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Changing priority levels can break priority-based critical sections (see","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":62993,"byte_end":63069,"line_start":212,"line_end":212,"column_start":5,"column_end":81}},{"value":"/ [`register::basepri`](../register/basepri/index.html)) and compromise memory safety.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":63074,"byte_end":63162,"line_start":213,"line_end":213,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":63167,"byte_end":63176,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":63813,"byte_end":63819,"line_start":238,"line_end":238,"column_start":12,"column_end":18},"name":"unpend","qualname":"<NVIC>::unpend","value":"pub fn unpend<I>(I) where I: InterruptNumber","parent":null,"children":[],"decl_id":null,"docs":" Clears `interrupt`'s pending state\n","sig":null,"attributes":[{"value":"/ Clears `interrupt`'s pending state","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":63749,"byte_end":63787,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":63792,"byte_end":63801,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":351},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scb","qualname":"::peripheral::scb","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":805},{"krate":0,"index":821},{"krate":0,"index":820},{"krate":0,"index":818},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":376},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":386},{"krate":0,"index":823},{"krate":0,"index":851},{"krate":0,"index":850},{"krate":0,"index":848},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":388},{"krate":0,"index":853},{"krate":0,"index":871},{"krate":0,"index":870},{"krate":0,"index":868},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":873},{"krate":0,"index":904},{"krate":0,"index":903},{"krate":0,"index":901},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":454}],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64436,"byte_end":64460,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64693,"byte_end":64706,"line_start":17,"line_end":17,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::scb::RegisterBlock","value":"RegisterBlock { icsr, vtor, aircr, scr, ccr, shpr, shcsr, cfsr, hfsr, dfsr, mmfar, bfar, afsr, cpacr }","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":375}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64652,"byte_end":64670,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64671,"byte_end":64681,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":359},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64753,"byte_end":64757,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"icsr","qualname":"::peripheral::scb::RegisterBlock::icsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Interrupt Control and State\n","sig":null,"attributes":[{"value":"/ Interrupt Control and State","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64713,"byte_end":64744,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":360},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64841,"byte_end":64845,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"vtor","qualname":"::peripheral::scb::RegisterBlock::vtor","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Vector Table Offset (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Vector Table Offset (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64773,"byte_end":64832,"line_start":21,"line_end":21,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":361},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64913,"byte_end":64918,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"aircr","qualname":"::peripheral::scb::RegisterBlock::aircr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Application Interrupt and Reset Control\n","sig":null,"attributes":[{"value":"/ Application Interrupt and Reset Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64861,"byte_end":64904,"line_start":24,"line_end":24,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":362},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64961,"byte_end":64964,"line_start":28,"line_end":28,"column_start":9,"column_end":12},"name":"scr","qualname":"::peripheral::scb::RegisterBlock::scr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" System Control\n","sig":null,"attributes":[{"value":"/ System Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64934,"byte_end":64952,"line_start":27,"line_end":27,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":363},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65018,"byte_end":65021,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"name":"ccr","qualname":"::peripheral::scb::RegisterBlock::ccr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Configuration and Control\n","sig":null,"attributes":[{"value":"/ Configuration and Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":64980,"byte_end":65009,"line_start":30,"line_end":30,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":364},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65250,"byte_end":65254,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"shpr","qualname":"::peripheral::scb::RegisterBlock::shpr","value":"[volatile_register::RW<u8>; 12]","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" System Handler Priority (word accessible only on Cortex-M0 variants)","sig":null,"attributes":[{"value":"/ System Handler Priority (word accessible only on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65037,"byte_end":65109,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65114,"byte_end":65117,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ On ARMv7-M, `shpr[0]` points to SHPR1","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65122,"byte_end":65163,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65168,"byte_end":65171,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, `shpr[0]` points to SHPR2","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65176,"byte_end":65217,"line_start":37,"line_end":37,"column_start":5,"column_end":46}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65222,"byte_end":65241,"line_start":38,"line_end":38,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":366},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65592,"byte_end":65597,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"name":"shcsr","qualname":"::peripheral::scb::RegisterBlock::shcsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" System Handler Control and State\n","sig":null,"attributes":[{"value":"/ System Handler Control and State","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65547,"byte_end":65583,"line_start":50,"line_end":50,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":367},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65711,"byte_end":65715,"line_start":55,"line_end":55,"column_start":9,"column_end":13},"name":"cfsr","qualname":"::peripheral::scb::RegisterBlock::cfsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Configurable Fault Status (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Configurable Fault Status (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65613,"byte_end":65678,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65683,"byte_end":65702,"line_start":54,"line_end":54,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":368},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65860,"byte_end":65864,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"hfsr","qualname":"::peripheral::scb::RegisterBlock::hfsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" HardFault Status (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ HardFault Status (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65771,"byte_end":65827,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65832,"byte_end":65851,"line_start":60,"line_end":60,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":369},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66011,"byte_end":66015,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"name":"dfsr","qualname":"::peripheral::scb::RegisterBlock::dfsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Debug Fault Status (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Debug Fault Status (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65920,"byte_end":65978,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":65983,"byte_end":66002,"line_start":66,"line_end":66,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":370},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66167,"byte_end":66172,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"name":"mmfar","qualname":"::peripheral::scb::RegisterBlock::mmfar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" MemManage Fault Address (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ MemManage Fault Address (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66071,"byte_end":66134,"line_start":71,"line_end":71,"column_start":5,"column_end":68}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66139,"byte_end":66158,"line_start":72,"line_end":72,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":371},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66317,"byte_end":66321,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"name":"bfar","qualname":"::peripheral::scb::RegisterBlock::bfar","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" BusFault Address (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ BusFault Address (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66228,"byte_end":66284,"line_start":77,"line_end":77,"column_start":5,"column_end":61}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66289,"byte_end":66308,"line_start":78,"line_end":78,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":372},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66472,"byte_end":66476,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"name":"afsr","qualname":"::peripheral::scb::RegisterBlock::afsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Auxiliary Fault Status (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Auxiliary Fault Status (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66377,"byte_end":66439,"line_start":83,"line_end":83,"column_start":5,"column_end":67}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66444,"byte_end":66463,"line_start":84,"line_end":84,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":375},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66659,"byte_end":66664,"line_start":93,"line_end":93,"column_start":9,"column_end":14},"name":"cpacr","qualname":"::peripheral::scb::RegisterBlock::cpacr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Coprocessor Access Control (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Coprocessor Access Control (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66560,"byte_end":66626,"line_start":91,"line_end":91,"column_start":5,"column_end":71}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66631,"byte_end":66650,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":806},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66858,"byte_end":66866,"line_start":103,"line_end":103,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::peripheral::scb::FpuAccessMode::Disabled","value":"FpuAccessMode::Disabled","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" FPU is not accessible\n","sig":null,"attributes":[{"value":"/ FPU is not accessible","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66828,"byte_end":66853,"line_start":102,"line_end":102,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":808},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66926,"byte_end":66933,"line_start":105,"line_end":105,"column_start":5,"column_end":12},"name":"Enabled","qualname":"::peripheral::scb::FpuAccessMode::Enabled","value":"FpuAccessMode::Enabled","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" FPU is accessible in Privileged and User mode\n","sig":null,"attributes":[{"value":"/ FPU is accessible in Privileged and User mode","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66872,"byte_end":66921,"line_start":104,"line_end":104,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":810},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66989,"byte_end":66999,"line_start":107,"line_end":107,"column_start":5,"column_end":15},"name":"Privileged","qualname":"::peripheral::scb::FpuAccessMode::Privileged","value":"FpuAccessMode::Privileged","parent":{"krate":0,"index":805},"children":[],"decl_id":null,"docs":" FPU is accessible in Privileged mode only\n","sig":null,"attributes":[{"value":"/ FPU is accessible in Privileged mode only","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66939,"byte_end":66984,"line_start":106,"line_end":106,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":805},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66808,"byte_end":66821,"line_start":101,"line_end":101,"column_start":10,"column_end":23},"name":"FpuAccessMode","qualname":"::peripheral::scb::FpuAccessMode","value":"pub enum FpuAccessMode {\n\n    /// FPU is not accessible\n    Disabled,\n\n    /// FPU is accessible in Privileged and User mode\n    Enabled,\n\n    /// FPU is accessible in Privileged mode only\n    Privileged,\n}","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810}],"decl_id":null,"docs":" FPU access mode\n","sig":null,"attributes":[{"value":"/ FPU access mode","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66718,"byte_end":66737,"line_start":98,"line_end":98,"column_start":1,"column_end":20}},{"value":"cfg(has_fpu)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":66738,"byte_end":66753,"line_start":99,"line_end":99,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67370,"byte_end":67381,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"disable_fpu","qualname":"<SCB>::disable_fpu","value":"pub fn disable_fpu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `set_fpu_access_mode(FpuAccessMode::Disabled)`\n","sig":null,"attributes":[{"value":"/ Shorthand for `set_fpu_access_mode(FpuAccessMode::Disabled)`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67280,"byte_end":67344,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67349,"byte_end":67358,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67553,"byte_end":67563,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_fpu","qualname":"<SCB>::enable_fpu","value":"pub fn enable_fpu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `set_fpu_access_mode(FpuAccessMode::Enabled)`\n","sig":null,"attributes":[{"value":"/ Shorthand for `set_fpu_access_mode(FpuAccessMode::Enabled)`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67464,"byte_end":67527,"line_start":128,"line_end":128,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67532,"byte_end":67541,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67695,"byte_end":67710,"line_start":136,"line_end":136,"column_start":12,"column_end":27},"name":"fpu_access_mode","qualname":"<SCB>::fpu_access_mode","value":"pub fn fpu_access_mode() -> FpuAccessMode","parent":null,"children":[],"decl_id":null,"docs":" Gets FPU access mode\n","sig":null,"attributes":[{"value":"/ Gets FPU access mode","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67645,"byte_end":67669,"line_start":134,"line_end":134,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67674,"byte_end":67683,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":68589,"byte_end":68608,"line_start":156,"line_end":156,"column_start":12,"column_end":31},"name":"set_fpu_access_mode","qualname":"<SCB>::set_fpu_access_mode","value":"pub fn set_fpu_access_mode(&mut Self, FpuAccessMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets FPU access mode","sig":null,"attributes":[{"value":"/ Sets FPU access mode","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":68163,"byte_end":68187,"line_start":149,"line_end":149,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":68192,"byte_end":68195,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ *IMPORTANT* Any function that runs fully or partly with the FPU disabled must *not* take any","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":68200,"byte_end":68296,"line_start":151,"line_end":151,"column_start":5,"column_end":101}},{"value":"/ floating-point arguments or have any floating-point local variables. Because the compiler","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":68301,"byte_end":68394,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ might inline such a function into a caller that does have floating-point arguments or","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":68399,"byte_end":68488,"line_start":153,"line_end":153,"column_start":5,"column_end":94}},{"value":"/ variables, any such function must be also marked #[inline(never)].","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":68493,"byte_end":68563,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":68568,"byte_end":68577,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":69076,"byte_end":69087,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"vect_active","qualname":"<SCB>::vect_active","value":"pub fn vect_active() -> VectActive","parent":null,"children":[],"decl_id":null,"docs":" Returns the active exception number\n","sig":null,"attributes":[{"value":"/ Returns the active exception number","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":69011,"byte_end":69050,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":69055,"byte_end":69064,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":824},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70315,"byte_end":70329,"line_start":199,"line_end":199,"column_start":5,"column_end":19},"name":"NonMaskableInt","qualname":"::peripheral::scb::Exception::NonMaskableInt","value":"Exception::NonMaskableInt","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" Non maskable interrupt\n","sig":null,"attributes":[{"value":"/ Non maskable interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70284,"byte_end":70310,"line_start":198,"line_end":198,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":826},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70365,"byte_end":70374,"line_start":202,"line_end":202,"column_start":5,"column_end":14},"name":"HardFault","qualname":"::peripheral::scb::Exception::HardFault","value":"Exception::HardFault","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" Hard fault interrupt\n","sig":null,"attributes":[{"value":"/ Hard fault interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70336,"byte_end":70360,"line_start":201,"line_end":201,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":828},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70477,"byte_end":70493,"line_start":206,"line_end":206,"column_start":5,"column_end":21},"name":"MemoryManagement","qualname":"::peripheral::scb::Exception::MemoryManagement","value":"Exception::MemoryManagement","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" Memory management interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Memory management interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70381,"byte_end":70448,"line_start":204,"line_end":204,"column_start":5,"column_end":72}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70453,"byte_end":70472,"line_start":205,"line_end":205,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":830},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70588,"byte_end":70596,"line_start":210,"line_end":210,"column_start":5,"column_end":13},"name":"BusFault","qualname":"::peripheral::scb::Exception::BusFault","value":"Exception::BusFault","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" Bus fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Bus fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70500,"byte_end":70559,"line_start":208,"line_end":208,"column_start":5,"column_end":64}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70564,"byte_end":70583,"line_start":209,"line_end":209,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":832},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70693,"byte_end":70703,"line_start":214,"line_end":214,"column_start":5,"column_end":15},"name":"UsageFault","qualname":"::peripheral::scb::Exception::UsageFault","value":"Exception::UsageFault","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" Usage fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Usage fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70603,"byte_end":70664,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70669,"byte_end":70688,"line_start":213,"line_end":213,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":834},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70851,"byte_end":70857,"line_start":221,"line_end":221,"column_start":5,"column_end":11},"name":"SVCall","qualname":"::peripheral::scb::Exception::SVCall","value":"Exception::SVCall","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" SV call interrupt\n","sig":null,"attributes":[{"value":"/ SV call interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70825,"byte_end":70846,"line_start":220,"line_end":220,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":836},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70956,"byte_end":70968,"line_start":225,"line_end":225,"column_start":5,"column_end":17},"name":"DebugMonitor","qualname":"::peripheral::scb::Exception::DebugMonitor","value":"Exception::DebugMonitor","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" Debug monitor interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Debug monitor interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70864,"byte_end":70927,"line_start":223,"line_end":223,"column_start":5,"column_end":68}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70932,"byte_end":70951,"line_start":224,"line_end":224,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":838},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71001,"byte_end":71007,"line_start":228,"line_end":228,"column_start":5,"column_end":11},"name":"PendSV","qualname":"::peripheral::scb::Exception::PendSV","value":"Exception::PendSV","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" Pend SV interrupt\n","sig":null,"attributes":[{"value":"/ Pend SV interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70975,"byte_end":70996,"line_start":227,"line_end":227,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":840},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71044,"byte_end":71051,"line_start":231,"line_end":231,"column_start":5,"column_end":12},"name":"SysTick","qualname":"::peripheral::scb::Exception::SysTick","value":"Exception::SysTick","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":" System Tick interrupt\n","sig":null,"attributes":[{"value":"/ System Tick interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71014,"byte_end":71039,"line_start":230,"line_end":230,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":823},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70268,"byte_end":70277,"line_start":197,"line_end":197,"column_start":10,"column_end":19},"name":"Exception","qualname":"::peripheral::scb::Exception","value":"pub enum Exception {\n\n    /// Non maskable interrupt\n    NonMaskableInt,\n\n    /// Hard fault interrupt\n    HardFault,\n\n    /// Memory management interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    MemoryManagement,\n\n    /// Bus fault interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    BusFault,\n\n    /// Usage fault interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    UsageFault,\n\n    /// SV call interrupt\n    SVCall,\n\n    /// Debug monitor interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    DebugMonitor,\n\n    /// Pend SV interrupt\n    PendSV,\n\n    /// System Tick interrupt\n    SysTick,\n}","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840}],"decl_id":null,"docs":" Processor core exceptions (internal interrupts)\n","sig":null,"attributes":[{"value":"/ Processor core exceptions (internal interrupts)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":70162,"byte_end":70213,"line_start":195,"line_end":195,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71228,"byte_end":71232,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"name":"irqn","qualname":"<Exception>::irqn","value":"pub fn irqn(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Returns the IRQ number of this `Exception`","sig":null,"attributes":[{"value":"/ Returns the IRQ number of this `Exception`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71077,"byte_end":71123,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71128,"byte_end":71131,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The return value is always within the closed range `[-1, -14]`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71136,"byte_end":71202,"line_start":237,"line_end":237,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71207,"byte_end":71216,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":854},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72004,"byte_end":72014,"line_start":264,"line_end":264,"column_start":5,"column_end":15},"name":"ThreadMode","qualname":"::peripheral::scb::VectActive::ThreadMode","value":"VectActive::ThreadMode","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" Thread mode\n","sig":null,"attributes":[{"value":"/ Thread mode","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71984,"byte_end":71999,"line_start":263,"line_end":263,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":856},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72076,"byte_end":72085,"line_start":267,"line_end":267,"column_start":5,"column_end":14},"name":"Exception","qualname":"::peripheral::scb::VectActive::Exception","value":"VectActive::Exception(Exception)","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" Processor core exception (internal interrupts)\n","sig":null,"attributes":[{"value":"/ Processor core exception (internal interrupts)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72021,"byte_end":72071,"line_start":266,"line_end":266,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":859},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72159,"byte_end":72168,"line_start":270,"line_end":270,"column_start":5,"column_end":14},"name":"Interrupt","qualname":"::peripheral::scb::VectActive::Interrupt","value":"VectActive::Interrupt { irqn }","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" Device specific exception (external interrupts)\n","sig":null,"attributes":[{"value":"/ Device specific exception (external interrupts)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72103,"byte_end":72154,"line_start":269,"line_end":269,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":853},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71967,"byte_end":71977,"line_start":262,"line_end":262,"column_start":10,"column_end":20},"name":"VectActive","qualname":"::peripheral::scb::VectActive","value":"pub enum VectActive {\n\n    /// Thread mode\n    ThreadMode,\n\n    /// Processor core exception (internal interrupts)\n    Exception(Exception),\n\n    /// Device specific exception (external interrupts)\n    Interrupt {\n        /// Interrupt number. This number is always within half open range `[0, 240)`\n        irqn: u8,\n    },\n}","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":859}],"decl_id":null,"docs":" Active exception number\n","sig":null,"attributes":[{"value":"/ Active exception number","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71885,"byte_end":71912,"line_start":260,"line_end":260,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72372,"byte_end":72376,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"from","qualname":"<VectActive>::from","value":"pub fn from(u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `byte` into `VectActive`\n","sig":null,"attributes":[{"value":"/ Converts a `byte` into `VectActive`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72307,"byte_end":72346,"line_start":277,"line_end":277,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72351,"byte_end":72360,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":73769,"byte_end":73782,"line_start":318,"line_end":318,"column_start":12,"column_end":25},"name":"enable_icache","qualname":"<SCB>::enable_icache","value":"pub fn enable_icache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables I-cache if currently disabled.","sig":null,"attributes":[{"value":"/ Enables I-cache if currently disabled.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":73632,"byte_end":73674,"line_start":314,"line_end":314,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":73679,"byte_end":73682,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This operation first invalidates the entire I-cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":73687,"byte_end":73743,"line_start":316,"line_end":316,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":73748,"byte_end":73757,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":74673,"byte_end":74687,"line_start":348,"line_end":348,"column_start":12,"column_end":26},"name":"disable_icache","qualname":"<SCB>::disable_icache","value":"pub fn disable_icache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables I-cache if currently enabled.","sig":null,"attributes":[{"value":"/ Disables I-cache if currently enabled.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":74526,"byte_end":74568,"line_start":344,"line_end":344,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":74573,"byte_end":74576,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This operation invalidates the entire I-cache after disabling.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":74581,"byte_end":74647,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":74652,"byte_end":74661,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":75321,"byte_end":75335,"line_start":370,"line_end":370,"column_start":12,"column_end":26},"name":"icache_enabled","qualname":"<SCB>::icache_enabled","value":"pub fn icache_enabled() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the I-cache is currently enabled.\n","sig":null,"attributes":[{"value":"/ Returns whether the I-cache is currently enabled.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":75234,"byte_end":75287,"line_start":368,"line_end":368,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":75292,"byte_end":75309,"line_start":369,"line_end":369,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":75615,"byte_end":75632,"line_start":380,"line_end":380,"column_start":12,"column_end":29},"name":"invalidate_icache","qualname":"<SCB>::invalidate_icache","value":"pub fn invalidate_icache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invalidates the entire I-cache.\n","sig":null,"attributes":[{"value":"/ Invalidates the entire I-cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":75554,"byte_end":75589,"line_start":378,"line_end":378,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":75594,"byte_end":75603,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":76104,"byte_end":76117,"line_start":396,"line_end":396,"column_start":12,"column_end":25},"name":"enable_dcache","qualname":"<SCB>::enable_dcache","value":"pub fn enable_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Enables D-cache if currently disabled.","sig":null,"attributes":[{"value":"/ Enables D-cache if currently disabled.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":75895,"byte_end":75937,"line_start":391,"line_end":391,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":75942,"byte_end":75945,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ This operation first invalidates the entire D-cache, ensuring it does","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":75950,"byte_end":76023,"line_start":393,"line_end":393,"column_start":5,"column_end":78}},{"value":"/ not contain stale values before being enabled.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":76028,"byte_end":76078,"line_start":394,"line_end":394,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":76083,"byte_end":76092,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":77053,"byte_end":77067,"line_start":424,"line_end":424,"column_start":12,"column_end":26},"name":"disable_dcache","qualname":"<SCB>::disable_dcache","value":"pub fn disable_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Disables D-cache if currently enabled.","sig":null,"attributes":[{"value":"/ Disables D-cache if currently enabled.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":76812,"byte_end":76854,"line_start":419,"line_end":419,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":76859,"byte_end":76862,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This operation subsequently cleans and invalidates the entire D-cache,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":76867,"byte_end":76941,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ ensuring all contents are safely written back to main memory after disabling.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":76946,"byte_end":77027,"line_start":422,"line_end":422,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":77032,"byte_end":77041,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":77580,"byte_end":77594,"line_start":440,"line_end":440,"column_start":12,"column_end":26},"name":"dcache_enabled","qualname":"<SCB>::dcache_enabled","value":"pub fn dcache_enabled() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the D-cache is currently enabled.\n","sig":null,"attributes":[{"value":"/ Returns whether the D-cache is currently enabled.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":77501,"byte_end":77554,"line_start":438,"line_end":438,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":77559,"byte_end":77568,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":78880,"byte_end":78892,"line_start":478,"line_end":478,"column_start":12,"column_end":24},"name":"clean_dcache","qualname":"<SCB>::clean_dcache","value":"pub fn clean_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Cleans the entire D-cache.","sig":null,"attributes":[{"value":"/ Cleans the entire D-cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":78679,"byte_end":78709,"line_start":473,"line_end":473,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":78714,"byte_end":78717,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This function causes everything in the D-cache to be written back to main memory,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":78722,"byte_end":78807,"line_start":475,"line_end":475,"column_start":5,"column_end":90}},{"value":"/ overwriting whatever is already there.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":78812,"byte_end":78854,"line_start":476,"line_end":476,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":78859,"byte_end":78868,"line_start":477,"line_end":477,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":79660,"byte_end":79683,"line_start":501,"line_end":501,"column_start":12,"column_end":35},"name":"clean_invalidate_dcache","qualname":"<SCB>::clean_invalidate_dcache","value":"pub fn clean_invalidate_dcache(&mut Self, &mut CPUID)","parent":null,"children":[],"decl_id":null,"docs":" Cleans and invalidates the entire D-cache.","sig":null,"attributes":[{"value":"/ Cleans and invalidates the entire D-cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":79374,"byte_end":79420,"line_start":495,"line_end":495,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":79425,"byte_end":79428,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ This function causes everything in the D-cache to be written back to main memory,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":79433,"byte_end":79518,"line_start":497,"line_end":497,"column_start":5,"column_end":90}},{"value":"/ and then marks the entire D-cache as invalid, causing future reads to first fetch","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":79523,"byte_end":79608,"line_start":498,"line_end":498,"column_start":5,"column_end":90}},{"value":"/ from main memory.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":79613,"byte_end":79634,"line_start":499,"line_end":499,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":79639,"byte_end":79648,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":82179,"byte_end":82207,"line_start":553,"line_end":553,"column_start":19,"column_end":47},"name":"invalidate_dcache_by_address","qualname":"<SCB>::invalidate_dcache_by_address","value":"pub unsafe fn invalidate_dcache_by_address(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Invalidates D-cache by address.","sig":null,"attributes":[{"value":"/ Invalidates D-cache by address.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80166,"byte_end":80201,"line_start":518,"line_end":518,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80206,"byte_end":80209,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ * `addr`: The address to invalidate, which must be cache-line aligned.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80214,"byte_end":80288,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/ * `size`: Number of bytes to invalidate, which must be a multiple of the cache line size.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80293,"byte_end":80386,"line_start":521,"line_end":521,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80391,"byte_end":80394,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ Invalidates D-cache cache lines, starting from the first line containing `addr`,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80399,"byte_end":80483,"line_start":523,"line_end":523,"column_start":5,"column_end":89}},{"value":"/ finishing once at least `size` bytes have been invalidated.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80488,"byte_end":80551,"line_start":524,"line_end":524,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80556,"byte_end":80559,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Invalidation causes the next read access to memory to be fetched from main memory instead","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80564,"byte_end":80657,"line_start":526,"line_end":526,"column_start":5,"column_end":98}},{"value":"/ of the cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80662,"byte_end":80679,"line_start":527,"line_end":527,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80684,"byte_end":80687,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Cache Line Sizes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80692,"byte_end":80714,"line_start":529,"line_end":529,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80719,"byte_end":80722,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Cache line sizes vary by core. For all Cortex-M7 cores, the cache line size is fixed","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80727,"byte_end":80815,"line_start":531,"line_end":531,"column_start":5,"column_end":93}},{"value":"/ to 32 bytes, which means `addr` must be 32-byte aligned and `size` must be a multiple","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80820,"byte_end":80909,"line_start":532,"line_end":532,"column_start":5,"column_end":94}},{"value":"/ of 32. At the time of writing, no other Cortex-M cores have data caches.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80914,"byte_end":80990,"line_start":533,"line_end":533,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":80995,"byte_end":80998,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ If `addr` is not cache-line aligned, or `size` is not a multiple of the cache line size,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81003,"byte_end":81095,"line_start":535,"line_end":535,"column_start":5,"column_end":97}},{"value":"/ other data before or after the desired memory would also be invalidated, which can very","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81100,"byte_end":81191,"line_start":536,"line_end":536,"column_start":5,"column_end":96}},{"value":"/ easily cause memory corruption and undefined behaviour.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81196,"byte_end":81255,"line_start":537,"line_end":537,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81260,"byte_end":81263,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81268,"byte_end":81280,"line_start":539,"line_end":539,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81285,"byte_end":81288,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ After invalidating, the next read of invalidated data will be from main memory. This may","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81293,"byte_end":81385,"line_start":541,"line_end":541,"column_start":5,"column_end":97}},{"value":"/ cause recent writes to be lost, potentially including writes that initialized objects.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81390,"byte_end":81480,"line_start":542,"line_end":542,"column_start":5,"column_end":95}},{"value":"/ Therefore, this method may cause uninitialized memory or invalid values to be read,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81485,"byte_end":81572,"line_start":543,"line_end":543,"column_start":5,"column_end":92}},{"value":"/ resulting in undefined behaviour. You must ensure that main memory contains valid and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81577,"byte_end":81666,"line_start":544,"line_end":544,"column_start":5,"column_end":94}},{"value":"/ initialized values before invalidating.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81671,"byte_end":81714,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81719,"byte_end":81722,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ `addr` **must** be aligned to the size of the cache lines, and `size` **must** be a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81727,"byte_end":81814,"line_start":547,"line_end":547,"column_start":5,"column_end":92}},{"value":"/ multiple of the cache line size, otherwise this function will invalidate other memory,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81819,"byte_end":81909,"line_start":548,"line_end":548,"column_start":5,"column_end":95}},{"value":"/ easily leading to memory corruption and undefined behaviour. This precondition is checked","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":81914,"byte_end":82007,"line_start":549,"line_end":549,"column_start":5,"column_end":98}},{"value":"/ in debug builds using a `debug_assert!()`, but not checked in release builds to avoid","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":82012,"byte_end":82101,"line_start":550,"line_end":550,"column_start":5,"column_end":94}},{"value":"/ a runtime-dependent `panic!()` call.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":82106,"byte_end":82146,"line_start":551,"line_end":551,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":82151,"byte_end":82160,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85106,"byte_end":85130,"line_start":621,"line_end":621,"column_start":19,"column_end":43},"name":"invalidate_dcache_by_ref","qualname":"<SCB>::invalidate_dcache_by_ref","value":"pub unsafe fn invalidate_dcache_by_ref<T>(&mut Self, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Invalidates an object from the D-cache.","sig":null,"attributes":[{"value":"/ Invalidates an object from the D-cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83187,"byte_end":83230,"line_start":587,"line_end":587,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83235,"byte_end":83238,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ * `obj`: The object to invalidate.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83243,"byte_end":83281,"line_start":589,"line_end":589,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83286,"byte_end":83289,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ Invalidates D-cache starting from the first cache line containing `obj`,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83294,"byte_end":83370,"line_start":591,"line_end":591,"column_start":5,"column_end":81}},{"value":"/ continuing to invalidate cache lines until all of `obj` has been invalidated.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83375,"byte_end":83456,"line_start":592,"line_end":592,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83461,"byte_end":83464,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Invalidation causes the next read access to memory to be fetched from main memory instead","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83469,"byte_end":83562,"line_start":594,"line_end":594,"column_start":5,"column_end":98}},{"value":"/ of the cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83567,"byte_end":83584,"line_start":595,"line_end":595,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83589,"byte_end":83592,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Cache Line Sizes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83597,"byte_end":83619,"line_start":597,"line_end":597,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83624,"byte_end":83627,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Cache line sizes vary by core. For all Cortex-M7 cores, the cache line size is fixed","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83632,"byte_end":83720,"line_start":599,"line_end":599,"column_start":5,"column_end":93}},{"value":"/ to 32 bytes, which means `obj` must be 32-byte aligned, and its size must be a multiple","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83725,"byte_end":83816,"line_start":600,"line_end":600,"column_start":5,"column_end":96}},{"value":"/ of 32 bytes. At the time of writing, no other Cortex-M cores have data caches.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83821,"byte_end":83903,"line_start":601,"line_end":601,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83908,"byte_end":83911,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ If `obj` is not cache-line aligned, or its size is not a multiple of the cache line size,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":83916,"byte_end":84009,"line_start":603,"line_end":603,"column_start":5,"column_end":98}},{"value":"/ other data before or after the desired memory would also be invalidated, which can very","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84014,"byte_end":84105,"line_start":604,"line_end":604,"column_start":5,"column_end":96}},{"value":"/ easily cause memory corruption and undefined behaviour.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84110,"byte_end":84169,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84174,"byte_end":84177,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84182,"byte_end":84194,"line_start":607,"line_end":607,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84199,"byte_end":84202,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ After invalidating, `obj` will be read from main memory on next access. This may cause","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84207,"byte_end":84297,"line_start":609,"line_end":609,"column_start":5,"column_end":95}},{"value":"/ recent writes to `obj` to be lost, potentially including the write that initialized it.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84302,"byte_end":84393,"line_start":610,"line_end":610,"column_start":5,"column_end":96}},{"value":"/ Therefore, this method may cause uninitialized memory or invalid values to be read,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84398,"byte_end":84485,"line_start":611,"line_end":611,"column_start":5,"column_end":92}},{"value":"/ resulting in undefined behaviour. You must ensure that main memory contains a valid and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84490,"byte_end":84581,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ initialized value for T before invalidating `obj`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84586,"byte_end":84640,"line_start":613,"line_end":613,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84645,"byte_end":84648,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ `obj` **must** be aligned to the size of the cache lines, and its size **must** be a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84653,"byte_end":84741,"line_start":615,"line_end":615,"column_start":5,"column_end":93}},{"value":"/ multiple of the cache line size, otherwise this function will invalidate other memory,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84746,"byte_end":84836,"line_start":616,"line_end":616,"column_start":5,"column_end":95}},{"value":"/ easily leading to memory corruption and undefined behaviour. This precondition is checked","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84841,"byte_end":84934,"line_start":617,"line_end":617,"column_start":5,"column_end":98}},{"value":"/ in debug builds using a `debug_assert!()`, but not checked in release builds to avoid","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":84939,"byte_end":85028,"line_start":618,"line_end":618,"column_start":5,"column_end":94}},{"value":"/ a runtime-dependent `panic!()` call.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85033,"byte_end":85073,"line_start":619,"line_end":619,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85078,"byte_end":85087,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87211,"byte_end":87237,"line_start":659,"line_end":659,"column_start":19,"column_end":45},"name":"invalidate_dcache_by_slice","qualname":"<SCB>::invalidate_dcache_by_slice","value":"pub unsafe fn invalidate_dcache_by_slice<T>(&mut Self, &mut [T])","parent":null,"children":[],"decl_id":null,"docs":" Invalidates a slice from the D-cache.","sig":null,"attributes":[{"value":"/ Invalidates a slice from the D-cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85267,"byte_end":85308,"line_start":625,"line_end":625,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85313,"byte_end":85316,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ * `slice`: The slice to invalidate.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85321,"byte_end":85360,"line_start":627,"line_end":627,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85365,"byte_end":85368,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Invalidates D-cache starting from the first cache line containing members of `slice`,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85373,"byte_end":85462,"line_start":629,"line_end":629,"column_start":5,"column_end":94}},{"value":"/ continuing to invalidate cache lines until all of `slice` has been invalidated.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85467,"byte_end":85550,"line_start":630,"line_end":630,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85555,"byte_end":85558,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ Invalidation causes the next read access to memory to be fetched from main memory instead","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85563,"byte_end":85656,"line_start":632,"line_end":632,"column_start":5,"column_end":98}},{"value":"/ of the cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85661,"byte_end":85678,"line_start":633,"line_end":633,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85683,"byte_end":85686,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Cache Line Sizes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85691,"byte_end":85713,"line_start":635,"line_end":635,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85718,"byte_end":85721,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ Cache line sizes vary by core. For all Cortex-M7 cores, the cache line size is fixed","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85726,"byte_end":85814,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/ to 32 bytes, which means `slice` must be 32-byte aligned, and its size must be a multiple","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85819,"byte_end":85912,"line_start":638,"line_end":638,"column_start":5,"column_end":98}},{"value":"/ of 32 bytes. At the time of writing, no other Cortex-M cores have data caches.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":85917,"byte_end":85999,"line_start":639,"line_end":639,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86004,"byte_end":86007,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ If `slice` is not cache-line aligned, or its size is not a multiple of the cache line size,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86012,"byte_end":86107,"line_start":641,"line_end":641,"column_start":5,"column_end":100}},{"value":"/ other data before or after the desired memory would also be invalidated, which can very","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86112,"byte_end":86203,"line_start":642,"line_end":642,"column_start":5,"column_end":96}},{"value":"/ easily cause memory corruption and undefined behaviour.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86208,"byte_end":86267,"line_start":643,"line_end":643,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86272,"byte_end":86275,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86280,"byte_end":86292,"line_start":645,"line_end":645,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86297,"byte_end":86300,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ After invalidating, `slice` will be read from main memory on next access. This may cause","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86305,"byte_end":86397,"line_start":647,"line_end":647,"column_start":5,"column_end":97}},{"value":"/ recent writes to `slice` to be lost, potentially including the write that initialized it.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86402,"byte_end":86495,"line_start":648,"line_end":648,"column_start":5,"column_end":98}},{"value":"/ Therefore, this method may cause uninitialized memory or invalid values to be read,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86500,"byte_end":86587,"line_start":649,"line_end":649,"column_start":5,"column_end":92}},{"value":"/ resulting in undefined behaviour. You must ensure that main memory contains valid and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86592,"byte_end":86681,"line_start":650,"line_end":650,"column_start":5,"column_end":94}},{"value":"/ initialized values for T before invalidating `slice`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86686,"byte_end":86743,"line_start":651,"line_end":651,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86748,"byte_end":86751,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ `slice` **must** be aligned to the size of the cache lines, and its size **must** be a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86756,"byte_end":86846,"line_start":653,"line_end":653,"column_start":5,"column_end":95}},{"value":"/ multiple of the cache line size, otherwise this function will invalidate other memory,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86851,"byte_end":86941,"line_start":654,"line_end":654,"column_start":5,"column_end":95}},{"value":"/ easily leading to memory corruption and undefined behaviour. This precondition is checked","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":86946,"byte_end":87039,"line_start":655,"line_end":655,"column_start":5,"column_end":98}},{"value":"/ in debug builds using a `debug_assert!()`, but not checked in release builds to avoid","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87044,"byte_end":87133,"line_start":656,"line_end":656,"column_start":5,"column_end":94}},{"value":"/ a runtime-dependent `panic!()` call.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87138,"byte_end":87178,"line_start":657,"line_end":657,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87183,"byte_end":87192,"line_start":658,"line_end":658,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":88582,"byte_end":88605,"line_start":688,"line_end":688,"column_start":12,"column_end":35},"name":"clean_dcache_by_address","qualname":"<SCB>::clean_dcache_by_address","value":"pub fn clean_dcache_by_address(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Cleans D-cache by address.","sig":null,"attributes":[{"value":"/ Cleans D-cache by address.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87426,"byte_end":87456,"line_start":666,"line_end":666,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87461,"byte_end":87464,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ * `addr`: The address to start cleaning at.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87469,"byte_end":87516,"line_start":668,"line_end":668,"column_start":5,"column_end":52}},{"value":"/ * `size`: The number of bytes to clean.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87521,"byte_end":87564,"line_start":669,"line_end":669,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87569,"byte_end":87572,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ Cleans D-cache cache lines, starting from the first line containing `addr`,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87577,"byte_end":87656,"line_start":671,"line_end":671,"column_start":5,"column_end":84}},{"value":"/ finishing once at least `size` bytes have been invalidated.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87661,"byte_end":87724,"line_start":672,"line_end":672,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87729,"byte_end":87732,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ Cleaning the cache causes whatever data is present in the cache to be immediately written","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87737,"byte_end":87830,"line_start":674,"line_end":674,"column_start":5,"column_end":98}},{"value":"/ to main memory, overwriting whatever was in main memory.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87835,"byte_end":87895,"line_start":675,"line_end":675,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87900,"byte_end":87903,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Cache Line Sizes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87908,"byte_end":87930,"line_start":677,"line_end":677,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87935,"byte_end":87938,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Cache line sizes vary by core. For all Cortex-M7 cores, the cache line size is fixed","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":87943,"byte_end":88031,"line_start":679,"line_end":679,"column_start":5,"column_end":93}},{"value":"/ to 32 bytes, which means `addr` should generally be 32-byte aligned and `size` should be a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":88036,"byte_end":88130,"line_start":680,"line_end":680,"column_start":5,"column_end":99}},{"value":"/ multiple of 32. At the time of writing, no other Cortex-M cores have data caches.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":88135,"byte_end":88220,"line_start":681,"line_end":681,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":88225,"byte_end":88228,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ If `addr` is not cache-line aligned, or `size` is not a multiple of the cache line size,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":88233,"byte_end":88325,"line_start":683,"line_end":683,"column_start":5,"column_end":97}},{"value":"/ other data before or after the desired memory will also be cleaned. From the point of view","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":88330,"byte_end":88424,"line_start":684,"line_end":684,"column_start":5,"column_end":99}},{"value":"/ of the core executing this function, memory remains consistent, so this is not unsound,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":88429,"byte_end":88520,"line_start":685,"line_end":685,"column_start":5,"column_end":96}},{"value":"/ but is worth knowing about.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":88525,"byte_end":88556,"line_start":686,"line_end":686,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":88561,"byte_end":88570,"line_start":687,"line_end":687,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89935,"byte_end":89954,"line_start":728,"line_end":728,"column_start":12,"column_end":31},"name":"clean_dcache_by_ref","qualname":"<SCB>::clean_dcache_by_ref","value":"pub fn clean_dcache_by_ref<T>(&mut Self, &T)","parent":null,"children":[],"decl_id":null,"docs":" Cleans an object from the D-cache.","sig":null,"attributes":[{"value":"/ Cleans an object from the D-cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89308,"byte_end":89346,"line_start":715,"line_end":715,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89351,"byte_end":89354,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ * `obj`: The object to clean.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89359,"byte_end":89392,"line_start":717,"line_end":717,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89397,"byte_end":89400,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Cleans D-cache starting from the first cache line containing `obj`,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89405,"byte_end":89476,"line_start":719,"line_end":719,"column_start":5,"column_end":76}},{"value":"/ continuing to clean cache lines until all of `obj` has been cleaned.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89481,"byte_end":89553,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89558,"byte_end":89561,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ It is recommended that `obj` is both aligned to the cache line size and a multiple of","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89566,"byte_end":89655,"line_start":722,"line_end":722,"column_start":5,"column_end":94}},{"value":"/ the cache line size long, otherwise surrounding data will also be cleaned.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89660,"byte_end":89738,"line_start":723,"line_end":723,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89743,"byte_end":89746,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ Cleaning the cache causes whatever data is present in the cache to be immediately written","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89751,"byte_end":89844,"line_start":725,"line_end":725,"column_start":5,"column_end":98}},{"value":"/ to main memory, overwriting whatever was in main memory.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89849,"byte_end":89909,"line_start":726,"line_end":726,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":89914,"byte_end":89923,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90721,"byte_end":90742,"line_start":745,"line_end":745,"column_start":12,"column_end":33},"name":"clean_dcache_by_slice","qualname":"<SCB>::clean_dcache_by_slice","value":"pub fn clean_dcache_by_slice<T>(&mut Self, &[T])","parent":null,"children":[],"decl_id":null,"docs":" Cleans a slice from D-cache.","sig":null,"attributes":[{"value":"/ Cleans a slice from D-cache.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90082,"byte_end":90114,"line_start":732,"line_end":732,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90119,"byte_end":90122,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ * `slice`: The slice to clean.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90127,"byte_end":90161,"line_start":734,"line_end":734,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90166,"byte_end":90169,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ Cleans D-cache starting from the first cache line containing members of `slice`,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90174,"byte_end":90258,"line_start":736,"line_end":736,"column_start":5,"column_end":89}},{"value":"/ continuing to clean cache lines until all of `slice` has been cleaned.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90263,"byte_end":90337,"line_start":737,"line_end":737,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90342,"byte_end":90345,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ It is recommended that `slice` is both aligned to the cache line size and a multiple of","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90350,"byte_end":90441,"line_start":739,"line_end":739,"column_start":5,"column_end":96}},{"value":"/ the cache line size long, otherwise surrounding data will also be cleaned.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90446,"byte_end":90524,"line_start":740,"line_end":740,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90529,"byte_end":90532,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ Cleaning the cache causes whatever data is present in the cache to be immediately written","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90537,"byte_end":90630,"line_start":742,"line_end":742,"column_start":5,"column_end":98}},{"value":"/ to main memory, overwriting whatever was in main memory.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90635,"byte_end":90695,"line_start":743,"line_end":743,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90700,"byte_end":90709,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91713,"byte_end":91747,"line_start":767,"line_end":767,"column_start":12,"column_end":46},"name":"clean_invalidate_dcache_by_address","qualname":"<SCB>::clean_invalidate_dcache_by_address","value":"pub fn clean_invalidate_dcache_by_address(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Cleans and invalidates D-cache by address.","sig":null,"attributes":[{"value":"/ Cleans and invalidates D-cache by address.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90922,"byte_end":90968,"line_start":752,"line_end":752,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90973,"byte_end":90976,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ * `addr`: The address to clean and invalidate.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":90981,"byte_end":91031,"line_start":754,"line_end":754,"column_start":5,"column_end":55}},{"value":"/ * `size`: The number of bytes to clean and invalidate.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91036,"byte_end":91094,"line_start":755,"line_end":755,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91099,"byte_end":91102,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ Cleans and invalidates D-cache starting from the first cache line containing `addr`,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91107,"byte_end":91195,"line_start":757,"line_end":757,"column_start":5,"column_end":93}},{"value":"/ finishing once at least `size` bytes have been cleaned and invalidated.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91200,"byte_end":91275,"line_start":758,"line_end":758,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91280,"byte_end":91283,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ It is recommended that `addr` is aligned to the cache line size and `size` is a multiple of","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91288,"byte_end":91383,"line_start":760,"line_end":760,"column_start":5,"column_end":100}},{"value":"/ the cache line size, otherwise surrounding data will also be cleaned.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91388,"byte_end":91461,"line_start":761,"line_end":761,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91466,"byte_end":91469,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ Cleaning and invalidating causes data in the D-cache to be written back to main memory,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91474,"byte_end":91565,"line_start":763,"line_end":763,"column_start":5,"column_end":96}},{"value":"/ and then marks that data in the D-cache as invalid, causing future reads to first fetch","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91570,"byte_end":91661,"line_start":764,"line_end":764,"column_start":5,"column_end":96}},{"value":"/ from main memory.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91666,"byte_end":91687,"line_start":765,"line_end":765,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":91692,"byte_end":91701,"line_start":766,"line_end":766,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92567,"byte_end":92580,"line_start":799,"line_end":799,"column_start":12,"column_end":25},"name":"set_sleepdeep","qualname":"<SCB>::set_sleepdeep","value":"pub fn set_sleepdeep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the SLEEPDEEP bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Set the SLEEPDEEP bit in the SCR register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92496,"byte_end":92541,"line_start":797,"line_end":797,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92546,"byte_end":92555,"line_start":798,"line_end":798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92765,"byte_end":92780,"line_start":807,"line_end":807,"column_start":12,"column_end":27},"name":"clear_sleepdeep","qualname":"<SCB>::clear_sleepdeep","value":"pub fn clear_sleepdeep(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the SLEEPDEEP bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Clear the SLEEPDEEP bit in the SCR register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92692,"byte_end":92739,"line_start":805,"line_end":805,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92744,"byte_end":92753,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93023,"byte_end":93038,"line_start":819,"line_end":819,"column_start":12,"column_end":27},"name":"set_sleeponexit","qualname":"<SCB>::set_sleeponexit","value":"pub fn set_sleeponexit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Set the SLEEPONEXIT bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Set the SLEEPONEXIT bit in the SCR register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92950,"byte_end":92997,"line_start":817,"line_end":817,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93002,"byte_end":93011,"line_start":818,"line_end":818,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93227,"byte_end":93244,"line_start":827,"line_end":827,"column_start":12,"column_end":29},"name":"clear_sleeponexit","qualname":"<SCB>::clear_sleeponexit","value":"pub fn clear_sleeponexit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear the SLEEPONEXIT bit in the SCR register\n","sig":null,"attributes":[{"value":"/ Clear the SLEEPONEXIT bit in the SCR register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93152,"byte_end":93201,"line_start":825,"line_end":825,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93206,"byte_end":93215,"line_start":826,"line_end":826,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93586,"byte_end":93595,"line_start":841,"line_end":841,"column_start":12,"column_end":21},"name":"sys_reset","qualname":"<SCB>::sys_reset","value":"pub fn sys_reset() -> !","parent":null,"children":[],"decl_id":null,"docs":" Initiate a system reset request to reset the MCU\n","sig":null,"attributes":[{"value":"/ Initiate a system reset request to reset the MCU","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93508,"byte_end":93560,"line_start":839,"line_end":839,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93565,"byte_end":93574,"line_start":840,"line_end":840,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94400,"byte_end":94410,"line_start":869,"line_end":869,"column_start":12,"column_end":22},"name":"set_pendsv","qualname":"<SCB>::set_pendsv","value":"pub fn set_pendsv()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSVSET bit in the ICSR register which will pend the PendSV interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94291,"byte_end":94374,"line_start":867,"line_end":867,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94379,"byte_end":94388,"line_start":868,"line_end":868,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94628,"byte_end":94645,"line_start":877,"line_end":877,"column_start":12,"column_end":29},"name":"is_pendsv_pending","qualname":"<SCB>::is_pendsv_pending","value":"pub fn is_pendsv_pending() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending\n","sig":null,"attributes":[{"value":"/ Check if PENDSVSET bit in the ICSR register is set meaning PendSV interrupt is pending","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94512,"byte_end":94602,"line_start":875,"line_end":875,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94607,"byte_end":94616,"line_start":876,"line_end":876,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94874,"byte_end":94886,"line_start":883,"line_end":883,"column_start":12,"column_end":24},"name":"clear_pendsv","qualname":"<SCB>::clear_pendsv","value":"pub fn clear_pendsv()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSVCLR bit in the ICSR register which will clear a pending PendSV interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94758,"byte_end":94848,"line_start":881,"line_end":881,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94853,"byte_end":94862,"line_start":882,"line_end":882,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95096,"byte_end":95106,"line_start":891,"line_end":891,"column_start":12,"column_end":22},"name":"set_pendst","qualname":"<SCB>::set_pendst","value":"pub fn set_pendst()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSTSET bit in the ICSR register which will pend a SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSTSET bit in the ICSR register which will pend a SysTick interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94988,"byte_end":95070,"line_start":889,"line_end":889,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95075,"byte_end":95084,"line_start":890,"line_end":890,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95325,"byte_end":95342,"line_start":899,"line_end":899,"column_start":12,"column_end":29},"name":"is_pendst_pending","qualname":"<SCB>::is_pendst_pending","value":"pub fn is_pendst_pending() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if PENDSTSET bit in the ICSR register is set meaning SysTick interrupt is pending\n","sig":null,"attributes":[{"value":"/ Check if PENDSTSET bit in the ICSR register is set meaning SysTick interrupt is pending","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95208,"byte_end":95299,"line_start":897,"line_end":897,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95304,"byte_end":95313,"line_start":898,"line_end":898,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95572,"byte_end":95584,"line_start":905,"line_end":905,"column_start":12,"column_end":24},"name":"clear_pendst","qualname":"<SCB>::clear_pendst","value":"pub fn clear_pendst()","parent":null,"children":[],"decl_id":null,"docs":" Set the PENDSTCLR bit in the ICSR register which will clear a pending SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Set the PENDSTCLR bit in the ICSR register which will clear a pending SysTick interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95455,"byte_end":95546,"line_start":903,"line_end":903,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95551,"byte_end":95560,"line_start":904,"line_end":904,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":874},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96008,"byte_end":96024,"line_start":920,"line_end":920,"column_start":5,"column_end":21},"name":"MemoryManagement","qualname":"::peripheral::scb::SystemHandler::MemoryManagement","value":"SystemHandler::MemoryManagement","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":" Memory management interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Memory management interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95912,"byte_end":95979,"line_start":918,"line_end":918,"column_start":5,"column_end":72}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95984,"byte_end":96003,"line_start":919,"line_end":919,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":877},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96123,"byte_end":96131,"line_start":924,"line_end":924,"column_start":5,"column_end":13},"name":"BusFault","qualname":"::peripheral::scb::SystemHandler::BusFault","value":"SystemHandler::BusFault","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":" Bus fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Bus fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96035,"byte_end":96094,"line_start":922,"line_end":922,"column_start":5,"column_end":64}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96099,"byte_end":96118,"line_start":923,"line_end":923,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":880},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96232,"byte_end":96242,"line_start":928,"line_end":928,"column_start":5,"column_end":15},"name":"UsageFault","qualname":"::peripheral::scb::SystemHandler::UsageFault","value":"SystemHandler::UsageFault","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":" Usage fault interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Usage fault interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96142,"byte_end":96203,"line_start":926,"line_end":926,"column_start":5,"column_end":66}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96208,"byte_end":96227,"line_start":927,"line_end":927,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96398,"byte_end":96404,"line_start":935,"line_end":935,"column_start":5,"column_end":11},"name":"SVCall","qualname":"::peripheral::scb::SystemHandler::SVCall","value":"SystemHandler::SVCall","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":" SV call interrupt\n","sig":null,"attributes":[{"value":"/ SV call interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96372,"byte_end":96393,"line_start":934,"line_end":934,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":886},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96508,"byte_end":96520,"line_start":939,"line_end":939,"column_start":5,"column_end":17},"name":"DebugMonitor","qualname":"::peripheral::scb::SystemHandler::DebugMonitor","value":"SystemHandler::DebugMonitor","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":" Debug monitor interrupt (not present on Cortex-M0 variants)\n","sig":null,"attributes":[{"value":"/ Debug monitor interrupt (not present on Cortex-M0 variants)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96416,"byte_end":96479,"line_start":937,"line_end":937,"column_start":5,"column_end":68}},{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96484,"byte_end":96503,"line_start":938,"line_end":938,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":889},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96558,"byte_end":96564,"line_start":942,"line_end":942,"column_start":5,"column_end":11},"name":"PendSV","qualname":"::peripheral::scb::SystemHandler::PendSV","value":"SystemHandler::PendSV","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":" Pend SV interrupt\n","sig":null,"attributes":[{"value":"/ Pend SV interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96532,"byte_end":96553,"line_start":941,"line_end":941,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":892},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96606,"byte_end":96613,"line_start":945,"line_end":945,"column_start":5,"column_end":12},"name":"SysTick","qualname":"::peripheral::scb::SystemHandler::SysTick","value":"SystemHandler::SysTick","parent":{"krate":0,"index":873},"children":[],"decl_id":null,"docs":" System Tick interrupt\n","sig":null,"attributes":[{"value":"/ System Tick interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96576,"byte_end":96601,"line_start":944,"line_end":944,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":873},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95809,"byte_end":95822,"line_start":915,"line_end":915,"column_start":10,"column_end":23},"name":"SystemHandler","qualname":"::peripheral::scb::SystemHandler","value":"pub enum SystemHandler {\n\n    /// Memory management interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    MemoryManagement = ,\n\n    /// Bus fault interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    BusFault = ,\n\n    /// Usage fault interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    UsageFault = ,\n\n    /// SV call interrupt\n    SVCall = ,\n\n    /// Debug monitor interrupt (not present on Cortex-M0 variants)\n    #[cfg(not(armv6m))]\n    DebugMonitor = ,\n\n    /// Pend SV interrupt\n    PendSV = ,\n\n    /// System Tick interrupt\n    SysTick = ,\n}","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892}],"decl_id":null,"docs":" System handlers, exceptions with configurable priority\n","sig":null,"attributes":[{"value":"/ System handlers, exceptions with configurable priority","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95684,"byte_end":95742,"line_start":912,"line_end":912,"column_start":1,"column_end":59}},{"value":"repr(u8)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":95788,"byte_end":95799,"line_start":914,"line_end":914,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96897,"byte_end":96909,"line_start":954,"line_end":954,"column_start":12,"column_end":24},"name":"get_priority","qualname":"<SCB>::get_priority","value":"pub fn get_priority(SystemHandler) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the hardware priority of `system_handler`","sig":null,"attributes":[{"value":"/ Returns the hardware priority of `system_handler`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96638,"byte_end":96691,"line_start":949,"line_end":949,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96696,"byte_end":96699,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ *NOTE*: Hardware priority does not exactly match logical priority levels. See","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96704,"byte_end":96785,"line_start":951,"line_end":951,"column_start":5,"column_end":86}},{"value":"/ [`NVIC.get_priority`](struct.NVIC.html#method.get_priority) for more details.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96790,"byte_end":96871,"line_start":952,"line_end":952,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96876,"byte_end":96885,"line_start":953,"line_end":953,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98656,"byte_end":98668,"line_start":999,"line_end":999,"column_start":19,"column_end":31},"name":"set_priority","qualname":"<SCB>::set_priority","value":"pub unsafe fn set_priority(&mut Self, SystemHandler, u8)","parent":null,"children":[],"decl_id":null,"docs":" Sets the hardware priority of `system_handler` to `prio`","sig":null,"attributes":[{"value":"/ Sets the hardware priority of `system_handler` to `prio`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":97987,"byte_end":98047,"line_start":986,"line_end":986,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98052,"byte_end":98055,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ *NOTE*: Hardware priority does not exactly match logical priority levels. See","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98060,"byte_end":98141,"line_start":988,"line_end":988,"column_start":5,"column_end":86}},{"value":"/ [`NVIC.get_priority`](struct.NVIC.html#method.get_priority) for more details.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98146,"byte_end":98227,"line_start":989,"line_end":989,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98232,"byte_end":98235,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ On ARMv6-M, updating a system handler priority requires a read-modify-write operation. On","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98240,"byte_end":98333,"line_start":991,"line_end":991,"column_start":5,"column_end":98}},{"value":"/ ARMv7-M, the operation is performed in a single, atomic write operation.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98338,"byte_end":98414,"line_start":992,"line_end":992,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98419,"byte_end":98422,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ # Unsafety","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98427,"byte_end":98441,"line_start":994,"line_end":994,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98446,"byte_end":98449,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ Changing priority levels can break priority-based critical sections (see","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98454,"byte_end":98530,"line_start":996,"line_end":996,"column_start":5,"column_end":81}},{"value":"/ [`register::basepri`](../register/basepri/index.html)) and compromise memory safety.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98535,"byte_end":98623,"line_start":997,"line_end":997,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":98628,"byte_end":98637,"line_start":998,"line_end":998,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100725,"byte_end":100731,"line_start":1056,"line_end":1056,"column_start":12,"column_end":18},"name":"enable","qualname":"<SCB>::enable","value":"pub fn enable(&mut Self, Exception)","parent":null,"children":[],"decl_id":null,"docs":" Enable the exception","sig":null,"attributes":[{"value":"/ Enable the exception","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100190,"byte_end":100214,"line_start":1043,"line_end":1043,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100219,"byte_end":100222,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ If the exception is enabled, when the exception is triggered, the exception handler will be executed instead of the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100227,"byte_end":100346,"line_start":1045,"line_end":1045,"column_start":5,"column_end":124}},{"value":"/ HardFault handler.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100351,"byte_end":100373,"line_start":1046,"line_end":1046,"column_start":5,"column_end":27}},{"value":"/ This function is only allowed on the following exceptions:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100378,"byte_end":100440,"line_start":1047,"line_end":1047,"column_start":5,"column_end":67}},{"value":"/ * `MemoryManagement`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100445,"byte_end":100469,"line_start":1048,"line_end":1048,"column_start":5,"column_end":29}},{"value":"/ * `BusFault`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100474,"byte_end":100490,"line_start":1049,"line_end":1049,"column_start":5,"column_end":21}},{"value":"/ * `UsageFault`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100495,"byte_end":100513,"line_start":1050,"line_end":1050,"column_start":5,"column_end":23}},{"value":"/ * `SecureFault` (can only be enabled from Secure state)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100518,"byte_end":100577,"line_start":1051,"line_end":1051,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100582,"byte_end":100585,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ Calling this function with any other exception will do nothing.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100590,"byte_end":100657,"line_start":1053,"line_end":1053,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100662,"byte_end":100671,"line_start":1054,"line_end":1054,"column_start":5,"column_end":14}},{"value":"cfg(not(any(armv6m, armv8m_base)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":100676,"byte_end":100713,"line_start":1055,"line_end":1055,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101592,"byte_end":101599,"line_start":1077,"line_end":1077,"column_start":12,"column_end":19},"name":"disable","qualname":"<SCB>::disable","value":"pub fn disable(&mut Self, Exception)","parent":null,"children":[],"decl_id":null,"docs":" Disable the exception","sig":null,"attributes":[{"value":"/ Disable the exception","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101052,"byte_end":101077,"line_start":1064,"line_end":1064,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101082,"byte_end":101085,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ If the exception is disabled, when the exception is triggered, the HardFault handler will be executed instead of the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101090,"byte_end":101210,"line_start":1066,"line_end":1066,"column_start":5,"column_end":125}},{"value":"/ exception handler.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101215,"byte_end":101237,"line_start":1067,"line_end":1067,"column_start":5,"column_end":27}},{"value":"/ This function is only allowed on the following exceptions:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101242,"byte_end":101304,"line_start":1068,"line_end":1068,"column_start":5,"column_end":67}},{"value":"/ * `MemoryManagement`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101309,"byte_end":101333,"line_start":1069,"line_end":1069,"column_start":5,"column_end":29}},{"value":"/ * `BusFault`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101338,"byte_end":101354,"line_start":1070,"line_end":1070,"column_start":5,"column_end":21}},{"value":"/ * `UsageFault`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101359,"byte_end":101377,"line_start":1071,"line_end":1071,"column_start":5,"column_end":23}},{"value":"/ * `SecureFault` (can not be changed from Non-secure state)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101382,"byte_end":101444,"line_start":1072,"line_end":1072,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101449,"byte_end":101452,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ Calling this function with any other exception will do nothing.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101457,"byte_end":101524,"line_start":1074,"line_end":1074,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101529,"byte_end":101538,"line_start":1075,"line_end":1075,"column_start":5,"column_end":14}},{"value":"cfg(not(any(armv6m, armv8m_base)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101543,"byte_end":101580,"line_start":1076,"line_end":1076,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":102318,"byte_end":102328,"line_start":1096,"line_end":1096,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<SCB>::is_enabled","value":"pub fn is_enabled(&Self, Exception) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if an exception is enabled","sig":null,"attributes":[{"value":"/ Check if an exception is enabled","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101921,"byte_end":101957,"line_start":1085,"line_end":1085,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101962,"byte_end":101965,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ This function is only allowed on the following exception:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":101970,"byte_end":102031,"line_start":1087,"line_end":1087,"column_start":5,"column_end":66}},{"value":"/ * `MemoryManagement`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":102036,"byte_end":102060,"line_start":1088,"line_end":1088,"column_start":5,"column_end":29}},{"value":"/ * `BusFault`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":102065,"byte_end":102081,"line_start":1089,"line_end":1089,"column_start":5,"column_end":21}},{"value":"/ * `UsageFault`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":102086,"byte_end":102104,"line_start":1090,"line_end":1090,"column_start":5,"column_end":23}},{"value":"/ * `SecureFault` (can not be read from Non-secure state)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":102109,"byte_end":102168,"line_start":1091,"line_end":1091,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":102173,"byte_end":102176,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ Calling this function with any other exception will read `false`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":102181,"byte_end":102250,"line_start":1093,"line_end":1093,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":102255,"byte_end":102264,"line_start":1094,"line_end":1094,"column_start":5,"column_end":14}},{"value":"cfg(not(any(armv6m, armv8m_base)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":102269,"byte_end":102306,"line_start":1095,"line_end":1095,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":463},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"syst","qualname":"::peripheral::syst","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":906},{"krate":0,"index":920},{"krate":0,"index":919},{"krate":0,"index":917},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"/ SysTick: System Timer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102539,"byte_end":102564,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102671,"byte_end":102684,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::syst::RegisterBlock","value":"RegisterBlock { csr, rvr, cvr, calib }","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102630,"byte_end":102648,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102649,"byte_end":102659,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":469},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102722,"byte_end":102725,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"name":"csr","qualname":"::peripheral::syst::RegisterBlock::csr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Control and Status\n","sig":null,"attributes":[{"value":"/ Control and Status","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102691,"byte_end":102713,"line_start":10,"line_end":10,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":470},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102765,"byte_end":102768,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"rvr","qualname":"::peripheral::syst::RegisterBlock::rvr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Reload Value\n","sig":null,"attributes":[{"value":"/ Reload Value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102740,"byte_end":102756,"line_start":12,"line_end":12,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":471},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102809,"byte_end":102812,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"cvr","qualname":"::peripheral::syst::RegisterBlock::cvr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Current Value\n","sig":null,"attributes":[{"value":"/ Current Value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102783,"byte_end":102800,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":472},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102857,"byte_end":102862,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"calib","qualname":"::peripheral::syst::RegisterBlock::calib","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Calibration Value\n","sig":null,"attributes":[{"value":"/ Calibration Value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102827,"byte_end":102848,"line_start":16,"line_end":16,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":907},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103003,"byte_end":103007,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Core","qualname":"::peripheral::syst::SystClkSource::Core","value":"SystClkSource::Core","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" Core-provided clock\n","sig":null,"attributes":[{"value":"/ Core-provided clock","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102975,"byte_end":102998,"line_start":23,"line_end":23,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103046,"byte_end":103054,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"External","qualname":"::peripheral::syst::SystClkSource::External","value":"SystClkSource::External","parent":{"krate":0,"index":906},"children":[],"decl_id":null,"docs":" External reference clock\n","sig":null,"attributes":[{"value":"/ External reference clock","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103013,"byte_end":103041,"line_start":25,"line_end":25,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":906},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102955,"byte_end":102968,"line_start":22,"line_end":22,"column_start":10,"column_end":23},"name":"SystClkSource","qualname":"::peripheral::syst::SystClkSource","value":"pub enum SystClkSource {\n\n    /// Core-provided clock\n    Core,\n\n    /// External reference clock\n    External,\n}","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":909}],"decl_id":null,"docs":" SysTick clock source\n","sig":null,"attributes":[{"value":"/ SysTick clock source","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":102876,"byte_end":102900,"line_start":20,"line_end":20,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103513,"byte_end":103526,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"clear_current","qualname":"<SYST>::clear_current","value":"pub fn clear_current(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears current value to 0","sig":null,"attributes":[{"value":"/ Clears current value to 0","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103355,"byte_end":103384,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103389,"byte_end":103392,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ After calling `clear_current()`, the next call to `has_wrapped()` will return `false`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103397,"byte_end":103487,"line_start":42,"line_end":42,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103492,"byte_end":103501,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103634,"byte_end":103649,"line_start":50,"line_end":50,"column_start":12,"column_end":27},"name":"disable_counter","qualname":"<SYST>::disable_counter","value":"pub fn disable_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables counter\n","sig":null,"attributes":[{"value":"/ Disables counter","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103588,"byte_end":103608,"line_start":48,"line_end":48,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103613,"byte_end":103622,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103791,"byte_end":103808,"line_start":56,"line_end":56,"column_start":12,"column_end":29},"name":"disable_interrupt","qualname":"<SYST>::disable_interrupt","value":"pub fn disable_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disables SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Disables SysTick interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103735,"byte_end":103765,"line_start":54,"line_end":54,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103770,"byte_end":103779,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104383,"byte_end":104397,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"enable_counter","qualname":"<SYST>::enable_counter","value":"pub fn enable_counter(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables counter","sig":null,"attributes":[{"value":"/ Enables counter","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103895,"byte_end":103914,"line_start":60,"line_end":60,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103919,"byte_end":103922,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ *NOTE* The reference manual indicates that:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103927,"byte_end":103974,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103979,"byte_end":103982,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ \"The SysTick counter reload and current value are undefined at reset, the correct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103987,"byte_end":104072,"line_start":64,"line_end":64,"column_start":5,"column_end":90}},{"value":"/ initialization sequence for the SysTick counter is:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104077,"byte_end":104132,"line_start":65,"line_end":65,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104137,"byte_end":104140,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ - Program reload value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104145,"byte_end":104171,"line_start":67,"line_end":67,"column_start":5,"column_end":31}},{"value":"/ - Clear current value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104176,"byte_end":104201,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/ - Program Control and Status register\"","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104206,"byte_end":104248,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104253,"byte_end":104256,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The sequence translates to `self.set_reload(x); self.clear_current(); self.enable_counter()`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104261,"byte_end":104357,"line_start":71,"line_end":71,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104362,"byte_end":104371,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104537,"byte_end":104553,"line_start":79,"line_end":79,"column_start":12,"column_end":28},"name":"enable_interrupt","qualname":"<SYST>::enable_interrupt","value":"pub fn enable_interrupt(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Enables SysTick interrupt\n","sig":null,"attributes":[{"value":"/ Enables SysTick interrupt","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104482,"byte_end":104511,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104516,"byte_end":104525,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104874,"byte_end":104890,"line_start":88,"line_end":88,"column_start":12,"column_end":28},"name":"get_clock_source","qualname":"<SYST>::get_clock_source","value":"pub fn get_clock_source(&mut Self) -> SystClkSource","parent":null,"children":[],"decl_id":null,"docs":" Gets clock source","sig":null,"attributes":[{"value":"/ Gets clock source","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104639,"byte_end":104660,"line_start":83,"line_end":83,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104665,"byte_end":104668,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104673,"byte_end":104769,"line_start":85,"line_end":85,"column_start":5,"column_end":101}},{"value":"/ bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104774,"byte_end":104848,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":104853,"byte_end":104862,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105187,"byte_end":105198,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_current","qualname":"<SYST>::get_current","value":"pub fn get_current() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets current value\n","sig":null,"attributes":[{"value":"/ Gets current value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105139,"byte_end":105161,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105166,"byte_end":105175,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105370,"byte_end":105380,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"get_reload","qualname":"<SYST>::get_reload","value":"pub fn get_reload() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Gets reload value\n","sig":null,"attributes":[{"value":"/ Gets reload value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105323,"byte_end":105344,"line_start":104,"line_end":104,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105349,"byte_end":105358,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105727,"byte_end":105745,"line_start":117,"line_end":117,"column_start":12,"column_end":30},"name":"get_ticks_per_10ms","qualname":"<SYST>::get_ticks_per_10ms","value":"pub fn get_ticks_per_10ms() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the reload value with which the counter would wrap once per 10\n ms","sig":null,"attributes":[{"value":"/ Returns the reload value with which the counter would wrap once per 10","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105505,"byte_end":105579,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ ms","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105584,"byte_end":105590,"line_start":112,"line_end":112,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105595,"byte_end":105598,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Returns `0` if the value is not known (e.g. because the clock can","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105603,"byte_end":105672,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ change dynamically).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105677,"byte_end":105701,"line_start":115,"line_end":115,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105706,"byte_end":105715,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105972,"byte_end":105991,"line_start":124,"line_end":124,"column_start":12,"column_end":31},"name":"has_reference_clock","qualname":"<SYST>::has_reference_clock","value":"pub fn has_reference_clock() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if an external reference clock is available\n","sig":null,"attributes":[{"value":"/ Checks if an external reference clock is available","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105892,"byte_end":105946,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":105951,"byte_end":105960,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106381,"byte_end":106392,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"has_wrapped","qualname":"<SYST>::has_wrapped","value":"pub fn has_wrapped(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the counter wrapped (underflowed) since the last check","sig":null,"attributes":[{"value":"/ Checks if the counter wrapped (underflowed) since the last check","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106143,"byte_end":106211,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106216,"byte_end":106219,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and will clear","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106224,"byte_end":106317,"line_start":131,"line_end":131,"column_start":5,"column_end":98}},{"value":"/ the bit of the read register.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106322,"byte_end":106355,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106360,"byte_end":106369,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106721,"byte_end":106739,"line_start":143,"line_end":143,"column_start":12,"column_end":30},"name":"is_counter_enabled","qualname":"<SYST>::is_counter_enabled","value":"pub fn is_counter_enabled(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if counter is enabled","sig":null,"attributes":[{"value":"/ Checks if counter is enabled","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106475,"byte_end":106507,"line_start":138,"line_end":138,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106512,"byte_end":106515,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106520,"byte_end":106616,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106621,"byte_end":106695,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106700,"byte_end":106709,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107075,"byte_end":107095,"line_start":152,"line_end":152,"column_start":12,"column_end":32},"name":"is_interrupt_enabled","qualname":"<SYST>::is_interrupt_enabled","value":"pub fn is_interrupt_enabled(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if SysTick interrupt is enabled","sig":null,"attributes":[{"value":"/ Checks if SysTick interrupt is enabled","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106819,"byte_end":106861,"line_start":147,"line_end":147,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106866,"byte_end":106869,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ *NOTE* This takes `&mut self` because the read operation is side effectful and can clear the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106874,"byte_end":106970,"line_start":149,"line_end":149,"column_start":5,"column_end":101}},{"value":"/ bit that indicates that the timer has wrapped (cf. `SYST.has_wrapped`)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":106975,"byte_end":107049,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107054,"byte_end":107063,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107416,"byte_end":107426,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"is_precise","qualname":"<SYST>::is_precise","value":"pub fn is_precise() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the calibration value is precise","sig":null,"attributes":[{"value":"/ Checks if the calibration value is precise","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107176,"byte_end":107222,"line_start":156,"line_end":156,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107227,"byte_end":107230,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if using the reload value returned by","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107235,"byte_end":107292,"line_start":158,"line_end":158,"column_start":5,"column_end":62}},{"value":"/ `get_ticks_per_10ms()` may result in a period significantly deviating","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107297,"byte_end":107370,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ from 10 ms.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107375,"byte_end":107390,"line_start":160,"line_end":160,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107395,"byte_end":107404,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107624,"byte_end":107640,"line_start":169,"line_end":169,"column_start":12,"column_end":28},"name":"set_clock_source","qualname":"<SYST>::set_clock_source","value":"pub fn set_clock_source(&mut Self, SystClkSource)","parent":null,"children":[],"decl_id":null,"docs":" Sets clock source\n","sig":null,"attributes":[{"value":"/ Sets clock source","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107577,"byte_end":107598,"line_start":167,"line_end":167,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107603,"byte_end":107612,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":108120,"byte_end":108130,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"set_reload","qualname":"<SYST>::set_reload","value":"pub fn set_reload(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets reload value","sig":null,"attributes":[{"value":"/ Sets reload value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107916,"byte_end":107937,"line_start":176,"line_end":176,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107942,"byte_end":107945,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Valid values are between `1` and `0x00ffffff`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":107950,"byte_end":108000,"line_start":178,"line_end":178,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":108005,"byte_end":108008,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ *NOTE* To make the timer wrap every `N` ticks set the reload value to `N - 1`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":108013,"byte_end":108094,"line_start":180,"line_end":180,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":108099,"byte_end":108108,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":503},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tpiu","qualname":"::peripheral::tpiu","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"decl_id":null,"docs":" Trace Port Interface Unit;","sig":null,"attributes":[{"value":"cfg(not(armv6m))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26035,"byte_end":26054,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"/ Trace Port Interface Unit;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108206,"byte_end":108236,"line_start":1,"line_end":1,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108237,"byte_end":108240,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *NOTE* Not available on Armv6-M.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108241,"byte_end":108277,"line_start":3,"line_end":3,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":508},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108358,"byte_end":108371,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"RegisterBlock","qualname":"::peripheral::tpiu::RegisterBlock","value":"RegisterBlock { sspsr, cspsr, acpr, sppr, ffcr, lar, lsr, _type }","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":526}],"decl_id":null,"docs":" Register block\n","sig":null,"attributes":[{"value":"/ Register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108317,"byte_end":108335,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108336,"byte_end":108346,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":509},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108420,"byte_end":108425,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"sspsr","qualname":"::peripheral::tpiu::RegisterBlock::sspsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Supported Parallel Port Sizes\n","sig":null,"attributes":[{"value":"/ Supported Parallel Port Sizes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108378,"byte_end":108411,"line_start":10,"line_end":10,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":510},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108479,"byte_end":108484,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"cspsr","qualname":"::peripheral::tpiu::RegisterBlock::cspsr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Current Parallel Port Size\n","sig":null,"attributes":[{"value":"/ Current Parallel Port Size","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108440,"byte_end":108470,"line_start":12,"line_end":12,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":513},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108565,"byte_end":108569,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"acpr","qualname":"::peripheral::tpiu::RegisterBlock::acpr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Asynchronous Clock Prescaler\n","sig":null,"attributes":[{"value":"/ Asynchronous Clock Prescaler","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108524,"byte_end":108556,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":516},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108643,"byte_end":108647,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"sppr","qualname":"::peripheral::tpiu::RegisterBlock::sppr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Selected Pin Control\n","sig":null,"attributes":[{"value":"/ Selected Pin Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108610,"byte_end":108634,"line_start":18,"line_end":18,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":519},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108729,"byte_end":108733,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"ffcr","qualname":"::peripheral::tpiu::RegisterBlock::ffcr","value":"volatile_register::RW<u32>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Formatter and Flush Control\n","sig":null,"attributes":[{"value":"/ Formatter and Flush Control","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108689,"byte_end":108720,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":522},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108799,"byte_end":108802,"line_start":25,"line_end":25,"column_start":9,"column_end":12},"name":"lar","qualname":"::peripheral::tpiu::RegisterBlock::lar","value":"volatile_register::WO<u32>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Lock Access\n","sig":null,"attributes":[{"value":"/ Lock Access","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108775,"byte_end":108790,"line_start":24,"line_end":24,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":523},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108841,"byte_end":108844,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"lsr","qualname":"::peripheral::tpiu::RegisterBlock::lsr","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" Lock Status\n","sig":null,"attributes":[{"value":"/ Lock Status","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108817,"byte_end":108832,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":526},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108906,"byte_end":108911,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"_type","qualname":"::peripheral::tpiu::RegisterBlock::_type","value":"volatile_register::RO<u32>","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":" TPIU Type\n","sig":null,"attributes":[{"value":"/ TPIU Type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/tpiu.rs","byte_start":108884,"byte_end":108897,"line_start":29,"line_end":29,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26288,"byte_end":26299,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"Peripherals","qualname":"::peripheral::Peripherals","value":"Peripherals { CBP, CPUID, DCB, DWT, FPB, FPU, ICB, ITM, MPU, NVIC, SAU, SCB, SYST, TPIU }","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"decl_id":null,"docs":" Core peripherals\n","sig":null,"attributes":[{"value":"/ Core peripherals","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26191,"byte_end":26211,"line_start":90,"line_end":90,"column_start":1,"column_end":21}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26212,"byte_end":26236,"line_start":91,"line_end":91,"column_start":1,"column_end":25}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26237,"byte_end":26276,"line_start":92,"line_end":92,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":528},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26403,"byte_end":26406,"line_start":96,"line_end":96,"column_start":9,"column_end":12},"name":"CBP","qualname":"::peripheral::Peripherals::CBP","value":"peripheral::CBP","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Cache and branch predictor maintenance operations.\n Not available on Armv6-M.\n","sig":null,"attributes":[{"value":"/ Cache and branch predictor maintenance operations.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26306,"byte_end":26360,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ Not available on Armv6-M.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26365,"byte_end":26394,"line_start":95,"line_end":95,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":529},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26436,"byte_end":26441,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"CPUID","qualname":"::peripheral::Peripherals::CPUID","value":"peripheral::CPUID","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"/ CPUID","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26418,"byte_end":26427,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":530},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26487,"byte_end":26490,"line_start":102,"line_end":102,"column_start":9,"column_end":12},"name":"DCB","qualname":"::peripheral::Peripherals::DCB","value":"peripheral::DCB","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"/ Debug Control Block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26455,"byte_end":26478,"line_start":101,"line_end":101,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":531},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26545,"byte_end":26548,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"name":"DWT","qualname":"::peripheral::Peripherals::DWT","value":"peripheral::DWT","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"/ Data Watchpoint and Trace unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26502,"byte_end":26536,"line_start":104,"line_end":104,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":532},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26639,"byte_end":26642,"line_start":109,"line_end":109,"column_start":9,"column_end":12},"name":"FPB","qualname":"::peripheral::Peripherals::FPB","value":"peripheral::FPB","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Flash Patch and Breakpoint unit.\n Not available on Armv6-M.\n","sig":null,"attributes":[{"value":"/ Flash Patch and Breakpoint unit.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26560,"byte_end":26596,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/ Not available on Armv6-M.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26601,"byte_end":26630,"line_start":108,"line_end":108,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":533},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26687,"byte_end":26690,"line_start":112,"line_end":112,"column_start":9,"column_end":12},"name":"FPU","qualname":"::peripheral::Peripherals::FPU","value":"peripheral::FPU","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Floating Point Unit.\n","sig":null,"attributes":[{"value":"/ Floating Point Unit.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26654,"byte_end":26678,"line_start":111,"line_end":111,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":534},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26860,"byte_end":26863,"line_start":118,"line_end":118,"column_start":9,"column_end":12},"name":"ICB","qualname":"::peripheral::Peripherals::ICB","value":"peripheral::ICB","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Implementation Control Block.","sig":null,"attributes":[{"value":"/ Implementation Control Block.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26702,"byte_end":26735,"line_start":114,"line_end":114,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26740,"byte_end":26743,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The name is from the v8-M spec, but the block existed in earlier","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26748,"byte_end":26816,"line_start":116,"line_end":116,"column_start":5,"column_end":73}},{"value":"/ revisions, without a name.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26821,"byte_end":26851,"line_start":117,"line_end":117,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":535},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26975,"byte_end":26978,"line_start":122,"line_end":122,"column_start":9,"column_end":12},"name":"ITM","qualname":"::peripheral::Peripherals::ITM","value":"peripheral::ITM","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Instrumentation Trace Macrocell.\n Not available on Armv6-M and Armv8-M Baseline.\n","sig":null,"attributes":[{"value":"/ Instrumentation Trace Macrocell.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26875,"byte_end":26911,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/ Not available on Armv6-M and Armv8-M Baseline.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26916,"byte_end":26966,"line_start":121,"line_end":121,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":536},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27025,"byte_end":27028,"line_start":125,"line_end":125,"column_start":9,"column_end":12},"name":"MPU","qualname":"::peripheral::Peripherals::MPU","value":"peripheral::MPU","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26990,"byte_end":27016,"line_start":124,"line_end":124,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":537},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27087,"byte_end":27091,"line_start":128,"line_end":128,"column_start":9,"column_end":13},"name":"NVIC","qualname":"::peripheral::Peripherals::NVIC","value":"peripheral::NVIC","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27040,"byte_end":27078,"line_start":127,"line_end":127,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":538},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27142,"byte_end":27145,"line_start":131,"line_end":131,"column_start":9,"column_end":12},"name":"SAU","qualname":"::peripheral::Peripherals::SAU","value":"peripheral::SAU","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Security Attribution Unit\n","sig":null,"attributes":[{"value":"/ Security Attribution Unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27104,"byte_end":27133,"line_start":130,"line_end":130,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":539},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27190,"byte_end":27193,"line_start":134,"line_end":134,"column_start":9,"column_end":12},"name":"SCB","qualname":"::peripheral::Peripherals::SCB","value":"peripheral::SCB","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27157,"byte_end":27181,"line_start":133,"line_end":133,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":540},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27239,"byte_end":27243,"line_start":137,"line_end":137,"column_start":9,"column_end":13},"name":"SYST","qualname":"::peripheral::Peripherals::SYST","value":"peripheral::SYST","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"/ SysTick: System Timer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27205,"byte_end":27230,"line_start":136,"line_end":136,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":541},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27329,"byte_end":27333,"line_start":141,"line_end":141,"column_start":9,"column_end":13},"name":"TPIU","qualname":"::peripheral::Peripherals::TPIU","value":"peripheral::TPIU","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Trace Port Interface Unit.\n Not available on Armv6-M.\n","sig":null,"attributes":[{"value":"/ Trace Port Interface Unit.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27256,"byte_end":27286,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/ Not available on Armv6-M.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27291,"byte_end":27320,"line_start":140,"line_end":140,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27940,"byte_end":27944,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"take","qualname":"<Peripherals>::take","value":"pub fn take() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns all the core peripherals *once*\n","sig":null,"attributes":[{"value":"/ Returns all the core peripherals *once*","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27871,"byte_end":27914,"line_start":157,"line_end":157,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27919,"byte_end":27928,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":28238,"byte_end":28243,"line_start":171,"line_end":171,"column_start":19,"column_end":24},"name":"steal","qualname":"<Peripherals>::steal","value":"pub unsafe fn steal() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unchecked version of `Peripherals::take`\n","sig":null,"attributes":[{"value":"/ Unchecked version of `Peripherals::take`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":28161,"byte_end":28205,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":28210,"byte_end":28219,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":549},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29482,"byte_end":29485,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"CBP","qualname":"::peripheral::CBP","value":"CBP {  }","parent":null,"children":[{"krate":0,"index":550}],"decl_id":null,"docs":" Cache and branch predictor maintenance operations\n","sig":null,"attributes":[{"value":"/ Cache and branch predictor maintenance operations","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29417,"byte_end":29470,"line_start":222,"line_end":222,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":554},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29774,"byte_end":29777,"line_start":239,"line_end":239,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::CBP::PTR","value":"*const self::cbp::RegisterBlock","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29726,"byte_end":29759,"line_start":238,"line_end":238,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29952,"byte_end":29955,"line_start":243,"line_end":243,"column_start":18,"column_end":21},"name":"ptr","qualname":"<CBP>::ptr","value":"pub const fn ptr() -> *const self::cbp::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29843,"byte_end":29912,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29917,"byte_end":29934,"line_start":242,"line_end":242,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":559},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30235,"byte_end":30240,"line_start":259,"line_end":259,"column_start":12,"column_end":17},"name":"CPUID","qualname":"::peripheral::CPUID","value":"CPUID {  }","parent":null,"children":[{"krate":0,"index":560}],"decl_id":null,"docs":" CPUID\n","sig":null,"attributes":[{"value":"/ CPUID","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30214,"byte_end":30223,"line_start":258,"line_end":258,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":563},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30379,"byte_end":30382,"line_start":267,"line_end":267,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::CPUID::PTR","value":"*const self::cpuid::RegisterBlock","parent":{"krate":0,"index":562},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30331,"byte_end":30364,"line_start":266,"line_end":266,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30559,"byte_end":30562,"line_start":271,"line_end":271,"column_start":18,"column_end":21},"name":"ptr","qualname":"<CPUID>::ptr","value":"pub const fn ptr() -> *const self::cpuid::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30450,"byte_end":30519,"line_start":269,"line_end":269,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30524,"byte_end":30541,"line_start":270,"line_end":270,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30842,"byte_end":30845,"line_start":286,"line_end":286,"column_start":12,"column_end":15},"name":"DCB","qualname":"::peripheral::DCB","value":"DCB {  }","parent":null,"children":[{"krate":0,"index":569}],"decl_id":null,"docs":" Debug Control Block\n","sig":null,"attributes":[{"value":"/ Debug Control Block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30807,"byte_end":30830,"line_start":285,"line_end":285,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":572},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30980,"byte_end":30983,"line_start":294,"line_end":294,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::DCB::PTR","value":"*const dcb::RegisterBlock","parent":{"krate":0,"index":571},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30932,"byte_end":30965,"line_start":293,"line_end":293,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31152,"byte_end":31155,"line_start":298,"line_end":298,"column_start":18,"column_end":21},"name":"ptr","qualname":"<DCB>::ptr","value":"pub const fn ptr() -> *const dcb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31043,"byte_end":31112,"line_start":296,"line_end":296,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31117,"byte_end":31134,"line_start":297,"line_end":297,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":577},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31433,"byte_end":31436,"line_start":313,"line_end":313,"column_start":12,"column_end":15},"name":"DWT","qualname":"::peripheral::DWT","value":"DWT {  }","parent":null,"children":[{"krate":0,"index":578}],"decl_id":null,"docs":" Data Watchpoint and Trace unit\n","sig":null,"attributes":[{"value":"/ Data Watchpoint and Trace unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31387,"byte_end":31421,"line_start":312,"line_end":312,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":581},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31571,"byte_end":31574,"line_start":321,"line_end":321,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::DWT::PTR","value":"*const dwt::RegisterBlock","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31523,"byte_end":31556,"line_start":320,"line_end":320,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31743,"byte_end":31746,"line_start":325,"line_end":325,"column_start":18,"column_end":21},"name":"ptr","qualname":"<DWT>::ptr","value":"pub const fn ptr() -> *const dwt::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31634,"byte_end":31703,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31708,"byte_end":31725,"line_start":324,"line_end":324,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32026,"byte_end":32029,"line_start":340,"line_end":340,"column_start":12,"column_end":15},"name":"FPB","qualname":"::peripheral::FPB","value":"FPB {  }","parent":null,"children":[{"krate":0,"index":587}],"decl_id":null,"docs":" Flash Patch and Breakpoint unit\n","sig":null,"attributes":[{"value":"/ Flash Patch and Breakpoint unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31979,"byte_end":32014,"line_start":339,"line_end":339,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":590},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32184,"byte_end":32187,"line_start":349,"line_end":349,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::FPB::PTR","value":"*const fpb::RegisterBlock","parent":{"krate":0,"index":589},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32136,"byte_end":32169,"line_start":348,"line_end":348,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32356,"byte_end":32359,"line_start":353,"line_end":353,"column_start":18,"column_end":21},"name":"ptr","qualname":"<FPB>::ptr","value":"pub const fn ptr() -> *const fpb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32247,"byte_end":32316,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32321,"byte_end":32338,"line_start":352,"line_end":352,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32647,"byte_end":32650,"line_start":369,"line_end":369,"column_start":12,"column_end":15},"name":"FPU","qualname":"::peripheral::FPU","value":"FPU {  }","parent":null,"children":[{"krate":0,"index":596}],"decl_id":null,"docs":" Floating Point Unit\n","sig":null,"attributes":[{"value":"/ Floating Point Unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32612,"byte_end":32635,"line_start":368,"line_end":368,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":599},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32830,"byte_end":32833,"line_start":378,"line_end":378,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::FPU::PTR","value":"*const fpu::RegisterBlock","parent":{"krate":0,"index":598},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32782,"byte_end":32815,"line_start":377,"line_end":377,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33002,"byte_end":33005,"line_start":382,"line_end":382,"column_start":18,"column_end":21},"name":"ptr","qualname":"<FPU>::ptr","value":"pub const fn ptr() -> *const fpu::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32893,"byte_end":32962,"line_start":380,"line_end":380,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32967,"byte_end":32984,"line_start":381,"line_end":381,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33566,"byte_end":33569,"line_start":403,"line_end":403,"column_start":12,"column_end":15},"name":"ICB","qualname":"::peripheral::ICB","value":"ICB {  }","parent":null,"children":[{"krate":0,"index":605}],"decl_id":null,"docs":" Implementation Control Block.","sig":null,"attributes":[{"value":"/ Implementation Control Block.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33283,"byte_end":33316,"line_start":397,"line_end":397,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33317,"byte_end":33320,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This block contains implementation-defined registers like `ictr` and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33321,"byte_end":33393,"line_start":399,"line_end":399,"column_start":1,"column_end":73}},{"value":"/ `actlr`. It's called the \"implementation control block\" in the ARMv8-M","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33394,"byte_end":33468,"line_start":400,"line_end":400,"column_start":1,"column_end":75}},{"value":"/ standard, but earlier standards contained the registers, just without a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33469,"byte_end":33544,"line_start":401,"line_end":401,"column_start":1,"column_end":76}},{"value":"/ name.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33545,"byte_end":33554,"line_start":402,"line_end":402,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":608},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33704,"byte_end":33707,"line_start":411,"line_end":411,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::ICB::PTR","value":"*mut icb::RegisterBlock","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33656,"byte_end":33689,"line_start":410,"line_end":410,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33872,"byte_end":33875,"line_start":415,"line_end":415,"column_start":18,"column_end":21},"name":"ptr","qualname":"<ICB>::ptr","value":"pub const fn ptr() -> *mut icb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33763,"byte_end":33832,"line_start":413,"line_end":413,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33837,"byte_end":33854,"line_start":414,"line_end":414,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34299,"byte_end":34302,"line_start":437,"line_end":437,"column_start":12,"column_end":15},"name":"ITM","qualname":"::peripheral::ITM","value":"ITM {  }","parent":null,"children":[{"krate":0,"index":616}],"decl_id":null,"docs":" Instrumentation Trace Macrocell\n","sig":null,"attributes":[{"value":"/ Instrumentation Trace Macrocell","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34252,"byte_end":34287,"line_start":436,"line_end":436,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":619},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34480,"byte_end":34483,"line_start":446,"line_end":446,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::ITM::PTR","value":"*mut itm::RegisterBlock","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34432,"byte_end":34465,"line_start":445,"line_end":445,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34648,"byte_end":34651,"line_start":450,"line_end":450,"column_start":18,"column_end":21},"name":"ptr","qualname":"<ITM>::ptr","value":"pub const fn ptr() -> *mut itm::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34539,"byte_end":34608,"line_start":448,"line_end":448,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34613,"byte_end":34630,"line_start":449,"line_end":449,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":626},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35152,"byte_end":35155,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"MPU","qualname":"::peripheral::MPU","value":"MPU {  }","parent":null,"children":[{"krate":0,"index":627}],"decl_id":null,"docs":" Memory Protection Unit\n","sig":null,"attributes":[{"value":"/ Memory Protection Unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35114,"byte_end":35140,"line_start":473,"line_end":473,"column_start":1,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":630},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35290,"byte_end":35293,"line_start":482,"line_end":482,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::MPU::PTR","value":"*const mpu::RegisterBlock","parent":{"krate":0,"index":629},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35242,"byte_end":35275,"line_start":481,"line_end":481,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35462,"byte_end":35465,"line_start":486,"line_end":486,"column_start":18,"column_end":21},"name":"ptr","qualname":"<MPU>::ptr","value":"pub const fn ptr() -> *const mpu::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35353,"byte_end":35422,"line_start":484,"line_end":484,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35427,"byte_end":35444,"line_start":485,"line_end":485,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":635},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35748,"byte_end":35752,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"NVIC","qualname":"::peripheral::NVIC","value":"NVIC {  }","parent":null,"children":[{"krate":0,"index":636}],"decl_id":null,"docs":" Nested Vector Interrupt Controller\n","sig":null,"attributes":[{"value":"/ Nested Vector Interrupt Controller","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35698,"byte_end":35736,"line_start":500,"line_end":500,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":639},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35889,"byte_end":35892,"line_start":509,"line_end":509,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::NVIC::PTR","value":"*const nvic::RegisterBlock","parent":{"krate":0,"index":638},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35841,"byte_end":35874,"line_start":508,"line_end":508,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36062,"byte_end":36065,"line_start":513,"line_end":513,"column_start":18,"column_end":21},"name":"ptr","qualname":"<NVIC>::ptr","value":"pub const fn ptr() -> *const nvic::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35953,"byte_end":36022,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36027,"byte_end":36044,"line_start":512,"line_end":512,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36342,"byte_end":36345,"line_start":528,"line_end":528,"column_start":12,"column_end":15},"name":"SAU","qualname":"::peripheral::SAU","value":"SAU {  }","parent":null,"children":[{"krate":0,"index":645}],"decl_id":null,"docs":" Security Attribution Unit\n","sig":null,"attributes":[{"value":"/ Security Attribution Unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36301,"byte_end":36330,"line_start":527,"line_end":527,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":647},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36954,"byte_end":36957,"line_start":557,"line_end":557,"column_start":12,"column_end":15},"name":"SCB","qualname":"::peripheral::SCB","value":"SCB {  }","parent":null,"children":[{"krate":0,"index":648}],"decl_id":null,"docs":" System Control Block\n","sig":null,"attributes":[{"value":"/ System Control Block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36918,"byte_end":36942,"line_start":556,"line_end":556,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":651},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37092,"byte_end":37095,"line_start":565,"line_end":565,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::SCB::PTR","value":"*const scb::RegisterBlock","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37044,"byte_end":37077,"line_start":564,"line_end":564,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37264,"byte_end":37267,"line_start":569,"line_end":569,"column_start":18,"column_end":21},"name":"ptr","qualname":"<SCB>::ptr","value":"pub const fn ptr() -> *const scb::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37155,"byte_end":37224,"line_start":567,"line_end":567,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37229,"byte_end":37246,"line_start":568,"line_end":568,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37537,"byte_end":37541,"line_start":584,"line_end":584,"column_start":12,"column_end":16},"name":"SYST","qualname":"::peripheral::SYST","value":"SYST {  }","parent":null,"children":[{"krate":0,"index":657}],"decl_id":null,"docs":" SysTick: System Timer\n","sig":null,"attributes":[{"value":"/ SysTick: System Timer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37500,"byte_end":37525,"line_start":583,"line_end":583,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":660},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37678,"byte_end":37681,"line_start":592,"line_end":592,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::SYST::PTR","value":"*const syst::RegisterBlock","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37630,"byte_end":37663,"line_start":591,"line_end":591,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37851,"byte_end":37854,"line_start":596,"line_end":596,"column_start":18,"column_end":21},"name":"ptr","qualname":"<SYST>::ptr","value":"pub const fn ptr() -> *const syst::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37742,"byte_end":37811,"line_start":594,"line_end":594,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37816,"byte_end":37833,"line_start":595,"line_end":595,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":665},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38131,"byte_end":38135,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"TPIU","qualname":"::peripheral::TPIU","value":"TPIU {  }","parent":null,"children":[{"krate":0,"index":666}],"decl_id":null,"docs":" Trace Port Interface Unit\n","sig":null,"attributes":[{"value":"/ Trace Port Interface Unit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38090,"byte_end":38119,"line_start":610,"line_end":610,"column_start":1,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":669},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38292,"byte_end":38295,"line_start":620,"line_end":620,"column_start":15,"column_end":18},"name":"PTR","qualname":"::peripheral::TPIU::PTR","value":"*const tpiu::RegisterBlock","parent":{"krate":0,"index":668},"children":[],"decl_id":null,"docs":" Pointer to the register block\n","sig":null,"attributes":[{"value":"/ Pointer to the register block","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38244,"byte_end":38277,"line_start":619,"line_end":619,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38465,"byte_end":38468,"line_start":624,"line_end":624,"column_start":18,"column_end":21},"name":"ptr","qualname":"<TPIU>::ptr","value":"pub const fn ptr() -> *const tpiu::RegisterBlock","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the register block (to be deprecated in 0.7)\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the register block (to be deprecated in 0.7)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38356,"byte_end":38425,"line_start":622,"line_end":622,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38430,"byte_end":38447,"line_start":623,"line_end":623,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":674},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/prelude.rs","parent":null,"children":[{"krate":0,"index":675}],"decl_id":null,"docs":" Prelude\n","sig":null,"attributes":[{"value":"/ Prelude","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/prelude.rs","byte_start":108925,"byte_end":108936,"line_start":1,"line_end":1,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":676},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"register","qualname":"::register","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":703},{"krate":0,"index":708},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":755}],"decl_id":null,"docs":" Processor core registers","sig":null,"attributes":[{"value":"/ Processor core registers","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":108973,"byte_end":109001,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109002,"byte_end":109005,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The following registers can only be accessed in PRIVILEGED mode:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109006,"byte_end":109074,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109075,"byte_end":109078,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - BASEPRI","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109079,"byte_end":109092,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/ - CONTROL","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109093,"byte_end":109106,"line_start":6,"line_end":6,"column_start":1,"column_end":14}},{"value":"/ - FAULTMASK","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109107,"byte_end":109122,"line_start":7,"line_end":7,"column_start":1,"column_end":16}},{"value":"/ - MSP","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109123,"byte_end":109132,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/ - PRIMASK","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109133,"byte_end":109146,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109147,"byte_end":109150,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The rest of registers (see list below) can be accessed in either, PRIVILEGED","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109151,"byte_end":109231,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ or UNPRIVILEGED, mode.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109232,"byte_end":109258,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109259,"byte_end":109262,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ - APSR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109263,"byte_end":109273,"line_start":14,"line_end":14,"column_start":1,"column_end":11}},{"value":"/ - LR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109274,"byte_end":109282,"line_start":15,"line_end":15,"column_start":1,"column_end":9}},{"value":"/ - PC","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109283,"byte_end":109291,"line_start":16,"line_end":16,"column_start":1,"column_end":9}},{"value":"/ - PSP","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109292,"byte_end":109301,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109302,"byte_end":109305,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The following registers are NOT available on ARMv6-M devices","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109306,"byte_end":109370,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ (`thumbv6m-none-eabi`):","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109371,"byte_end":109398,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109399,"byte_end":109402,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - BASEPRI","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109403,"byte_end":109416,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ - FAULTMASK","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109417,"byte_end":109432,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109433,"byte_end":109436,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The following registers are only available for devices with an FPU:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109437,"byte_end":109508,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109509,"byte_end":109512,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - FPSCR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109513,"byte_end":109524,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109525,"byte_end":109528,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # References","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109529,"byte_end":109545,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109546,"byte_end":109549,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ - Cortex-M* Devices Generic User Guide - Section 2.1.3 Core registers","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109550,"byte_end":109623,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":677},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"basepri","qualname":"::register::basepri","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"decl_id":null,"docs":" Base Priority Mask Register\n","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109625,"byte_end":109667,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/ Base Priority Mask Register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110234,"byte_end":110265,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":678},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110311,"byte_end":110315,"line_start":5,"line_end":5,"column_start":8,"column_end":12},"name":"read","qualname":"::register::basepri::read","value":"pub fn read() -> u8","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110267,"byte_end":110293,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110294,"byte_end":110303,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":679},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110578,"byte_end":110583,"line_start":14,"line_end":14,"column_start":15,"column_end":20},"name":"write","qualname":"::register::basepri::write","value":"pub unsafe fn write(u8)","parent":null,"children":[],"decl_id":null,"docs":" Writes to the CPU register","sig":null,"attributes":[{"value":"/ Writes to the CPU register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110364,"byte_end":110394,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110395,"byte_end":110398,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ **IMPORTANT** If you are using a Cortex-M7 device with revision r0p1 you MUST enable the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110399,"byte_end":110491,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ `cm7-r0p1` Cargo feature or this function WILL misbehave.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110492,"byte_end":110553,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri.rs","byte_start":110554,"byte_end":110563,"line_start":13,"line_end":13,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":680},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"basepri_max","qualname":"::register::basepri_max","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","parent":null,"children":[{"krate":0,"index":681}],"decl_id":null,"docs":" Base Priority Mask Register (conditional write)\n","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109686,"byte_end":109728,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/ Base Priority Mask Register (conditional write)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":110797,"byte_end":110848,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":681},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":111162,"byte_end":111167,"line_start":11,"line_end":11,"column_start":8,"column_end":13},"name":"write","qualname":"::register::basepri_max::write","value":"pub fn write(u8)","parent":null,"children":[],"decl_id":null,"docs":" Writes to BASEPRI *if*","sig":null,"attributes":[{"value":"/ Writes to BASEPRI *if*","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":110850,"byte_end":110876,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":110877,"byte_end":110880,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - `basepri != 0` AND `basepri::read() == 0`, OR","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":110881,"byte_end":110932,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/ - `basepri != 0` AND `basepri < basepri::read()`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":110933,"byte_end":110985,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":110986,"byte_end":110989,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ **IMPORTANT** If you are using a Cortex-M7 device with revision r0p1 you MUST enable the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":110990,"byte_end":111082,"line_start":8,"line_end":8,"column_start":1,"column_end":93}},{"value":"/ `cm7-r0p1` Cargo feature or this function WILL misbehave.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":111083,"byte_end":111144,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/basepri_max.rs","byte_start":111145,"byte_end":111154,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":682},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"control","qualname":"::register::control","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":933},{"krate":0,"index":932},{"krate":0,"index":930},{"krate":0,"index":683},{"krate":0,"index":935},{"krate":0,"index":949},{"krate":0,"index":948},{"krate":0,"index":946},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":692},{"krate":0,"index":951},{"krate":0,"index":965},{"krate":0,"index":964},{"krate":0,"index":962},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":695},{"krate":0,"index":967},{"krate":0,"index":981},{"krate":0,"index":980},{"krate":0,"index":978},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":702}],"decl_id":null,"docs":" Control register\n","sig":null,"attributes":[{"value":"/ Control register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111385,"byte_end":111405,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":928},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111469,"byte_end":111476,"line_start":5,"line_end":5,"column_start":12,"column_end":19},"name":"Control","qualname":"::register::control::Control","value":"Control {  }","parent":null,"children":[{"krate":0,"index":929}],"decl_id":null,"docs":" Control register\n","sig":null,"attributes":[{"value":"/ Control register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111407,"byte_end":111427,"line_start":3,"line_end":3,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111586,"byte_end":111595,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"from_bits","qualname":"<Control>::from_bits","value":"pub fn from_bits(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Control` value from raw bits.\n","sig":null,"attributes":[{"value":"/ Creates a `Control` value from raw bits.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111516,"byte_end":111560,"line_start":10,"line_end":10,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111565,"byte_end":111574,"line_start":11,"line_end":11,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111728,"byte_end":111732,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"bits","qualname":"<Control>::bits","value":"pub fn bits(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of the register as raw bits\n","sig":null,"attributes":[{"value":"/ Returns the contents of the register as raw bits","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111650,"byte_end":111702,"line_start":16,"line_end":16,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111707,"byte_end":111716,"line_start":17,"line_end":17,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111834,"byte_end":111839,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"npriv","qualname":"<Control>::npriv","value":"pub fn npriv(Self) -> Npriv","parent":null,"children":[],"decl_id":null,"docs":" Thread mode privilege level\n","sig":null,"attributes":[{"value":"/ Thread mode privilege level","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111777,"byte_end":111808,"line_start":22,"line_end":22,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111813,"byte_end":111822,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112084,"byte_end":112093,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"set_npriv","qualname":"<Control>::set_npriv","value":"pub fn set_npriv(&mut Self, Npriv)","parent":null,"children":[],"decl_id":null,"docs":" Sets the thread mode privilege level value (nPRIV).\n","sig":null,"attributes":[{"value":"/ Sets the thread mode privilege level value (nPRIV).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112003,"byte_end":112058,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112063,"byte_end":112072,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112358,"byte_end":112363,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"spsel","qualname":"<Control>::spsel","value":"pub fn spsel(Self) -> Spsel","parent":null,"children":[],"decl_id":null,"docs":" Currently active stack pointer\n","sig":null,"attributes":[{"value":"/ Currently active stack pointer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112298,"byte_end":112332,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112337,"byte_end":112346,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112562,"byte_end":112571,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"set_spsel","qualname":"<Control>::set_spsel","value":"pub fn set_spsel(&mut Self, Spsel)","parent":null,"children":[],"decl_id":null,"docs":" Sets the SPSEL value.\n","sig":null,"attributes":[{"value":"/ Sets the SPSEL value.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112511,"byte_end":112536,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112541,"byte_end":112550,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112840,"byte_end":112844,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"fpca","qualname":"<Control>::fpca","value":"pub fn fpca(Self) -> Fpca","parent":null,"children":[],"decl_id":null,"docs":" Whether context floating-point is currently active\n","sig":null,"attributes":[{"value":"/ Whether context floating-point is currently active","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112760,"byte_end":112814,"line_start":62,"line_end":62,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112819,"byte_end":112828,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113048,"byte_end":113056,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"set_fpca","qualname":"<Control>::set_fpca","value":"pub fn set_fpca(&mut Self, Fpca)","parent":null,"children":[],"decl_id":null,"docs":" Sets the FPCA value.\n","sig":null,"attributes":[{"value":"/ Sets the FPCA value.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":112998,"byte_end":113022,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113027,"byte_end":113036,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":936},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113364,"byte_end":113374,"line_start":87,"line_end":87,"column_start":5,"column_end":15},"name":"Privileged","qualname":"::register::control::Npriv::Privileged","value":"Npriv::Privileged","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Privileged\n","sig":null,"attributes":[{"value":"/ Privileged","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113345,"byte_end":113359,"line_start":86,"line_end":86,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":938},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113401,"byte_end":113413,"line_start":89,"line_end":89,"column_start":5,"column_end":17},"name":"Unprivileged","qualname":"::register::control::Npriv::Unprivileged","value":"Npriv::Unprivileged","parent":{"krate":0,"index":935},"children":[],"decl_id":null,"docs":" Unprivileged\n","sig":null,"attributes":[{"value":"/ Unprivileged","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113380,"byte_end":113396,"line_start":88,"line_end":88,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":935},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113333,"byte_end":113338,"line_start":85,"line_end":85,"column_start":10,"column_end":15},"name":"Npriv","qualname":"::register::control::Npriv","value":"pub enum Npriv {\n\n    /// Privileged\n    Privileged,\n\n    /// Unprivileged\n    Unprivileged,\n}","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":938}],"decl_id":null,"docs":" Thread mode privilege level\n","sig":null,"attributes":[{"value":"/ Thread mode privilege level","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113247,"byte_end":113278,"line_start":83,"line_end":83,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113494,"byte_end":113507,"line_start":95,"line_end":95,"column_start":12,"column_end":25},"name":"is_privileged","qualname":"<Npriv>::is_privileged","value":"pub fn is_privileged(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is in privileged thread mode?\n","sig":null,"attributes":[{"value":"/ Is in privileged thread mode?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113435,"byte_end":113468,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113473,"byte_end":113482,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113630,"byte_end":113645,"line_start":101,"line_end":101,"column_start":12,"column_end":27},"name":"is_unprivileged","qualname":"<Npriv>::is_unprivileged","value":"pub fn is_unprivileged(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is in unprivileged thread mode?\n","sig":null,"attributes":[{"value":"/ Is in unprivileged thread mode?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113569,"byte_end":113604,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113609,"byte_end":113618,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":952},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113849,"byte_end":113852,"line_start":110,"line_end":110,"column_start":5,"column_end":8},"name":"Msp","qualname":"::register::control::Spsel::Msp","value":"Spsel::Msp","parent":{"krate":0,"index":951},"children":[],"decl_id":null,"docs":" MSP is the current stack pointer\n","sig":null,"attributes":[{"value":"/ MSP is the current stack pointer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113808,"byte_end":113844,"line_start":109,"line_end":109,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":954},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113899,"byte_end":113902,"line_start":112,"line_end":112,"column_start":5,"column_end":8},"name":"Psp","qualname":"::register::control::Spsel::Psp","value":"Spsel::Psp","parent":{"krate":0,"index":951},"children":[],"decl_id":null,"docs":" PSP is the current stack pointer\n","sig":null,"attributes":[{"value":"/ PSP is the current stack pointer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113858,"byte_end":113894,"line_start":111,"line_end":111,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":951},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113796,"byte_end":113801,"line_start":108,"line_end":108,"column_start":10,"column_end":15},"name":"Spsel","qualname":"::register::control::Spsel","value":"pub enum Spsel {\n\n    /// MSP is the current stack pointer\n    Msp,\n\n    /// PSP is the current stack pointer\n    Psp,\n}","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":954}],"decl_id":null,"docs":" Currently active stack pointer\n","sig":null,"attributes":[{"value":"/ Currently active stack pointer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113707,"byte_end":113741,"line_start":106,"line_end":106,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113987,"byte_end":113993,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"is_msp","qualname":"<Spsel>::is_msp","value":"pub fn is_msp(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is MSP the current stack pointer?\n","sig":null,"attributes":[{"value":"/ Is MSP the current stack pointer?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113924,"byte_end":113961,"line_start":116,"line_end":116,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113966,"byte_end":113975,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114111,"byte_end":114117,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"is_psp","qualname":"<Spsel>::is_psp","value":"pub fn is_psp(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is PSP the current stack pointer?\n","sig":null,"attributes":[{"value":"/ Is PSP the current stack pointer?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114048,"byte_end":114085,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114090,"byte_end":114099,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":968},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114329,"byte_end":114335,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Active","qualname":"::register::control::Fpca::Active","value":"Fpca::Active","parent":{"krate":0,"index":967},"children":[],"decl_id":null,"docs":" Floating-point context active.\n","sig":null,"attributes":[{"value":"/ Floating-point context active.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114290,"byte_end":114324,"line_start":132,"line_end":132,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":970},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114382,"byte_end":114391,"line_start":135,"line_end":135,"column_start":5,"column_end":14},"name":"NotActive","qualname":"::register::control::Fpca::NotActive","value":"Fpca::NotActive","parent":{"krate":0,"index":967},"children":[],"decl_id":null,"docs":" No floating-point context active\n","sig":null,"attributes":[{"value":"/ No floating-point context active","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114341,"byte_end":114377,"line_start":134,"line_end":134,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":967},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114279,"byte_end":114283,"line_start":131,"line_end":131,"column_start":10,"column_end":14},"name":"Fpca","qualname":"::register::control::Fpca","value":"pub enum Fpca {\n\n    /// Floating-point context active.\n    Active,\n\n    /// No floating-point context active\n    NotActive,\n}","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":970}],"decl_id":null,"docs":" Whether context floating-point is currently active\n","sig":null,"attributes":[{"value":"/ Whether context floating-point is currently active","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114170,"byte_end":114224,"line_start":129,"line_end":129,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114477,"byte_end":114486,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"is_active","qualname":"<Fpca>::is_active","value":"pub fn is_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is a floating-point context active?\n","sig":null,"attributes":[{"value":"/ Is a floating-point context active?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114412,"byte_end":114451,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114456,"byte_end":114465,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114612,"byte_end":114625,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"is_not_active","qualname":"<Fpca>::is_not_active","value":"pub fn is_not_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is a floating-point context not active?\n","sig":null,"attributes":[{"value":"/ Is a floating-point context not active?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114543,"byte_end":114586,"line_start":145,"line_end":145,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114591,"byte_end":114600,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":701},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114727,"byte_end":114731,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"read","qualname":"::register::control::read","value":"pub fn read() -> Control","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114683,"byte_end":114709,"line_start":152,"line_end":152,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114710,"byte_end":114719,"line_start":153,"line_end":153,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":702},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114880,"byte_end":114885,"line_start":161,"line_end":161,"column_start":15,"column_end":20},"name":"write","qualname":"::register::control::write","value":"pub unsafe fn write(Control)","parent":null,"children":[],"decl_id":null,"docs":" Writes to the CPU register.\n","sig":null,"attributes":[{"value":"/ Writes to the CPU register.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114824,"byte_end":114855,"line_start":159,"line_end":159,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114856,"byte_end":114865,"line_start":160,"line_end":160,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":703},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"faultmask","qualname":"::register::faultmask","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":1001},{"krate":0,"index":1000},{"krate":0,"index":998},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":704},{"krate":0,"index":707}],"decl_id":null,"docs":" Fault Mask Register\n","sig":null,"attributes":[{"value":"cfg(all(not(armv6m), not(armv8m_base)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109769,"byte_end":109811,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/ Fault Mask Register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":114985,"byte_end":115008,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":988},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115122,"byte_end":115128,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Active","qualname":"::register::faultmask::Faultmask::Active","value":"Faultmask::Active","parent":{"krate":0,"index":987},"children":[],"decl_id":null,"docs":" Active\n","sig":null,"attributes":[{"value":"/ Active","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115107,"byte_end":115117,"line_start":6,"line_end":6,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":990},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115167,"byte_end":115175,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Inactive","qualname":"::register::faultmask::Faultmask::Inactive","value":"Faultmask::Inactive","parent":{"krate":0,"index":987},"children":[],"decl_id":null,"docs":" Inactive, expect for NMI\n","sig":null,"attributes":[{"value":"/ Inactive, expect for NMI","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115134,"byte_end":115162,"line_start":8,"line_end":8,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":987},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115091,"byte_end":115100,"line_start":5,"line_end":5,"column_start":10,"column_end":19},"name":"Faultmask","qualname":"::register::faultmask::Faultmask","value":"pub enum Faultmask {\n\n    /// Active\n    Active,\n\n    /// Inactive, expect for NMI\n    Inactive,\n}","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":990}],"decl_id":null,"docs":" All exceptions are ...\n","sig":null,"attributes":[{"value":"/ All exceptions are ...","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115010,"byte_end":115036,"line_start":3,"line_end":3,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115256,"byte_end":115265,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"is_active","qualname":"<Faultmask>::is_active","value":"pub fn is_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions are active\n","sig":null,"attributes":[{"value":"/ All exceptions are active","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115201,"byte_end":115230,"line_start":13,"line_end":13,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115235,"byte_end":115244,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115401,"byte_end":115412,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"is_inactive","qualname":"<Faultmask>::is_inactive","value":"pub fn is_inactive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions, except for NMI, are inactive\n","sig":null,"attributes":[{"value":"/ All exceptions, except for NMI, are inactive","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115327,"byte_end":115375,"line_start":19,"line_end":19,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115380,"byte_end":115389,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":707},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115518,"byte_end":115522,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"read","qualname":"::register::faultmask::read","value":"pub fn read() -> Faultmask","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115474,"byte_end":115500,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115501,"byte_end":115510,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":708},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fpscr","qualname":"::register::fpscr","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1010},{"krate":0,"index":1009},{"krate":0,"index":1007},{"krate":0,"index":709},{"krate":0,"index":1012},{"krate":0,"index":1030},{"krate":0,"index":1029},{"krate":0,"index":1027},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":740},{"krate":0,"index":745},{"krate":0,"index":746}],"decl_id":null,"docs":" Floating-point Status Control Register\n","sig":null,"attributes":[{"value":"cfg(has_fpu)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109832,"byte_end":109847,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/ Floating-point Status Control Register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":115702,"byte_end":115744,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":115830,"byte_end":115835,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Fpscr","qualname":"::register::fpscr::Fpscr","value":"Fpscr {  }","parent":null,"children":[{"krate":0,"index":1006}],"decl_id":null,"docs":" Floating-point Status Control Register\n","sig":null,"attributes":[{"value":"/ Floating-point Status Control Register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":115746,"byte_end":115788,"line_start":3,"line_end":3,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":115941,"byte_end":115950,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"from_bits","qualname":"<Fpscr>::from_bits","value":"pub fn from_bits(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Fspcr` value from raw bits.\n","sig":null,"attributes":[{"value":"/ Creates a `Fspcr` value from raw bits.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":115873,"byte_end":115915,"line_start":10,"line_end":10,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":115920,"byte_end":115929,"line_start":11,"line_end":11,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116083,"byte_end":116087,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"bits","qualname":"<Fpscr>::bits","value":"pub fn bits(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of the register as raw bits\n","sig":null,"attributes":[{"value":"/ Returns the contents of the register as raw bits","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116005,"byte_end":116057,"line_start":16,"line_end":16,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116062,"byte_end":116071,"line_start":17,"line_end":17,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116199,"byte_end":116200,"line_start":24,"line_end":24,"column_start":12,"column_end":13},"name":"n","qualname":"<Fpscr>::n","value":"pub fn n(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Negative condition code flag\n","sig":null,"attributes":[{"value":"/ Read the Negative condition code flag","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116132,"byte_end":116173,"line_start":22,"line_end":22,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116178,"byte_end":116187,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116330,"byte_end":116335,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"set_n","qualname":"<Fpscr>::set_n","value":"pub fn set_n(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Negative condition code flag\n","sig":null,"attributes":[{"value":"/ Sets the Negative condition code flag","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116263,"byte_end":116304,"line_start":28,"line_end":28,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116309,"byte_end":116318,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116568,"byte_end":116569,"line_start":40,"line_end":40,"column_start":12,"column_end":13},"name":"z","qualname":"<Fpscr>::z","value":"pub fn z(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Zero condition code flag\n","sig":null,"attributes":[{"value":"/ Read the Zero condition code flag","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116505,"byte_end":116542,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116547,"byte_end":116556,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116695,"byte_end":116700,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"set_z","qualname":"<Fpscr>::set_z","value":"pub fn set_z(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Zero condition code flag\n","sig":null,"attributes":[{"value":"/ Sets the Zero condition code flag","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116632,"byte_end":116669,"line_start":44,"line_end":44,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116674,"byte_end":116683,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116934,"byte_end":116935,"line_start":56,"line_end":56,"column_start":12,"column_end":13},"name":"c","qualname":"<Fpscr>::c","value":"pub fn c(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Carry condition code flag\n","sig":null,"attributes":[{"value":"/ Read the Carry condition code flag","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116870,"byte_end":116908,"line_start":54,"line_end":54,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116913,"byte_end":116922,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117062,"byte_end":117067,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"set_c","qualname":"<Fpscr>::set_c","value":"pub fn set_c(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Carry condition code flag\n","sig":null,"attributes":[{"value":"/ Sets the Carry condition code flag","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":116998,"byte_end":117036,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117041,"byte_end":117050,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117304,"byte_end":117305,"line_start":72,"line_end":72,"column_start":12,"column_end":13},"name":"v","qualname":"<Fpscr>::v","value":"pub fn v(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Overflow condition code flag\n","sig":null,"attributes":[{"value":"/ Read the Overflow condition code flag","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117237,"byte_end":117278,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117283,"byte_end":117292,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117431,"byte_end":117436,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"set_v","qualname":"<Fpscr>::set_v","value":"pub fn set_v(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Zero condition code flag\n","sig":null,"attributes":[{"value":"/ Sets the Zero condition code flag","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117368,"byte_end":117405,"line_start":76,"line_end":76,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117410,"byte_end":117419,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117675,"byte_end":117678,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"ahp","qualname":"<Fpscr>::ahp","value":"pub fn ahp(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Alternative Half Precision bit\n","sig":null,"attributes":[{"value":"/ Read the Alternative Half Precision bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117606,"byte_end":117649,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117654,"byte_end":117663,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117810,"byte_end":117817,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"set_ahp","qualname":"<Fpscr>::set_ahp","value":"pub fn set_ahp(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Alternative Half Precision bit\n","sig":null,"attributes":[{"value":"/ Sets the Alternative Half Precision bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117741,"byte_end":117784,"line_start":92,"line_end":92,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117789,"byte_end":117798,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118050,"byte_end":118052,"line_start":104,"line_end":104,"column_start":12,"column_end":14},"name":"dn","qualname":"<Fpscr>::dn","value":"pub fn dn(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Default NaN mode bit\n","sig":null,"attributes":[{"value":"/ Read the Default NaN mode bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":117991,"byte_end":118024,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118029,"byte_end":118038,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118174,"byte_end":118180,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"set_dn","qualname":"<Fpscr>::set_dn","value":"pub fn set_dn(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Default NaN mode bit\n","sig":null,"attributes":[{"value":"/ Sets the Default NaN mode bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118115,"byte_end":118148,"line_start":108,"line_end":108,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118153,"byte_end":118162,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118413,"byte_end":118415,"line_start":120,"line_end":120,"column_start":12,"column_end":14},"name":"fz","qualname":"<Fpscr>::fz","value":"pub fn fz(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Flush to Zero mode bit\n","sig":null,"attributes":[{"value":"/ Read the Flush to Zero mode bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118352,"byte_end":118387,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118392,"byte_end":118401,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118539,"byte_end":118545,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"set_fz","qualname":"<Fpscr>::set_fz","value":"pub fn set_fz(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Flush to Zero mode bit\n","sig":null,"attributes":[{"value":"/ Sets the Flush to Zero mode bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118478,"byte_end":118513,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118518,"byte_end":118527,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118783,"byte_end":118788,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"rmode","qualname":"<Fpscr>::rmode","value":"pub fn rmode(Self) -> RMode","parent":null,"children":[],"decl_id":null,"docs":" Read the Rounding Mode control field\n","sig":null,"attributes":[{"value":"/ Read the Rounding Mode control field","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118717,"byte_end":118757,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":118762,"byte_end":118771,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119079,"byte_end":119088,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"set_rmode","qualname":"<Fpscr>::set_rmode","value":"pub fn set_rmode(&mut Self, RMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Rounding Mode control field\n","sig":null,"attributes":[{"value":"/ Sets the Rounding Mode control field","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119013,"byte_end":119053,"line_start":145,"line_end":145,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119058,"byte_end":119067,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119522,"byte_end":119525,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"idc","qualname":"<Fpscr>::idc","value":"pub fn idc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Input Denormal cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Input Denormal cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119444,"byte_end":119496,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119501,"byte_end":119510,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119665,"byte_end":119672,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"set_idc","qualname":"<Fpscr>::set_idc","value":"pub fn set_idc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Input Denormal cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Input Denormal cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119587,"byte_end":119639,"line_start":163,"line_end":163,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119644,"byte_end":119653,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119916,"byte_end":119919,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"ixc","qualname":"<Fpscr>::ixc","value":"pub fn ixc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Inexact cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Inexact cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119845,"byte_end":119890,"line_start":173,"line_end":173,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119895,"byte_end":119904,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120052,"byte_end":120059,"line_start":181,"line_end":181,"column_start":12,"column_end":19},"name":"set_ixc","qualname":"<Fpscr>::set_ixc","value":"pub fn set_ixc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Inexact cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Inexact cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":119981,"byte_end":120026,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120031,"byte_end":120040,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120305,"byte_end":120308,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"ufc","qualname":"<Fpscr>::ufc","value":"pub fn ufc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Underflow cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Underflow cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120232,"byte_end":120279,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120284,"byte_end":120293,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120443,"byte_end":120450,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"set_ufc","qualname":"<Fpscr>::set_ufc","value":"pub fn set_ufc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Underflow cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Underflow cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120370,"byte_end":120417,"line_start":195,"line_end":195,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120422,"byte_end":120431,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120695,"byte_end":120698,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"ofc","qualname":"<Fpscr>::ofc","value":"pub fn ofc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Overflow cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Overflow cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120623,"byte_end":120669,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120674,"byte_end":120683,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120832,"byte_end":120839,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"set_ofc","qualname":"<Fpscr>::set_ofc","value":"pub fn set_ofc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Overflow cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Overflow cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120760,"byte_end":120806,"line_start":211,"line_end":211,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":120811,"byte_end":120820,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121092,"byte_end":121095,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"dzc","qualname":"<Fpscr>::dzc","value":"pub fn dzc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Division by Zero cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Division by Zero cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121012,"byte_end":121066,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121071,"byte_end":121080,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121237,"byte_end":121244,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"set_dzc","qualname":"<Fpscr>::set_dzc","value":"pub fn set_dzc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Division by Zero cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Division by Zero cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121157,"byte_end":121211,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121216,"byte_end":121225,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121498,"byte_end":121501,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"ioc","qualname":"<Fpscr>::ioc","value":"pub fn ioc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Read the Invalid Operation cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Read the Invalid Operation cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121417,"byte_end":121472,"line_start":237,"line_end":237,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121477,"byte_end":121486,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121644,"byte_end":121651,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"set_ioc","qualname":"<Fpscr>::set_ioc","value":"pub fn set_ioc(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the Invalid Operation cumulative exception bit\n","sig":null,"attributes":[{"value":"/ Sets the Invalid Operation cumulative exception bit","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121563,"byte_end":121618,"line_start":243,"line_end":243,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121623,"byte_end":121632,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121967,"byte_end":121974,"line_start":258,"line_end":258,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::register::fpscr::RMode::Nearest","value":"RMode::Nearest","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Round to Nearest (RN) mode. This is the reset value.\n","sig":null,"attributes":[{"value":"/ Round to Nearest (RN) mode. This is the reset value.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121906,"byte_end":121962,"line_start":257,"line_end":257,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122027,"byte_end":122039,"line_start":260,"line_end":260,"column_start":5,"column_end":17},"name":"PlusInfinity","qualname":"::register::fpscr::RMode::PlusInfinity","value":"RMode::PlusInfinity","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Round towards Plus Infinity (RP) mode.\n","sig":null,"attributes":[{"value":"/ Round towards Plus Infinity (RP) mode.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121980,"byte_end":122022,"line_start":259,"line_end":259,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1017},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122093,"byte_end":122106,"line_start":262,"line_end":262,"column_start":5,"column_end":18},"name":"MinusInfinity","qualname":"::register::fpscr::RMode::MinusInfinity","value":"RMode::MinusInfinity","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Round towards Minus Infinity (RM) mode.\n","sig":null,"attributes":[{"value":"/ Round towards Minus Infinity (RM) mode.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122045,"byte_end":122088,"line_start":261,"line_end":261,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1019},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122150,"byte_end":122154,"line_start":264,"line_end":264,"column_start":5,"column_end":9},"name":"Zero","qualname":"::register::fpscr::RMode::Zero","value":"RMode::Zero","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Round towards Zero (RZ) mode.\n","sig":null,"attributes":[{"value":"/ Round towards Zero (RZ) mode.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122112,"byte_end":122145,"line_start":263,"line_end":263,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1012},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121894,"byte_end":121899,"line_start":256,"line_end":256,"column_start":10,"column_end":15},"name":"RMode","qualname":"::register::fpscr::RMode","value":"pub enum RMode {\n\n    /// Round to Nearest (RN) mode. This is the reset value.\n    Nearest,\n\n    /// Round towards Plus Infinity (RP) mode.\n    PlusInfinity,\n\n    /// Round towards Minus Infinity (RM) mode.\n    MinusInfinity,\n\n    /// Round towards Zero (RZ) mode.\n    Zero,\n}","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019}],"decl_id":null,"docs":" Rounding mode\n","sig":null,"attributes":[{"value":"/ Rounding mode","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":121822,"byte_end":121839,"line_start":254,"line_end":254,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122243,"byte_end":122253,"line_start":270,"line_end":270,"column_start":12,"column_end":22},"name":"is_nearest","qualname":"<RMode>::is_nearest","value":"pub fn is_nearest(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is Nearest the current rounding mode?\n","sig":null,"attributes":[{"value":"/ Is Nearest the current rounding mode?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122176,"byte_end":122217,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122222,"byte_end":122231,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122385,"byte_end":122401,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"is_plus_infinity","qualname":"<RMode>::is_plus_infinity","value":"pub fn is_plus_infinity(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is Plus Infinity the current rounding mode?\n","sig":null,"attributes":[{"value":"/ Is Plus Infinity the current rounding mode?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122312,"byte_end":122359,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122364,"byte_end":122373,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122539,"byte_end":122556,"line_start":282,"line_end":282,"column_start":12,"column_end":29},"name":"is_minus_infinity","qualname":"<RMode>::is_minus_infinity","value":"pub fn is_minus_infinity(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is Minus Infinity the current rounding mode?\n","sig":null,"attributes":[{"value":"/ Is Minus Infinity the current rounding mode?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122465,"byte_end":122513,"line_start":280,"line_end":280,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122518,"byte_end":122527,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122685,"byte_end":122692,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<RMode>::is_zero","value":"pub fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is Zero the current rounding mode?\n","sig":null,"attributes":[{"value":"/ Is Zero the current rounding mode?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122621,"byte_end":122659,"line_start":286,"line_end":286,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122664,"byte_end":122673,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":745},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122791,"byte_end":122795,"line_start":295,"line_end":295,"column_start":8,"column_end":12},"name":"read","qualname":"::register::fpscr::read","value":"pub fn read() -> Fpscr","parent":null,"children":[],"decl_id":null,"docs":" Read the FPSCR register\n","sig":null,"attributes":[{"value":"/ Read the FPSCR register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122746,"byte_end":122773,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122774,"byte_end":122783,"line_start":294,"line_end":294,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":746},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122948,"byte_end":122953,"line_start":302,"line_end":302,"column_start":15,"column_end":20},"name":"write","qualname":"::register::fpscr::write","value":"pub unsafe fn write(Fpscr)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of the FPSCR register\n","sig":null,"attributes":[{"value":"/ Set the value of the FPSCR register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122884,"byte_end":122923,"line_start":300,"line_end":300,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122924,"byte_end":122933,"line_start":301,"line_end":301,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":747},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"msp","qualname":"::register::msp","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749}],"decl_id":null,"docs":" Main Stack Pointer\n","sig":null,"attributes":[{"value":"/ Main Stack Pointer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","byte_start":123041,"byte_end":123063,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":748},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","byte_start":123109,"byte_end":123113,"line_start":5,"line_end":5,"column_start":8,"column_end":12},"name":"read","qualname":"::register::msp::read","value":"pub fn read() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","byte_start":123065,"byte_end":123091,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","byte_start":123092,"byte_end":123101,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":749},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","byte_start":123332,"byte_end":123337,"line_start":12,"line_end":12,"column_start":15,"column_end":20},"name":"write","qualname":"::register::msp::write","value":"pub unsafe fn write(u32)","parent":null,"children":[],"decl_id":null,"docs":" Writes `bits` to the CPU register\n","sig":null,"attributes":[{"value":"/ Writes `bits` to the CPU register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","byte_start":123160,"byte_end":123197,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","byte_start":123198,"byte_end":123207,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"deprecated =\n  \"calling this function invokes Undefined Behavior, consider asm::bootstrap as an alternative\"","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/msp.rs","byte_start":123208,"byte_end":123317,"line_start":11,"line_end":11,"column_start":1,"column_end":110}}]},{"kind":"Mod","id":{"krate":0,"index":750},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"primask","qualname":"::register::primask","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1054},{"krate":0,"index":1053},{"krate":0,"index":1051},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":751},{"krate":0,"index":754}],"decl_id":null,"docs":" Priority mask register\n","sig":null,"attributes":[{"value":"/ Priority mask register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":123846,"byte_end":123872,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1041},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124011,"byte_end":124017,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Active","qualname":"::register::primask::Primask::Active","value":"Primask::Active","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Active\n","sig":null,"attributes":[{"value":"/ Active","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":123996,"byte_end":124006,"line_start":6,"line_end":6,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1043},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124040,"byte_end":124048,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Inactive","qualname":"::register::primask::Primask::Inactive","value":"Primask::Inactive","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Inactive\n","sig":null,"attributes":[{"value":"/ Inactive","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124023,"byte_end":124035,"line_start":8,"line_end":8,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":1040},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":123982,"byte_end":123989,"line_start":5,"line_end":5,"column_start":10,"column_end":17},"name":"Primask","qualname":"::register::primask::Primask","value":"pub enum Primask {\n\n    /// Active\n    Active,\n\n    /// Inactive\n    Inactive,\n}","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1043}],"decl_id":null,"docs":" All exceptions with configurable priority are ...\n","sig":null,"attributes":[{"value":"/ All exceptions with configurable priority are ...","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":123874,"byte_end":123927,"line_start":3,"line_end":3,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124154,"byte_end":124163,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"is_active","qualname":"<Primask>::is_active","value":"pub fn is_active(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions with configurable priority are active\n","sig":null,"attributes":[{"value":"/ All exceptions with configurable priority are active","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124072,"byte_end":124128,"line_start":13,"line_end":13,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124133,"byte_end":124142,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124307,"byte_end":124318,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"is_inactive","qualname":"<Primask>::is_inactive","value":"pub fn is_inactive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" All exceptions with configurable priority are inactive\n","sig":null,"attributes":[{"value":"/ All exceptions with configurable priority are inactive","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124223,"byte_end":124281,"line_start":19,"line_end":19,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124286,"byte_end":124295,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":754},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124422,"byte_end":124426,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"read","qualname":"::register::primask::read","value":"pub fn read() -> Primask","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124378,"byte_end":124404,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124405,"byte_end":124414,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":755},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/psp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"psp","qualname":"::register::psp","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/psp.rs","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"decl_id":null,"docs":" Process Stack Pointer\n","sig":null,"attributes":[{"value":"/ Process Stack Pointer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/psp.rs","byte_start":124598,"byte_end":124623,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":756},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/psp.rs","byte_start":124669,"byte_end":124673,"line_start":5,"line_end":5,"column_start":8,"column_end":12},"name":"read","qualname":"::register::psp::read","value":"pub fn read() -> u32","parent":null,"children":[],"decl_id":null,"docs":" Reads the CPU register\n","sig":null,"attributes":[{"value":"/ Reads the CPU register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/psp.rs","byte_start":124625,"byte_end":124651,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/psp.rs","byte_start":124652,"byte_end":124661,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":757},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/psp.rs","byte_start":124782,"byte_end":124787,"line_start":11,"line_end":11,"column_start":15,"column_end":20},"name":"write","qualname":"::register::psp::write","value":"pub unsafe fn write(u32)","parent":null,"children":[],"decl_id":null,"docs":" Writes `bits` to the CPU register\n","sig":null,"attributes":[{"value":"/ Writes `bits` to the CPU register","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/psp.rs","byte_start":124720,"byte_end":124757,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"inline","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/psp.rs","byte_start":124758,"byte_end":124767,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14232,"byte_end":14237,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":15958,"byte_end":15963,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16172,"byte_end":16177,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16339,"byte_end":16344,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16483,"byte_end":16488,"line_start":95,"line_end":95,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16627,"byte_end":16632,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16841,"byte_end":16846,"line_start":110,"line_end":110,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":17008,"byte_end":17013,"line_start":118,"line_end":118,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":17151,"byte_end":17156,"line_start":125,"line_end":125,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18368,"byte_end":18369,"line_start":28,"line_end":28,"column_start":47,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":20628,"byte_end":20632,"line_start":60,"line_end":60,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39789,"byte_end":39792,"line_start":40,"line_end":40,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44858,"byte_end":44863,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47813,"byte_end":47816,"line_start":23,"line_end":23,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50693,"byte_end":50696,"line_start":65,"line_end":65,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54018,"byte_end":54022,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58829,"byte_end":58833,"line_start":77,"line_end":77,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67270,"byte_end":67273,"line_start":121,"line_end":121,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":69001,"byte_end":69004,"line_start":167,"line_end":167,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71061,"byte_end":71070,"line_start":234,"line_end":234,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72290,"byte_end":72300,"line_start":276,"line_end":276,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":73622,"byte_end":73625,"line_start":313,"line_end":313,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92486,"byte_end":92489,"line_start":796,"line_end":796,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92940,"byte_end":92943,"line_start":816,"line_end":816,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93498,"byte_end":93501,"line_start":838,"line_end":838,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94281,"byte_end":94284,"line_start":866,"line_end":866,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96628,"byte_end":96631,"line_start":948,"line_end":948,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103344,"byte_end":103348,"line_start":39,"line_end":39,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27853,"byte_end":27864,"line_start":156,"line_end":156,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29549,"byte_end":29552,"line_start":227,"line_end":227,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29582,"byte_end":29585,"line_start":230,"line_end":230,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30062,"byte_end":30065,"line_start":249,"line_end":249,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30304,"byte_end":30309,"line_start":263,"line_end":263,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30319,"byte_end":30324,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30651,"byte_end":30656,"line_start":276,"line_end":276,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30909,"byte_end":30912,"line_start":290,"line_end":290,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30922,"byte_end":30925,"line_start":292,"line_end":292,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31236,"byte_end":31239,"line_start":303,"line_end":303,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31500,"byte_end":31503,"line_start":317,"line_end":317,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31513,"byte_end":31516,"line_start":319,"line_end":319,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31827,"byte_end":31830,"line_start":330,"line_end":330,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32093,"byte_end":32096,"line_start":344,"line_end":344,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32126,"byte_end":32129,"line_start":347,"line_end":347,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32460,"byte_end":32463,"line_start":359,"line_end":359,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32714,"byte_end":32717,"line_start":373,"line_end":373,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32772,"byte_end":32775,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33131,"byte_end":33134,"line_start":388,"line_end":388,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33633,"byte_end":33636,"line_start":407,"line_end":407,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33646,"byte_end":33649,"line_start":409,"line_end":409,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33954,"byte_end":33957,"line_start":420,"line_end":420,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34129,"byte_end":34132,"line_start":429,"line_end":429,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34366,"byte_end":34369,"line_start":441,"line_end":441,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34422,"byte_end":34425,"line_start":444,"line_end":444,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34773,"byte_end":34776,"line_start":456,"line_end":456,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34991,"byte_end":34994,"line_start":466,"line_end":466,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35219,"byte_end":35222,"line_start":478,"line_end":478,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35232,"byte_end":35235,"line_start":480,"line_end":480,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35546,"byte_end":35549,"line_start":491,"line_end":491,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35816,"byte_end":35820,"line_start":505,"line_end":505,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35830,"byte_end":35834,"line_start":507,"line_end":507,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36147,"byte_end":36151,"line_start":518,"line_end":518,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36409,"byte_end":36412,"line_start":532,"line_end":532,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37021,"byte_end":37024,"line_start":561,"line_end":561,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37034,"byte_end":37037,"line_start":563,"line_end":563,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37348,"byte_end":37351,"line_start":574,"line_end":574,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37605,"byte_end":37609,"line_start":588,"line_end":588,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37619,"byte_end":37623,"line_start":590,"line_end":590,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37936,"byte_end":37940,"line_start":601,"line_end":601,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38199,"byte_end":38203,"line_start":615,"line_end":615,"column_start":22,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38233,"byte_end":38237,"line_start":618,"line_end":618,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38570,"byte_end":38574,"line_start":630,"line_end":630,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111502,"byte_end":111509,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113423,"byte_end":113428,"line_start":92,"line_end":92,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113912,"byte_end":113917,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114401,"byte_end":114405,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115185,"byte_end":115194,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":115861,"byte_end":115866,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122164,"byte_end":122169,"line_start":267,"line_end":267,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124058,"byte_end":124065,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3551,"byte_end":3554,"line_start":88,"line_end":88,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3593,"byte_end":3598,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":28}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3608,"byte_end":3617,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3670,"byte_end":3673,"line_start":94,"line_end":94,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":74}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3683,"byte_end":3693,"line_start":95,"line_end":95,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25696,"byte_end":25699,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":102}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25709,"byte_end":25714,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":132}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25724,"byte_end":25727,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":170}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25737,"byte_end":25740,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25770,"byte_end":25773,"line_start":69,"line_end":69,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":219}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25879,"byte_end":25882,"line_start":72,"line_end":72,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":233}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25892,"byte_end":25895,"line_start":73,"line_end":73,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":244}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25948,"byte_end":25951,"line_start":75,"line_end":75,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":250}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25961,"byte_end":25964,"line_start":76,"line_end":76,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":281}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":25974,"byte_end":25978,"line_start":77,"line_end":77,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":297}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26016,"byte_end":26019,"line_start":80,"line_end":80,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":351}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26029,"byte_end":26033,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":463}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":26063,"byte_end":26067,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":503}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3703,"byte_end":3710,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":674}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/lib.rs","byte_start":3720,"byte_end":3728,"line_start":97,"line_end":97,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":676}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109676,"byte_end":109683,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":677}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109737,"byte_end":109748,"line_start":37,"line_end":37,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":680}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109759,"byte_end":109766,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":682}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109820,"byte_end":109829,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":703}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109856,"byte_end":109861,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":708}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109872,"byte_end":109875,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":747}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109886,"byte_end":109893,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":750}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/mod.rs","byte_start":109904,"byte_end":109907,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":755}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":14232,"byte_end":14237,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":15958,"byte_end":15963,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":35},"to":{"krate":7,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16172,"byte_end":16177,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":35},"to":{"krate":7,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16339,"byte_end":16344,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":35},"to":{"krate":7,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16483,"byte_end":16488,"line_start":95,"line_end":95,"column_start":22,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":35},"to":{"krate":7,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16627,"byte_end":16632,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":35},"to":{"krate":7,"index":23}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":16841,"byte_end":16846,"line_start":110,"line_end":110,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":35},"to":{"krate":7,"index":23}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":17008,"byte_end":17013,"line_start":118,"line_end":118,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":35},"to":{"krate":7,"index":23}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/delay.rs","byte_start":17151,"byte_end":17156,"line_start":125,"line_end":125,"column_start":22,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":35},"to":{"krate":7,"index":23}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":17992,"byte_end":17996,"line_start":19,"line_end":19,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":2091},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/interrupt.rs","byte_start":18368,"byte_end":18369,"line_start":28,"line_end":28,"column_start":47,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/itm.rs","byte_start":20628,"byte_end":20632,"line_start":60,"line_end":60,"column_start":25,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":82},"to":{"krate":1,"index":6918}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cbp.rs","byte_start":39789,"byte_end":39792,"line_start":40,"line_end":40,"column_start":6,"column_end":9},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/cpuid.rs","byte_start":44858,"byte_end":44863,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dcb.rs","byte_start":47813,"byte_end":47816,"line_start":23,"line_end":23,"column_start":6,"column_end":9},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/dwt.rs","byte_start":50693,"byte_end":50696,"line_start":65,"line_end":65,"column_start":6,"column_end":9},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/itm.rs","byte_start":54018,"byte_end":54022,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/nvic.rs","byte_start":58829,"byte_end":58833,"line_start":77,"line_end":77,"column_start":6,"column_end":10},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":67270,"byte_end":67273,"line_start":121,"line_end":121,"column_start":6,"column_end":9},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":69001,"byte_end":69004,"line_start":167,"line_end":167,"column_start":6,"column_end":9},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":71061,"byte_end":71070,"line_start":234,"line_end":234,"column_start":6,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":72290,"byte_end":72300,"line_start":276,"line_end":276,"column_start":6,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":73622,"byte_end":73625,"line_start":313,"line_end":313,"column_start":6,"column_end":9},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92486,"byte_end":92489,"line_start":796,"line_end":796,"column_start":6,"column_end":9},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":92940,"byte_end":92943,"line_start":816,"line_end":816,"column_start":6,"column_end":9},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":93498,"byte_end":93501,"line_start":838,"line_end":838,"column_start":6,"column_end":9},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":94281,"byte_end":94284,"line_start":866,"line_end":866,"column_start":6,"column_end":9},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/scb.rs","byte_start":96628,"byte_end":96631,"line_start":948,"line_end":948,"column_start":6,"column_end":9},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/syst.rs","byte_start":103344,"byte_end":103348,"line_start":39,"line_end":39,"column_start":6,"column_end":10},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":27853,"byte_end":27864,"line_start":156,"line_end":156,"column_start":6,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29549,"byte_end":29552,"line_start":227,"line_end":227,"column_start":22,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":549},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":29582,"byte_end":29585,"line_start":230,"line_end":230,"column_start":6,"column_end":9},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30062,"byte_end":30065,"line_start":249,"line_end":249,"column_start":21,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":549},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30304,"byte_end":30309,"line_start":263,"line_end":263,"column_start":22,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":559},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30319,"byte_end":30324,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30651,"byte_end":30656,"line_start":276,"line_end":276,"column_start":21,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":559},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30909,"byte_end":30912,"line_start":290,"line_end":290,"column_start":22,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":30922,"byte_end":30925,"line_start":292,"line_end":292,"column_start":6,"column_end":9},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31236,"byte_end":31239,"line_start":303,"line_end":303,"column_start":21,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31500,"byte_end":31503,"line_start":317,"line_end":317,"column_start":22,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31513,"byte_end":31516,"line_start":319,"line_end":319,"column_start":6,"column_end":9},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":31827,"byte_end":31830,"line_start":330,"line_end":330,"column_start":21,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":577},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32093,"byte_end":32096,"line_start":344,"line_end":344,"column_start":22,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32126,"byte_end":32129,"line_start":347,"line_end":347,"column_start":6,"column_end":9},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32460,"byte_end":32463,"line_start":359,"line_end":359,"column_start":21,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32714,"byte_end":32717,"line_start":373,"line_end":373,"column_start":22,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":32772,"byte_end":32775,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33131,"byte_end":33134,"line_start":388,"line_end":388,"column_start":21,"column_end":24},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":595},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33633,"byte_end":33636,"line_start":407,"line_end":407,"column_start":22,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33646,"byte_end":33649,"line_start":409,"line_end":409,"column_start":6,"column_end":9},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":33954,"byte_end":33957,"line_start":420,"line_end":420,"column_start":21,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34129,"byte_end":34132,"line_start":429,"line_end":429,"column_start":24,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":604},"to":{"krate":1,"index":2294}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34366,"byte_end":34369,"line_start":441,"line_end":441,"column_start":22,"column_end":25},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":615},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34422,"byte_end":34425,"line_start":444,"line_end":444,"column_start":6,"column_end":9},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34773,"byte_end":34776,"line_start":456,"line_end":456,"column_start":21,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":615},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":34991,"byte_end":34994,"line_start":466,"line_end":466,"column_start":24,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":615},"to":{"krate":1,"index":2294}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35219,"byte_end":35222,"line_start":478,"line_end":478,"column_start":22,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":626},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35232,"byte_end":35235,"line_start":480,"line_end":480,"column_start":6,"column_end":9},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35546,"byte_end":35549,"line_start":491,"line_end":491,"column_start":21,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":626},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35816,"byte_end":35820,"line_start":505,"line_end":505,"column_start":22,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":635},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":35830,"byte_end":35834,"line_start":507,"line_end":507,"column_start":6,"column_end":10},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36147,"byte_end":36151,"line_start":518,"line_end":518,"column_start":21,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":635},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":36409,"byte_end":36412,"line_start":532,"line_end":532,"column_start":22,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37021,"byte_end":37024,"line_start":561,"line_end":561,"column_start":22,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":647},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37034,"byte_end":37037,"line_start":563,"line_end":563,"column_start":6,"column_end":9},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37348,"byte_end":37351,"line_start":574,"line_end":574,"column_start":21,"column_end":24},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":647},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37605,"byte_end":37609,"line_start":588,"line_end":588,"column_start":22,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37619,"byte_end":37623,"line_start":590,"line_end":590,"column_start":6,"column_end":10},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":37936,"byte_end":37940,"line_start":601,"line_end":601,"column_start":21,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":656},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38199,"byte_end":38203,"line_start":615,"line_end":615,"column_start":22,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":665},"to":{"krate":1,"index":2081}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38233,"byte_end":38237,"line_start":618,"line_end":618,"column_start":6,"column_end":10},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/peripheral/mod.rs","byte_start":38570,"byte_end":38574,"line_start":630,"line_end":630,"column_start":21,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":665},"to":{"krate":1,"index":2281}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":111502,"byte_end":111509,"line_start":9,"line_end":9,"column_start":6,"column_end":13},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113423,"byte_end":113428,"line_start":92,"line_end":92,"column_start":6,"column_end":11},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":113912,"byte_end":113917,"line_start":115,"line_end":115,"column_start":6,"column_end":11},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/control.rs","byte_start":114401,"byte_end":114405,"line_start":138,"line_end":138,"column_start":6,"column_end":10},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/faultmask.rs","byte_start":115185,"byte_end":115194,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":115861,"byte_end":115866,"line_start":9,"line_end":9,"column_start":6,"column_end":11},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/fpscr.rs","byte_start":122164,"byte_end":122169,"line_start":267,"line_end":267,"column_start":6,"column_end":11},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-0.7.3/src/register/primask.rs","byte_start":124058,"byte_end":124065,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1040},"to":{"krate":4294967295,"index":4294967295}}]}