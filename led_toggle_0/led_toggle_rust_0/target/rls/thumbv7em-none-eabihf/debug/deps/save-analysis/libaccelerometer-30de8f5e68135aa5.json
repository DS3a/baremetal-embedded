{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0","program":"/home/d33p/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","accelerometer","--edition=2018","/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"orientation\"","-C","metadata=30de8f5e68135aa5","-C","extra-filename=-30de8f5e68135aa5","--out-dir","/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/debug/deps","--extern","micromath=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libmicromath-dfe8b0577ce3069f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/d33p/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libaccelerometer-30de8f5e68135aa5.rmeta"},"prelude":{"crate_id":{"name":"accelerometer","disambiguator":[4948185197080859768,12145899087610325882]},"crate_root":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src","external_crates":[{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2184632775997829466,18026496178680965583]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3726307931522043477,4911878782996857177]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8506066526834043935,2338947288633172727]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","num":4,"id":{"name":"micromath","disambiguator":[2534128060887115294,10016125377924218597]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","num":5,"id":{"name":"generic_array","disambiguator":[13428866255613034633,5868400920583730306]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","num":6,"id":{"name":"typenum","disambiguator":[6568856327963469585,836838312901979677]}}],"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":0,"byte_end":2321,"line_start":1,"line_end":51,"column_start":1,"column_end":31}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6014,"byte_end":6021,"line_start":5,"line_end":5,"column_start":24,"column_end":31},"alias_span":null,"name":"Tracker","value":"","parent":{"krate":0,"index":41}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":2201,"byte_end":2202,"line_start":47,"line_end":47,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":2211,"byte_end":2212,"line_start":47,"line_end":47,"column_start":42,"column_end":43},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":4},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":2234,"byte_end":2240,"line_start":48,"line_end":48,"column_start":20,"column_end":26},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":95},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":2249,"byte_end":2255,"line_start":48,"line_end":48,"column_start":35,"column_end":41},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":2319,"byte_end":2320,"line_start":51,"line_end":51,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":0,"byte_end":2321,"line_start":1,"line_end":51,"column_start":1,"column_end":31},"name":"","qualname":"::","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":19},{"krate":0,"index":41},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"decl_id":null,"docs":" Generic embedded-friendly accelerometer support, including traits and types\n for representing readings from 2 or 3-axis accelerometers.","sig":null,"attributes":[{"value":"/ Generic embedded-friendly accelerometer support, including traits and types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/ for representing readings from 2 or 3-axis accelerometers.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":80,"byte_end":142,"line_start":2,"line_end":2,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":143,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Also includes optional device position tracking support with statistical","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":147,"byte_end":223,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ methods for smoothing out noisy accelerometer data.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":224,"byte_end":279,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":280,"byte_end":283,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ## Writing an accelerometer driver","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":284,"byte_end":322,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":323,"byte_end":326,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The `accelerometer` crate is intended to provide a \"HAL\" for accelerometers","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":327,"byte_end":406,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ which allows several accelerometer-consuming crates to leverage a common","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":407,"byte_end":483,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ API and set of vector types for consuming accelerometer data.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":484,"byte_end":549,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":550,"byte_end":553,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Accelerometer drivers are intended to use `embedded-hal` I2C or SPI","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":554,"byte_end":625,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ interfaces. The first task of writing a driver is to choose one of these","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":626,"byte_end":702,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ and write a driver which is able to communicate with the accelerometer and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":703,"byte_end":781,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ obtain data.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":782,"byte_end":798,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":799,"byte_end":802,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Next, impl the [`Accelerometer`] trait (providing normalized readings) and/or","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":803,"byte_end":884,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/ the [`RawAccelerometer`] trait (providing direct access to raw data) for","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":885,"byte_end":961,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ your driver (ideally the former, as it provides reuse across drivers).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":962,"byte_end":1036,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1037,"byte_end":1040,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ For [`RawAccelerometer`], you will need to choose a [`Vector`] type for","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1041,"byte_end":1116,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ raw accelerometer data which best matches the output of your device.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1117,"byte_end":1189,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ This trait has a single method, [`RawAccelerometer::accel_raw`], which","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1190,"byte_end":1264,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ returns a reading from the accelerometer or an error.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1265,"byte_end":1322,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1323,"byte_end":1326,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ See the [ADXL343 crate] for an example.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1327,"byte_end":1370,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1371,"byte_end":1374,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [Accelerometer]: https://docs.rs/accelerometer/latest/accelerometer/trait.Accelerometer.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1375,"byte_end":1471,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"/ [Vector]: https://docs.rs/accelerometer/latest/accelerometer/trait.Vector.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1472,"byte_end":1554,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ [acceleration]: https://docs.rs/accelerometer/latest/accelerometer/trait.Accelerometer.html#tymethod.acceleration","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1555,"byte_end":1672,"line_start":31,"line_end":31,"column_start":1,"column_end":118}},{"value":"/ [ADXL343 crate]: https://github.com/NeoBirth/ADXL343.rs/blob/23664e0c765847708c8751c5d3cce76227c0cc76/src/lib.rs#L184","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1673,"byte_end":1794,"line_start":32,"line_end":32,"column_start":1,"column_end":122}},{"value":"no_std","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1796,"byte_end":1806,"line_start":34,"line_end":34,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":1993,"byte_end":2016,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":2017,"byte_end":2080,"line_start":40,"line_end":40,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2552,"byte_end":2565,"line_start":10,"line_end":10,"column_start":11,"column_end":24},"name":"Accelerometer","qualname":"::accelerometer::Accelerometer","value":"Accelerometer","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":" Accelerometer trait which provides g-normalized readings.\n","sig":null,"attributes":[{"value":"/ Accelerometer trait which provides g-normalized readings.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2480,"byte_end":2541,"line_start":9,"line_end":9,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":12},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2596,"byte_end":2601,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::accelerometer::Accelerometer::Error","value":"type Error: Debug;","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2572,"byte_end":2586,"line_start":11,"line_end":11,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2751,"byte_end":2761,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"accel_norm","qualname":"::accelerometer::Accelerometer::accel_norm","value":"pub fn accel_norm(&mut Self) -> Result<F32x3, Error<Self::Error>>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Get normalized ±g reading from the accelerometer.","sig":null,"attributes":[{"value":"/ Get normalized ±g reading from the accelerometer.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2615,"byte_end":2669,"line_start":14,"line_end":14,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2674,"byte_end":2677,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Ex. {0.0, 5.2, 0.0} - 5.2 g of acceleration in the y-axis","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2682,"byte_end":2743,"line_start":16,"line_end":16,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2915,"byte_end":2926,"line_start":22,"line_end":22,"column_start":8,"column_end":19},"name":"sample_rate","qualname":"::accelerometer::Accelerometer::sample_rate","value":"pub fn sample_rate(&mut Self) -> Result<f32, Error<Self::Error>>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Get sample rate of accelerometer data.","sig":null,"attributes":[{"value":"/ Get sample rate of accelerometer data.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2816,"byte_end":2858,"line_start":19,"line_end":19,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2863,"byte_end":2866,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ Ex. 125.0 - sample rate of 125hz","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2871,"byte_end":2907,"line_start":21,"line_end":21,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":3198,"byte_end":3214,"line_start":29,"line_end":29,"column_start":11,"column_end":27},"name":"RawAccelerometer","qualname":"::accelerometer::RawAccelerometer","value":"RawAccelerometer<V: Vector>","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" Read raw acceleration vectors of type `V: Vector`.","sig":null,"attributes":[{"value":"/ Read raw acceleration vectors of type `V: Vector`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":2977,"byte_end":3031,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":3032,"byte_end":3035,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This is intended to provide direct access to raw accelerometer data and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":3036,"byte_end":3111,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ should use a vector type which best matches the raw accelerometer data.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":3112,"byte_end":3187,"line_start":28,"line_end":28,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":3256,"byte_end":3261,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"name":"Error","qualname":"::accelerometer::RawAccelerometer::Error","value":"type Error: Debug;","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":3232,"byte_end":3246,"line_start":30,"line_end":30,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":3335,"byte_end":3344,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"accel_raw","qualname":"::accelerometer::RawAccelerometer::accel_raw","value":"pub fn accel_raw(&mut Self) -> Result<V, Error<Self::Error>>","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Get raw acceleration data from the accelerometer\n","sig":null,"attributes":[{"value":"/ Get raw acceleration data from the accelerometer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/accelerometer.rs","byte_start":3275,"byte_end":3327,"line_start":33,"line_end":33,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":19},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":140},{"krate":0,"index":23},{"krate":0,"index":74},{"krate":0,"index":81},{"krate":0,"index":78},{"krate":0,"index":24},{"krate":0,"index":84},{"krate":0,"index":103},{"krate":0,"index":101},{"krate":0,"index":99},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38}],"decl_id":null,"docs":" Accelerometer errors - generic over an inner \"cause\" type (intended to be\n an underlying I2C or SPI error type, if applicable).\n","sig":null,"attributes":[{"value":"/ Accelerometer errors - generic over an inner \"cause\" type (intended to be","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":3393,"byte_end":3470,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ an underlying I2C or SPI error type, if applicable).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":3471,"byte_end":3527,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":3720,"byte_end":3725,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"decl_id":null,"docs":" Accelerometer errors, generic around another error type `E` representing\n an (optional) cause of this error.\n","sig":null,"attributes":[{"value":"/ Accelerometer errors, generic around another error type `E` representing","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":3569,"byte_end":3645,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ an (optional) cause of this error.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":3646,"byte_end":3684,"line_start":7,"line_end":7,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":3942,"byte_end":3945,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<Error<E>>::new","value":"pub fn new(ErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new error\n","sig":null,"attributes":[{"value":"/ Create a new error","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":3908,"byte_end":3930,"line_start":21,"line_end":21,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4066,"byte_end":4080,"line_start":27,"line_end":27,"column_start":12,"column_end":26},"name":"new_with_cause","qualname":"<Error<E>>::new_with_cause","value":"pub fn new_with_cause(ErrorKind, E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new error with a cause\n","sig":null,"attributes":[{"value":"/ Create a new error with a cause","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4019,"byte_end":4054,"line_start":26,"line_end":26,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4256,"byte_end":4260,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error<E>>::kind","value":"pub fn kind(&Self) -> ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the kind of error which occurred\n","sig":null,"attributes":[{"value":"/ Get the kind of error which occurred","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4204,"byte_end":4244,"line_start":34,"line_end":34,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4381,"byte_end":4386,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"cause","qualname":"<Error<E>>::cause","value":"pub fn cause(&Self) -> Option<&E>","parent":null,"children":[],"decl_id":null,"docs":" Get the cause of the underlying error (if applicable)\n","sig":null,"attributes":[{"value":"/ Get the cause of the underlying error (if applicable)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4312,"byte_end":4369,"line_start":39,"line_end":39,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4569,"byte_end":4579,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"into_cause","qualname":"<Error<E>>::into_cause","value":"pub fn into_cause(Self) -> E","parent":null,"children":[],"decl_id":null,"docs":" Convert this error into its underlying cause.","sig":null,"attributes":[{"value":"/ Convert this error into its underlying cause.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4449,"byte_end":4498,"line_start":44,"line_end":44,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4503,"byte_end":4506,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Panics if the error does not have a cause.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4511,"byte_end":4557,"line_start":46,"line_end":46,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":85},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4859,"byte_end":4862,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"Bus","qualname":"::error::ErrorKind::Bus","value":"ErrorKind::Bus","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Error in the underlying communications bus (e.g. I2C, SPI)\n","sig":null,"attributes":[{"value":"/ Error in the underlying communications bus (e.g. I2C, SPI)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4792,"byte_end":4854,"line_start":56,"line_end":56,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":87},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4916,"byte_end":4922,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"name":"Device","qualname":"::error::ErrorKind::Device","value":"ErrorKind::Device","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Device invalid or other hardware error\n","sig":null,"attributes":[{"value":"/ Device invalid or other hardware error","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4869,"byte_end":4911,"line_start":59,"line_end":59,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":89},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5002,"byte_end":5006,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Mode","qualname":"::error::ErrorKind::Mode","value":"ErrorKind::Mode","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Device is in an invalid mode to complete the requested operation\n","sig":null,"attributes":[{"value":"/ Device is in an invalid mode to complete the requested operation","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4929,"byte_end":4997,"line_start":62,"line_end":62,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":91},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5039,"byte_end":5044,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Param","qualname":"::error::ErrorKind::Param","value":"ErrorKind::Param","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Invalid parameter\n","sig":null,"attributes":[{"value":"/ Invalid parameter","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5013,"byte_end":5034,"line_start":65,"line_end":65,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":84},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4776,"byte_end":4785,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::error::ErrorKind","value":"pub enum ErrorKind {\n\n    /// Error in the underlying communications bus (e.g. I2C, SPI)\n    Bus,\n\n    /// Device invalid or other hardware error\n    Device,\n\n    /// Device is in an invalid mode to complete the requested operation\n    Mode,\n\n    /// Invalid parameter\n    Param,\n}","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91}],"decl_id":null,"docs":" Kinds of accelerometer errors\n","sig":null,"attributes":[{"value":"/ Kinds of accelerometer errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":4688,"byte_end":4721,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5132,"byte_end":5135,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"err","qualname":"<ErrorKind>::err","value":"pub fn err<E: Debug>(Self) -> Result<(), Error<E>>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Err(Error)` out of this `ErrorKind`\n","sig":null,"attributes":[{"value":"/ Create an `Err(Error)` out of this `ErrorKind`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5070,"byte_end":5120,"line_start":70,"line_end":70,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5287,"byte_end":5298,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"description","qualname":"<ErrorKind>::description","value":"pub fn description(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get a string describing the error\n","sig":null,"attributes":[{"value":"/ Get a string describing the error","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5238,"byte_end":5275,"line_start":77,"line_end":77,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":41},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"orientation","qualname":"::orientation","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":62},{"krate":0,"index":104},{"krate":0,"index":129},{"krate":0,"index":127},{"krate":0,"index":125},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":63}],"decl_id":null,"docs":" Orientation tracking for accelerometer-equipped devices.\n","sig":null,"attributes":[{"value":"cfg(feature = \"orientation\")","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":2116,"byte_end":2147,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/ Orientation tracking for accelerometer-equipped devices.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":5915,"byte_end":5975,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":7899,"byte_end":7906,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"Tracker","qualname":"::orientation::tracker::Tracker","value":"Tracker {  }","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"decl_id":null,"docs":" Orientation tracker: computes a device's [`Orientation`] from accelerometer\n readings.\n","sig":null,"attributes":[{"value":"/ Orientation tracker: computes a device's [`Orientation`] from accelerometer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":7794,"byte_end":7873,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ readings.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":7874,"byte_end":7887,"line_start":18,"line_end":18,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8694,"byte_end":8697,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Tracker>::new","value":"pub fn new<impl Into<f32>: Into<f32>>(impl Into<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new orientation tracker.","sig":null,"attributes":[{"value":"/ Create a new orientation tracker.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8114,"byte_end":8151,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8156,"byte_end":8159,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The `threshold` value should be slightly less than the absolute value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8164,"byte_end":8237,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ of the reading you get from the accelerometer when the device is lying","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8242,"byte_end":8316,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ in a position where two of the axes are reading 0 (i.e. getting a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8321,"byte_end":8390,"line_start":32,"line_end":32,"column_start":5,"column_end":74}},{"value":"/ strong reading from one axis alone). It may require some","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8395,"byte_end":8455,"line_start":33,"line_end":33,"column_start":5,"column_end":65}},{"value":"/ experimentation to properly tune this threshold.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8460,"byte_end":8512,"line_start":34,"line_end":34,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8517,"byte_end":8520,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ For best results, set the accelerometer's sensitivity higher than ±2g,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8525,"byte_end":8600,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ e.g. ±4g or ±8g. This will help reduce noise in the accelerometer data.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8605,"byte_end":8682,"line_start":37,"line_end":37,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":9062,"byte_end":9068,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"update","qualname":"<Tracker>::update","value":"pub fn update<V, C>(&mut Self, V) -> Orientation where V: Vector<Axes = U3,\nComponent = U3> + VectorExt, C: Component + Into<f32>","parent":null,"children":[],"decl_id":null,"docs":" Update the tracker's internal state from the given acceleration vector\n (i.e. obtained from [`Accelerometer::accel_norm`]), returning a new\n computed orientation value.\n","sig":null,"attributes":[{"value":"/ Update the tracker's internal state from the given acceleration vector","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8864,"byte_end":8938,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ (i.e. obtained from [`Accelerometer::accel_norm`]), returning a new","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8943,"byte_end":9014,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ computed orientation value.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":9019,"byte_end":9050,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":10360,"byte_end":10371,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"orientation","qualname":"<Tracker>::orientation","value":"pub fn orientation(&Self) -> Orientation","parent":null,"children":[],"decl_id":null,"docs":" Get the last known orientation reading for the device.","sig":null,"attributes":[{"value":"/ Get the last known orientation reading for the device.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":10225,"byte_end":10283,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":10288,"byte_end":10291,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Use [`Tracker::update`] to obtain a new reading.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":10296,"byte_end":10348,"line_start":92,"line_end":92,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":105},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6217,"byte_end":6224,"line_start":11,"line_end":11,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::orientation::Orientation::Unknown","value":"Orientation::Unknown","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Unable to determine the orientation from current data\n","sig":null,"attributes":[{"value":"/ Unable to determine the orientation from current data","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6155,"byte_end":6212,"line_start":10,"line_end":10,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":107},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6301,"byte_end":6311,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"PortraitUp","qualname":"::orientation::Orientation::PortraitUp","value":"Orientation::PortraitUp","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Device is in portrait mode in whatever way is considered \"up\"\n","sig":null,"attributes":[{"value":"/ Device is in portrait mode in whatever way is considered \"up\"","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6231,"byte_end":6296,"line_start":13,"line_end":13,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":109},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6390,"byte_end":6402,"line_start":17,"line_end":17,"column_start":5,"column_end":17},"name":"PortraitDown","qualname":"::orientation::Orientation::PortraitDown","value":"Orientation::PortraitDown","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Device is in portrait mode in whatever way is considered \"down\"\n","sig":null,"attributes":[{"value":"/ Device is in portrait mode in whatever way is considered \"down\"","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6318,"byte_end":6385,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":111},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6480,"byte_end":6491,"line_start":20,"line_end":20,"column_start":5,"column_end":16},"name":"LandscapeUp","qualname":"::orientation::Orientation::LandscapeUp","value":"Orientation::LandscapeUp","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Device is in landscape mode in whatever way is considered \"up\"\n","sig":null,"attributes":[{"value":"/ Device is in landscape mode in whatever way is considered \"up\"","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6409,"byte_end":6475,"line_start":19,"line_end":19,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":113},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6571,"byte_end":6584,"line_start":23,"line_end":23,"column_start":5,"column_end":18},"name":"LandscapeDown","qualname":"::orientation::Orientation::LandscapeDown","value":"Orientation::LandscapeDown","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Device is in landscape mode in whatever way is considered \"down\"\n","sig":null,"attributes":[{"value":"/ Device is in landscape mode in whatever way is considered \"down\"","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6498,"byte_end":6566,"line_start":22,"line_end":22,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":115},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6643,"byte_end":6649,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"FaceUp","qualname":"::orientation::Orientation::FaceUp","value":"Orientation::FaceUp","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Device is parallel to the ground, facing up\n","sig":null,"attributes":[{"value":"/ Device is parallel to the ground, facing up","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6591,"byte_end":6638,"line_start":25,"line_end":25,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":117},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6710,"byte_end":6718,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"FaceDown","qualname":"::orientation::Orientation::FaceDown","value":"Orientation::FaceDown","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Device is parallel to the ground, facing down\n","sig":null,"attributes":[{"value":"/ Device is parallel to the ground, facing down","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6656,"byte_end":6705,"line_start":28,"line_end":28,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":104},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6137,"byte_end":6148,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"Orientation","qualname":"::orientation::Orientation","value":"pub enum Orientation {\n\n    /// Unable to determine the orientation from current data\n    Unknown,\n\n    /// Device is in portrait mode in whatever way is considered \"up\"\n    PortraitUp,\n\n    /// Device is in portrait mode in whatever way is considered \"down\"\n    PortraitDown,\n\n    /// Device is in landscape mode in whatever way is considered \"up\"\n    LandscapeUp,\n\n    /// Device is in landscape mode in whatever way is considered \"down\"\n    LandscapeDown,\n\n    /// Device is parallel to the ground, facing up\n    FaceUp,\n\n    /// Device is parallel to the ground, facing down\n    FaceDown,\n}","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117}],"decl_id":null,"docs":" Device orientation as computed from accelerometer data\n","sig":null,"attributes":[{"value":"/ Device orientation as computed from accelerometer data","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6024,"byte_end":6082,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6804,"byte_end":6811,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"is_flat","qualname":"<Orientation>::is_flat","value":"pub fn is_flat(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this orientation considered to be flat?\n","sig":null,"attributes":[{"value":"/ Is this orientation considered to be flat?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6746,"byte_end":6792,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":7016,"byte_end":7028,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"is_landscape","qualname":"<Orientation>::is_landscape","value":"pub fn is_landscape(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the device in a landscape orientation?\n","sig":null,"attributes":[{"value":"/ Is the device in a landscape orientation?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6959,"byte_end":7004,"line_start":41,"line_end":41,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":7242,"byte_end":7253,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"is_portrait","qualname":"<Orientation>::is_portrait","value":"pub fn is_portrait(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the device in a portrait orientation?\n","sig":null,"attributes":[{"value":"/ Is the device in a portrait orientation?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":7186,"byte_end":7230,"line_start":49,"line_end":49,"column_start":5,"column_end":49}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":3873,"byte_end":3878,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5054,"byte_end":5063,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5222,"byte_end":5231,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5572,"byte_end":5581,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5720,"byte_end":5725,"line_start":94,"line_end":94,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8100,"byte_end":8107,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6728,"byte_end":6739,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":2109,"byte_end":2114,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":19}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/lib.rs","byte_start":2156,"byte_end":2167,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":41}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":3873,"byte_end":3878,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5054,"byte_end":5063,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5222,"byte_end":5231,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5572,"byte_end":5581,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":6965}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/error.rs","byte_start":5720,"byte_end":5725,"line_start":94,"line_end":94,"column_start":21,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":74},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation/tracker.rs","byte_start":8100,"byte_end":8107,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/accelerometer-0.12.0/src/orientation.rs","byte_start":6728,"byte_end":6739,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":104},"to":{"krate":4294967295,"index":4294967295}}]}