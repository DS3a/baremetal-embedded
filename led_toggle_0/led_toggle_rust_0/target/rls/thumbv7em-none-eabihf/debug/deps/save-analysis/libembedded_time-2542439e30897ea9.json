{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1","program":"/home/d33p/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","embedded_time","--edition=2018","/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=2542439e30897ea9","-C","extra-filename=-2542439e30897ea9","--out-dir","/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/debug/deps","--extern","num=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libnum-09f18d8b3726defd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/d33p/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libembedded_time-2542439e30897ea9.rmeta"},"prelude":{"crate_id":{"name":"embedded_time","disambiguator":[10230048361333351695,14694345798062568136]},"crate_root":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src","external_crates":[{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2184632775997829466,18026496178680965583]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3726307931522043477,4911878782996857177]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8506066526834043935,2338947288633172727]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","num":4,"id":{"name":"num","disambiguator":[14413261035759044507,14661901455375213319]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","num":5,"id":{"name":"num_complex","disambiguator":[15669975335806412388,18220025045042643169]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","num":6,"id":{"name":"num_traits","disambiguator":[8591346517860299891,13871901537920423757]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","num":7,"id":{"name":"num_rational","disambiguator":[17793779966226607719,8596043626424539559]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","num":8,"id":{"name":"num_integer","disambiguator":[7030318395070135512,14415012302930823151]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","num":9,"id":{"name":"num_iter","disambiguator":[11830254793646662291,15984488217602684412]}}],"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":0,"byte_end":12266,"line_start":1,"line_end":360,"column_start":1,"column_end":13}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14140,"byte_end":14148,"line_start":3,"line_end":3,"column_start":26,"column_end":34},"alias_span":null,"name":"Fraction","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14394,"byte_end":14404,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":22}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14476,"byte_end":14477,"line_start":20,"line_end":20,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":22}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28586,"byte_end":28596,"line_start":523,"line_end":523,"column_start":13,"column_end":23},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":71}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":77567,"byte_end":77575,"line_start":3,"line_end":3,"column_start":26,"column_end":34},"alias_span":null,"name":"Fraction","value":"","parent":{"krate":0,"index":247}},{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":77784,"byte_end":77794,"line_start":12,"line_end":12,"column_start":22,"column_end":32},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":247}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":77866,"byte_end":77867,"line_start":15,"line_end":15,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":247}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":88129,"byte_end":88139,"line_start":393,"line_end":393,"column_start":13,"column_end":23},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":278}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10390,"byte_end":10395,"line_start":290,"line_end":290,"column_start":16,"column_end":21},"alias_span":null,"name":"Clock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1539},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10414,"byte_end":10421,"line_start":291,"line_end":291,"column_start":18,"column_end":25},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10441,"byte_end":10448,"line_start":292,"line_end":292,"column_start":19,"column_end":26},"alias_span":null,"name":"TimeInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5149},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10465,"byte_end":10470,"line_start":293,"line_end":293,"column_start":16,"column_end":21},"alias_span":null,"name":"Timer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":0,"byte_end":12266,"line_start":1,"line_end":360,"column_start":1,"column_end":13},"name":"","qualname":"::","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":22},{"krate":0,"index":108},{"krate":0,"index":148},{"krate":0,"index":187},{"krate":0,"index":247},{"krate":0,"index":319},{"krate":0,"index":329},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":5175},{"krate":0,"index":5199},{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5192},{"krate":0,"index":5193},{"krate":0,"index":5189},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":5201},{"krate":0,"index":5221},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5212},{"krate":0,"index":392},{"krate":0,"index":394}],"decl_id":null,"docs":" `embedded-time` provides a comprehensive library of [`Duration`] and [`Rate`] types as well as\n a [`Clock`] abstraction for hardware timers/clocks and the associated [`Instant`] type for\n in embedded systems.","sig":null,"attributes":[{"value":"/ `embedded-time` provides a comprehensive library of [`Duration`] and [`Rate`] types as well as","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":0,"byte_end":98,"line_start":1,"line_end":1,"column_start":1,"column_end":99}},{"value":"/ a [`Clock`] abstraction for hardware timers/clocks and the associated [`Instant`] type for","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":99,"byte_end":193,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"/ in embedded systems.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":194,"byte_end":218,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":219,"byte_end":222,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Additionally, an implementation of software timers is provided that work seemlessly with all","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":223,"byte_end":319,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ the types in this crate.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":320,"byte_end":348,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":349,"byte_end":352,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":353,"byte_end":364,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::{duration::*, rate::*};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":365,"byte_end":411,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ # use core::convert::TryInto;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":412,"byte_end":445,"line_start":10,"line_end":10,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":446,"byte_end":449,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let micros = 200_000_u32.microseconds();                // 200_000 μs","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":450,"byte_end":524,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ let millis: Milliseconds = micros.into();               // 200 ms","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":525,"byte_end":594,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ let frequency: Result<Hertz,_> = millis.to_rate();      // 5 Hz","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":595,"byte_end":662,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":663,"byte_end":666,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(frequency, Ok(5_u32.Hz()));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":667,"byte_end":709,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":710,"byte_end":717,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":718,"byte_end":721,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Motivation","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":722,"byte_end":738,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":739,"byte_end":742,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The handling of time on embedded systems is generally much different than that of OSs. For","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":743,"byte_end":837,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ instance, on an OS, the time is measured against an arbitrary epoch. Embedded systems generally","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":838,"byte_end":937,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"/ don't know (nor do they care) what the *real* time is, but rather how much time has passed since","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":938,"byte_end":1038,"line_start":23,"line_end":23,"column_start":1,"column_end":101}},{"value":"/ the system has started.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1039,"byte_end":1066,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1067,"byte_end":1070,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ## Drawbacks of the standard library types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1071,"byte_end":1117,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1118,"byte_end":1121,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ### Duration","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1122,"byte_end":1138,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1139,"byte_end":1142,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ - The storage is `u64` seconds and `u32` nanoseconds.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1143,"byte_end":1200,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/ - This is huge overkill and adds needless complexity beyond what is required (or desired) for","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1201,"byte_end":1298,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/   embedded systems.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1299,"byte_end":1322,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/ - Any read (with the exception of seconds and nanoseconds) requires arithmetic to convert to the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1323,"byte_end":1423,"line_start":33,"line_end":33,"column_start":1,"column_end":101}},{"value":"/   requested units","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1424,"byte_end":1445,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ - This is much slower than this project's implementation of what is analogous to a tagged union","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1446,"byte_end":1545,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"/   of time units.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1546,"byte_end":1566,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1567,"byte_end":1570,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ### Instant","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1571,"byte_end":1586,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1587,"byte_end":1590,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - The `Instant` type requires `std`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1591,"byte_end":1631,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1632,"byte_end":1635,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ## Drawbacks of the [`time`](https://crates.io/crates/time) crate","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1636,"byte_end":1705,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1706,"byte_end":1709,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The `time` crate is a remarkable library but isn't geared for embedded systems (although it does","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1710,"byte_end":1810,"line_start":44,"line_end":44,"column_start":1,"column_end":101}},{"value":"/ support a subset of features in `no_std` contexts). It suffers from some of the same drawbacks","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1811,"byte_end":1909,"line_start":45,"line_end":45,"column_start":1,"column_end":99}},{"value":"/ as the core::Duration type (namely the storage format) and the `Instant` struct dependency on","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":1910,"byte_end":2007,"line_start":46,"line_end":46,"column_start":1,"column_end":98}},{"value":"/ `std`. It also adds a lot of functionally that would seldom be useful in an embedded context.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2008,"byte_end":2105,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/ For instance it has a comprehensive date/time formatting, timezone, and calendar support.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2106,"byte_end":2199,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2200,"byte_end":2203,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Background","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2204,"byte_end":2221,"line_start":50,"line_end":50,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2222,"byte_end":2225,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ### What is an Instant?","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2226,"byte_end":2253,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2254,"byte_end":2257,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ In the Rust ecosystem, it appears to be idiomatic to call a `now()` associated function from an","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2258,"byte_end":2357,"line_start":54,"line_end":54,"column_start":1,"column_end":100}},{"value":"/ Instant type. There is generally no concept of a \"Clock\". I believe that using the `Instant` in","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2358,"byte_end":2457,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/ this way is a violation of the *separation of concerns* principle. What is an `Instant`? Is it a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2458,"byte_end":2558,"line_start":56,"line_end":56,"column_start":1,"column_end":101}},{"value":"/ time-keeping entity from which you read the current instant in time, or is it that instant in","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2559,"byte_end":2656,"line_start":57,"line_end":57,"column_start":1,"column_end":98}},{"value":"/ time itself. In this case, it's both.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2657,"byte_end":2698,"line_start":58,"line_end":58,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2699,"byte_end":2702,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ As an alternative, the current instant in time is read from a **Clock**. The `Instant` read from","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2703,"byte_end":2803,"line_start":60,"line_end":60,"column_start":1,"column_end":101}},{"value":"/ the `Clock` has the same precision and width (inner type) as the `Clock`. Requesting the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2804,"byte_end":2896,"line_start":61,"line_end":61,"column_start":1,"column_end":93}},{"value":"/ difference between two `Instant`s gives a `Duration` which can have different precision and/or","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2897,"byte_end":2995,"line_start":62,"line_end":62,"column_start":1,"column_end":99}},{"value":"/ width.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":2996,"byte_end":3006,"line_start":63,"line_end":63,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3007,"byte_end":3010,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3011,"byte_end":3025,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3026,"byte_end":3029,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The approach taken is similar to the C++ `chrono` library. [`Duration`]s and [`Rate`]s are","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3030,"byte_end":3124,"line_start":67,"line_end":67,"column_start":1,"column_end":95}},{"value":"/ fixed-point values as in they are comprised of _integer_ and _scaling factor_ values.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3125,"byte_end":3214,"line_start":68,"line_end":68,"column_start":1,"column_end":90}},{"value":"/ The _scaling factor_ is a `const` [`Fraction`](fraction::Fraction). One benefit of this","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3215,"byte_end":3306,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/ structure is that it avoids unnecessary arithmetic. For example, if the [`Duration`] type is","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3307,"byte_end":3403,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ [`Milliseconds`], a call to the [`Duration::integer()`] method simply returns the _integer_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3404,"byte_end":3499,"line_start":71,"line_end":71,"column_start":1,"column_end":96}},{"value":"/ part directly which in this case is the number of milliseconds represented by the [`Duration`].","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3500,"byte_end":3599,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ Conversion arithmetic is only performed when explicitly converting between time units (eg.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3600,"byte_end":3694,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ [`Milliseconds`] --> [`Seconds`]).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3695,"byte_end":3733,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3734,"byte_end":3737,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ In addition, a wide range of rate-type types are available including [`Hertz`],","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3738,"byte_end":3821,"line_start":76,"line_end":76,"column_start":1,"column_end":84}},{"value":"/ [`BitsPerSecond`], [`KibibytesPerSecond`], [`Baud`], etc.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3822,"byte_end":3883,"line_start":77,"line_end":77,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3884,"byte_end":3887,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ A [`Duration`] type can be converted to a [`Rate`] type and vica-versa.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3888,"byte_end":3963,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3964,"byte_end":3967,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [`Seconds`]: duration::units::Seconds","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":3968,"byte_end":4009,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/ [`Milliseconds`]: duration::units::Milliseconds","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4010,"byte_end":4061,"line_start":82,"line_end":82,"column_start":1,"column_end":52}},{"value":"/ [`Clock`]: clock::Clock","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4062,"byte_end":4089,"line_start":83,"line_end":83,"column_start":1,"column_end":28}},{"value":"/ [`Instant`]: instant::Instant","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4090,"byte_end":4123,"line_start":84,"line_end":84,"column_start":1,"column_end":34}},{"value":"/ [`Rate`]: rate::Rate","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4124,"byte_end":4148,"line_start":85,"line_end":85,"column_start":1,"column_end":25}},{"value":"/ [`Hertz`]: rate::units::Hertz","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4149,"byte_end":4182,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/ [`BitsPerSecond`]: rate::units::BitsPerSecond","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4183,"byte_end":4232,"line_start":87,"line_end":87,"column_start":1,"column_end":50}},{"value":"/ [`KibibytesPerSecond`]: rate::units::KibibytesPerSecond","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4233,"byte_end":4292,"line_start":88,"line_end":88,"column_start":1,"column_end":60}},{"value":"/ [`Baud`]: rate::units::Baud","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4293,"byte_end":4324,"line_start":89,"line_end":89,"column_start":1,"column_end":32}},{"value":"/ [`Duration`]: duration::Duration","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4325,"byte_end":4361,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ [`Duration::integer()`]: duration/trait.Duration.html#tymethod.integer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4362,"byte_end":4436,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4437,"byte_end":4440,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ## Definitions","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4441,"byte_end":4459,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4460,"byte_end":4463,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ **Clock**: Any entity that periodically counts (ie an external or peripheral hardware","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4464,"byte_end":4553,"line_start":95,"line_end":95,"column_start":1,"column_end":90}},{"value":"/ timer/counter). Generally, this needs to be monotonic. A wrapping clock is considered monotonic","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4554,"byte_end":4653,"line_start":96,"line_end":96,"column_start":1,"column_end":100}},{"value":"/ in this context as long as it fulfills the other requirements.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4654,"byte_end":4720,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4721,"byte_end":4724,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ **Wrapping Clock**: A clock that when at its maximum value, the next count is the minimum","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4725,"byte_end":4818,"line_start":99,"line_end":99,"column_start":1,"column_end":94}},{"value":"/ value.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4819,"byte_end":4829,"line_start":100,"line_end":100,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4830,"byte_end":4833,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ **Timer**: An entity that counts toward an expiration.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4834,"byte_end":4892,"line_start":102,"line_end":102,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4893,"byte_end":4896,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ **Instant**: A specific instant in time (\"time-point\") read from a clock.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4897,"byte_end":4974,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4975,"byte_end":4978,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ **Duration**: The difference of two instants. The time that has elapsed since an instant. A","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":4979,"byte_end":5074,"line_start":106,"line_end":106,"column_start":1,"column_end":96}},{"value":"/ span of time.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5075,"byte_end":5092,"line_start":107,"line_end":107,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5093,"byte_end":5096,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ **Rate**: A measure of events per time such as frequency, data-rate, etc.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5097,"byte_end":5174,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5175,"byte_end":5178,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ # Imports","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5179,"byte_end":5192,"line_start":111,"line_end":111,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5193,"byte_end":5196,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The suggested use statements are as follows depending on what is needed:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5197,"byte_end":5273,"line_start":113,"line_end":113,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5274,"byte_end":5277,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5278,"byte_end":5289,"line_start":115,"line_end":115,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;    // imports all duration-related types and traits","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5290,"byte_end":5377,"line_start":116,"line_end":116,"column_start":1,"column_end":88}},{"value":"/ use embedded_time::rate::*;        // imports all rate-related types and traits","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5378,"byte_end":5461,"line_start":117,"line_end":117,"column_start":1,"column_end":84}},{"value":"/ use embedded_time::clock;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5462,"byte_end":5491,"line_start":118,"line_end":118,"column_start":1,"column_end":30}},{"value":"/ use embedded_time::Instant;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5492,"byte_end":5523,"line_start":119,"line_end":119,"column_start":1,"column_end":32}},{"value":"/ use embedded_time::Timer;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5524,"byte_end":5553,"line_start":120,"line_end":120,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5554,"byte_end":5561,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5562,"byte_end":5565,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # Duration Types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5566,"byte_end":5586,"line_start":123,"line_end":123,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5587,"byte_end":5590,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ | Units        | Extension    |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5591,"byte_end":5626,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"/ | :----------- | :----------- |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5627,"byte_end":5662,"line_start":126,"line_end":126,"column_start":1,"column_end":36}},{"value":"/ | Hours        | hours        |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5663,"byte_end":5698,"line_start":127,"line_end":127,"column_start":1,"column_end":36}},{"value":"/ | Minutes      | minutes      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5699,"byte_end":5734,"line_start":128,"line_end":128,"column_start":1,"column_end":36}},{"value":"/ | Seconds      | seconds      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5735,"byte_end":5770,"line_start":129,"line_end":129,"column_start":1,"column_end":36}},{"value":"/ | Milliseconds | milliseconds |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5771,"byte_end":5806,"line_start":130,"line_end":130,"column_start":1,"column_end":36}},{"value":"/ | Microseconds | microseconds |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5807,"byte_end":5842,"line_start":131,"line_end":131,"column_start":1,"column_end":36}},{"value":"/ | Nanoseconds  | nanoseconds  |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5843,"byte_end":5878,"line_start":132,"line_end":132,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5879,"byte_end":5882,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ - Conversion from `Rate` types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5883,"byte_end":5917,"line_start":134,"line_end":134,"column_start":1,"column_end":35}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5918,"byte_end":5929,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::{duration::*, rate::*};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5930,"byte_end":5976,"line_start":136,"line_end":136,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5977,"byte_end":5980,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # assert!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5981,"byte_end":5995,"line_start":138,"line_end":138,"column_start":1,"column_end":15}},{"value":"/ Microseconds(500_u32).to_rate() == Ok(Kilohertz(2_u32))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":5996,"byte_end":6055,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ # );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6056,"byte_end":6064,"line_start":140,"line_end":140,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6065,"byte_end":6072,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6073,"byte_end":6076,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ - Conversion to/from `Generic` `Duration` type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6077,"byte_end":6127,"line_start":143,"line_end":143,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6128,"byte_end":6131,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6132,"byte_end":6143,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::{duration::*};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6144,"byte_end":6181,"line_start":146,"line_end":146,"column_start":1,"column_end":38}},{"value":"/ # use core::convert::TryFrom;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6182,"byte_end":6215,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6216,"byte_end":6219,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # assert!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6220,"byte_end":6234,"line_start":149,"line_end":149,"column_start":1,"column_end":15}},{"value":"/ Seconds(2_u64).to_generic(Fraction::new(1, 2_000)) == Ok(Generic::new(4_000_u32, Fraction::new(1, 2_000)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6235,"byte_end":6345,"line_start":150,"line_end":150,"column_start":1,"column_end":111}},{"value":"/ # );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6346,"byte_end":6354,"line_start":151,"line_end":151,"column_start":1,"column_end":9}},{"value":"/ # assert!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6355,"byte_end":6369,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/ Seconds::<u64>::try_from(Generic::new(2_000_u32, Fraction::new(1, 1_000))) == Ok(Seconds(2_u64))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6370,"byte_end":6470,"line_start":153,"line_end":153,"column_start":1,"column_end":101}},{"value":"/ # );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6471,"byte_end":6479,"line_start":154,"line_end":154,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6480,"byte_end":6487,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6488,"byte_end":6491,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ## `core` Compatibility","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6492,"byte_end":6519,"line_start":157,"line_end":157,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6520,"byte_end":6523,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ - Conversion to/from `core::time::Duration`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6524,"byte_end":6571,"line_start":159,"line_end":159,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6572,"byte_end":6575,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ ### Benchmark Comparisons to `core` duration type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6576,"byte_end":6629,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6630,"byte_end":6633,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ #### Construct and Read Milliseconds","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6634,"byte_end":6674,"line_start":163,"line_end":163,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6675,"byte_end":6678,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6679,"byte_end":6690,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6691,"byte_end":6726,"line_start":166,"line_end":166,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6727,"byte_end":6730,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # let ms = 100;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6731,"byte_end":6750,"line_start":168,"line_end":168,"column_start":1,"column_end":20}},{"value":"/ let duration = Milliseconds::<u64>(ms); // 8 bytes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6751,"byte_end":6805,"line_start":169,"line_end":169,"column_start":1,"column_end":55}},{"value":"/ let count = duration.integer();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6806,"byte_end":6841,"line_start":170,"line_end":170,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6842,"byte_end":6849,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6850,"byte_end":6853,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ _(the size of `embedded-time` duration types is only the size of the inner type)_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6854,"byte_end":6939,"line_start":173,"line_end":173,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6940,"byte_end":6943,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6944,"byte_end":6955,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6956,"byte_end":6984,"line_start":176,"line_end":176,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6985,"byte_end":6988,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # let ms = 100;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":6989,"byte_end":7008,"line_start":178,"line_end":178,"column_start":1,"column_end":20}},{"value":"/ let core_duration = Duration::from_millis(ms); // 12 bytes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7009,"byte_end":7071,"line_start":179,"line_end":179,"column_start":1,"column_end":63}},{"value":"/ let count = core_duration.as_millis();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7072,"byte_end":7114,"line_start":180,"line_end":180,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7115,"byte_end":7122,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7123,"byte_end":7126,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ _(the size of `core` duration type is 12 B)_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7127,"byte_end":7175,"line_start":183,"line_end":183,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7176,"byte_end":7179,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ![](resources/duration_violin_v0.7.0.svg)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7180,"byte_end":7225,"line_start":185,"line_end":185,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7226,"byte_end":7229,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ # Rate Types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7230,"byte_end":7246,"line_start":187,"line_end":187,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7247,"byte_end":7250,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ ## Frequency","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7251,"byte_end":7267,"line_start":189,"line_end":189,"column_start":1,"column_end":17}},{"value":"/ | Units             | Extension |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7268,"byte_end":7305,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/ | :---------------- | :-------- |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7306,"byte_end":7343,"line_start":191,"line_end":191,"column_start":1,"column_end":38}},{"value":"/ | Mebihertz         | MiHz      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7344,"byte_end":7381,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/ | Megahertz         | MHz       |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7382,"byte_end":7419,"line_start":193,"line_end":193,"column_start":1,"column_end":38}},{"value":"/ | Kibihertz         | KiHz      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7420,"byte_end":7457,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/ | Kilohertz         | kHz       |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7458,"byte_end":7495,"line_start":195,"line_end":195,"column_start":1,"column_end":38}},{"value":"/ | Hertz             | Hz        |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7496,"byte_end":7533,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7534,"byte_end":7537,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ## Data Rate","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7538,"byte_end":7554,"line_start":198,"line_end":198,"column_start":1,"column_end":17}},{"value":"/ | Units             | Extension |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7555,"byte_end":7592,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/ | :---------------- | :-------- |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7593,"byte_end":7630,"line_start":200,"line_end":200,"column_start":1,"column_end":38}},{"value":"/ | MebibytePerSecond | MiBps     |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7631,"byte_end":7668,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/ | MegabytePerSecond | MBps      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7669,"byte_end":7706,"line_start":202,"line_end":202,"column_start":1,"column_end":38}},{"value":"/ | KibibytePerSecond | KiBps     |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7707,"byte_end":7744,"line_start":203,"line_end":203,"column_start":1,"column_end":38}},{"value":"/ | KiloBytePerSecond | KBps      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7745,"byte_end":7782,"line_start":204,"line_end":204,"column_start":1,"column_end":38}},{"value":"/ | BytePerSecond     | Bps       |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7783,"byte_end":7820,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/ |                   |           |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7821,"byte_end":7858,"line_start":206,"line_end":206,"column_start":1,"column_end":38}},{"value":"/ | MebibitPerSecond  | Mibps     |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7859,"byte_end":7896,"line_start":207,"line_end":207,"column_start":1,"column_end":38}},{"value":"/ | MegabitPerSecond  | Mbps      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7897,"byte_end":7934,"line_start":208,"line_end":208,"column_start":1,"column_end":38}},{"value":"/ | KibibitPerSecond  | Kibps     |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7935,"byte_end":7972,"line_start":209,"line_end":209,"column_start":1,"column_end":38}},{"value":"/ | KilobitPerSecond  | kbps      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":7973,"byte_end":8010,"line_start":210,"line_end":210,"column_start":1,"column_end":38}},{"value":"/ | BitPerSecond      | bps       |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8011,"byte_end":8048,"line_start":211,"line_end":211,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8049,"byte_end":8052,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ## Symbol Rate","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8053,"byte_end":8071,"line_start":213,"line_end":213,"column_start":1,"column_end":19}},{"value":"/ | Units             | Extension |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8072,"byte_end":8109,"line_start":214,"line_end":214,"column_start":1,"column_end":38}},{"value":"/ | :---------------- | :-------- |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8110,"byte_end":8147,"line_start":215,"line_end":215,"column_start":1,"column_end":38}},{"value":"/ | Mebibaud          | MiBd      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8148,"byte_end":8185,"line_start":216,"line_end":216,"column_start":1,"column_end":38}},{"value":"/ | Megabaud          | MBd       |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8186,"byte_end":8223,"line_start":217,"line_end":217,"column_start":1,"column_end":38}},{"value":"/ | Kibibaud          | KiBd      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8224,"byte_end":8261,"line_start":218,"line_end":218,"column_start":1,"column_end":38}},{"value":"/ | Kilobaud          | kBd       |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8262,"byte_end":8299,"line_start":219,"line_end":219,"column_start":1,"column_end":38}},{"value":"/ | Baud              | Bd        |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8300,"byte_end":8337,"line_start":220,"line_end":220,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8338,"byte_end":8341,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ - Conversion from/to all other rate types within the same class (frequency, data rate, etc.) and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8342,"byte_end":8442,"line_start":222,"line_end":222,"column_start":1,"column_end":101}},{"value":"/   _base_ (mega, mebi, kilo, kibi). For example, MiBps (mebibytes per second) --> Kibps (kibibits","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8443,"byte_end":8543,"line_start":223,"line_end":223,"column_start":1,"column_end":101}},{"value":"/   per second) and MBps (megabytes per second) --> kbps (kilobits per second).","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8544,"byte_end":8625,"line_start":224,"line_end":224,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8626,"byte_end":8629,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ - Conversion from `Duration` types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8630,"byte_end":8668,"line_start":226,"line_end":226,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8669,"byte_end":8672,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8673,"byte_end":8684,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::{duration::*, rate::*};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8685,"byte_end":8731,"line_start":229,"line_end":229,"column_start":1,"column_end":47}},{"value":"/ # use core::convert::TryFrom;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8732,"byte_end":8765,"line_start":230,"line_end":230,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8766,"byte_end":8769,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # assert!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8770,"byte_end":8784,"line_start":232,"line_end":232,"column_start":1,"column_end":15}},{"value":"/ Kilohertz(500_u32).to_duration() == Ok(Microseconds(2_u32))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8785,"byte_end":8848,"line_start":233,"line_end":233,"column_start":1,"column_end":64}},{"value":"/ # );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8849,"byte_end":8857,"line_start":234,"line_end":234,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8858,"byte_end":8865,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8866,"byte_end":8869,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ - Conversion to/from `Generic` `Rate` type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8870,"byte_end":8916,"line_start":237,"line_end":237,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8917,"byte_end":8920,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8921,"byte_end":8932,"line_start":239,"line_end":239,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8933,"byte_end":8964,"line_start":240,"line_end":240,"column_start":1,"column_end":32}},{"value":"/ # use core::convert::TryFrom;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8965,"byte_end":8998,"line_start":241,"line_end":241,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":8999,"byte_end":9002,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ # assert!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9003,"byte_end":9017,"line_start":243,"line_end":243,"column_start":1,"column_end":15}},{"value":"/ Hertz(2_u64).to_generic(Fraction::new(1,2_000)) == Ok(Generic::new(4_000_u32, Fraction::new(1,2_000)))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9018,"byte_end":9124,"line_start":244,"line_end":244,"column_start":1,"column_end":107}},{"value":"/ # );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9125,"byte_end":9133,"line_start":245,"line_end":245,"column_start":1,"column_end":9}},{"value":"/ # assert!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9134,"byte_end":9148,"line_start":246,"line_end":246,"column_start":1,"column_end":15}},{"value":"/ Hertz::<u64>::try_from(Generic::new(2_000_u32, Fraction::new(1,1_000))) == Ok(Hertz(2_u64))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9149,"byte_end":9244,"line_start":247,"line_end":247,"column_start":1,"column_end":96}},{"value":"/ # );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9245,"byte_end":9253,"line_start":248,"line_end":248,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9254,"byte_end":9261,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9262,"byte_end":9265,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ # Hardware Abstraction","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9266,"byte_end":9292,"line_start":251,"line_end":251,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9293,"byte_end":9296,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ - `Clock` trait allowing abstraction of hardware timers/clocks for timekeeping.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9297,"byte_end":9380,"line_start":253,"line_end":253,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9381,"byte_end":9384,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ # Timers","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9385,"byte_end":9397,"line_start":255,"line_end":255,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9398,"byte_end":9401,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ - Software timers spawned from a `Clock` impl object.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9402,"byte_end":9459,"line_start":257,"line_end":257,"column_start":1,"column_end":58}},{"value":"/ - One-shot or periodic/continuous","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9460,"byte_end":9497,"line_start":258,"line_end":258,"column_start":1,"column_end":38}},{"value":"/ - Blocking delay","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9498,"byte_end":9518,"line_start":259,"line_end":259,"column_start":1,"column_end":21}},{"value":"/ - Poll for expiration","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9519,"byte_end":9544,"line_start":260,"line_end":260,"column_start":1,"column_end":26}},{"value":"/ - Read elapsed/remaining duration","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9545,"byte_end":9582,"line_start":261,"line_end":261,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9583,"byte_end":9586,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ # Reliability and Usability","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9587,"byte_end":9618,"line_start":263,"line_end":263,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9619,"byte_end":9622,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ - Extensive tests","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9623,"byte_end":9644,"line_start":265,"line_end":265,"column_start":1,"column_end":22}},{"value":"/ - Thorough documentation with examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9645,"byte_end":9687,"line_start":266,"line_end":266,"column_start":1,"column_end":43}},{"value":"/ - Example for the nRF52_DK board","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9688,"byte_end":9724,"line_start":267,"line_end":267,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9725,"byte_end":9728,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ # Notes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9729,"byte_end":9740,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9741,"byte_end":9744,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ Some parts of this crate were derived from various sources:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9745,"byte_end":9808,"line_start":271,"line_end":271,"column_start":1,"column_end":64}},{"value":"/ - [`RTIC`](https://github.com/rtic-rs/cortex-m-rtic)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9809,"byte_end":9865,"line_start":272,"line_end":272,"column_start":1,"column_end":57}},{"value":"/ - [`time`](https://docs.rs/time/latest/time) (Specifically the [`time::NumbericalDuration`](https://docs.rs/time/latest/time/trait.NumericalDuration.html)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":9866,"byte_end":10024,"line_start":273,"line_end":273,"column_start":1,"column_end":159}},{"value":"/   implementations for primitive integers)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10025,"byte_end":10070,"line_start":274,"line_end":274,"column_start":1,"column_end":46}},{"value":"deny(unsafe_code)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10135,"byte_end":10156,"line_start":276,"line_end":276,"column_start":1,"column_end":22}},{"value":"no_std","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10180,"byte_end":10186,"line_start":277,"line_end":277,"column_start":24,"column_end":30}},{"value":"warn(missing_docs)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10189,"byte_end":10211,"line_start":278,"line_end":278,"column_start":1,"column_end":23}},{"value":"deny(broken_intra_doc_links)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10212,"byte_end":10244,"line_start":279,"line_end":279,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"clock","qualname":"::clock","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":5237},{"krate":0,"index":396},{"krate":0,"index":410},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":401},{"krate":0,"index":14},{"krate":0,"index":16}],"decl_id":null,"docs":" Abstraction for hardware timers/clocks\n","sig":null,"attributes":[{"value":"/ Abstraction for hardware timers/clocks","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12268,"byte_end":12310,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":397},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12637,"byte_end":12648,"line_start":14,"line_end":14,"column_start":5,"column_end":16},"name":"Unspecified","qualname":"::clock::Error::Unspecified","value":"Error::Unspecified","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Exact cause of failure is unknown\n","sig":null,"attributes":[{"value":"/ Exact cause of failure is unknown","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12595,"byte_end":12632,"line_start":13,"line_end":13,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":399},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12708,"byte_end":12718,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"NotRunning","qualname":"::clock::Error::NotRunning","value":"Error::NotRunning","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" The clock has either stopped or never started\n","sig":null,"attributes":[{"value":"/ The clock has either stopped or never started","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12654,"byte_end":12703,"line_start":15,"line_end":15,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":396},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12583,"byte_end":12588,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Error","qualname":"::clock::Error","value":"pub enum Error {\n\n    /// Exact cause of failure is unknown\n    Unspecified,\n\n    /// The clock has either stopped or never started\n    NotRunning,\n}","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":399}],"decl_id":null,"docs":" Potential `Clock` errors\n","sig":null,"attributes":[{"value":"/ Potential `Clock` errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12489,"byte_end":12517,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12518,"byte_end":12535,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13397,"byte_end":13402,"line_start":35,"line_end":35,"column_start":11,"column_end":16},"name":"Clock","qualname":"::clock::Clock","value":"Clock: Sized","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"decl_id":null,"docs":" The `Clock` trait provides an abstraction for hardware-specific timer peripherals, external\n timer devices, RTCs, etc.","sig":null,"attributes":[{"value":"/ The `Clock` trait provides an abstraction for hardware-specific timer peripherals, external","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12810,"byte_end":12905,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ timer devices, RTCs, etc.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12906,"byte_end":12935,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12936,"byte_end":12939,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The `Clock` is characterized by an inner unsigned integer storage type (either [`u32`] or","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12940,"byte_end":13033,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/ [`u64`]), a [`u32`]/[`u32`] [`Fraction`] defining the duration (in seconds) of one","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13034,"byte_end":13120,"line_start":29,"line_end":29,"column_start":1,"column_end":87}},{"value":"/ count of the `Clock`, and a custom error type representing errors that may be generated by the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13121,"byte_end":13219,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"/ implementation.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13220,"byte_end":13239,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13240,"byte_end":13243,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In addition to the [`Clock::try_now()`] method which returns an [`Instant`],","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13244,"byte_end":13324,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ software [`Timer`]s can be spawned from a `Clock` object.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13325,"byte_end":13386,"line_start":34,"line_end":34,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13461,"byte_end":13462,"line_start":37,"line_end":37,"column_start":10,"column_end":11},"name":"T","qualname":"::clock::Clock::T","value":"type T: TimeInt + Hash;","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" The type to hold the tick count\n","sig":null,"attributes":[{"value":"/ The type to hold the tick count","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13416,"byte_end":13451,"line_start":36,"line_end":36,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":18},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13567,"byte_end":13581,"line_start":40,"line_end":40,"column_start":11,"column_end":25},"name":"SCALING_FACTOR","qualname":"::clock::Clock::SCALING_FACTOR","value":"Fraction","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" The duration of one clock tick in seconds, AKA the clock precision.\n","sig":null,"attributes":[{"value":"/ The duration of one clock tick in seconds, AKA the clock precision.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13485,"byte_end":13556,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13731,"byte_end":13738,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"try_now","qualname":"::clock::Clock::try_now","value":"pub fn try_now(&Self) -> Result<Instant<Self>, Error>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Get the current Instant","sig":null,"attributes":[{"value":"/ Get the current Instant","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13598,"byte_end":13625,"line_start":42,"line_end":42,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13630,"byte_end":13633,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13638,"byte_end":13650,"line_start":44,"line_end":44,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13655,"byte_end":13658,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ - [`Error::NotRunning`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13663,"byte_end":13690,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/ - [`Error::Unspecified`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13695,"byte_end":13723,"line_start":47,"line_end":47,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13844,"byte_end":13853,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"new_timer","qualname":"::clock::Clock::new_timer","value":"pub fn new_timer<Dur: Duration>(&Self, Dur)\n-> Timer<, param::OneShot, param::Armed, Self, Dur> where Dur: FixedPoint","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Spawn a new, `OneShot` [`Timer`] from this clock\n","sig":null,"attributes":[{"value":"/ Spawn a new, `OneShot` [`Timer`] from this clock","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13784,"byte_end":13836,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":22},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"duration","qualname":"::duration","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":5253},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":412},{"krate":0,"index":425},{"krate":0,"index":422},{"krate":0,"index":419},{"krate":0,"index":416},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":69},{"krate":0,"index":71}],"decl_id":null,"docs":" Duration types/units\n","sig":null,"attributes":[{"value":"/ Duration types/units","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14089,"byte_end":14113,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21761,"byte_end":21769,"line_start":293,"line_end":293,"column_start":11,"column_end":19},"name":"Duration","qualname":"::duration::Duration","value":"Duration: Sized + Copy","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":46}],"decl_id":null,"docs":" An unsigned, fixed-point duration type","sig":null,"attributes":[{"value":"/ An unsigned, fixed-point duration type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14480,"byte_end":14522,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14523,"byte_end":14526,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Each implementation defines an _integer_ type and a _scaling factor_ [`Fraction`].","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14527,"byte_end":14613,"line_start":24,"line_end":24,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14614,"byte_end":14617,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Constructing a duration","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14618,"byte_end":14647,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14648,"byte_end":14651,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14652,"byte_end":14663,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14664,"byte_end":14699,"line_start":29,"line_end":29,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14700,"byte_end":14703,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let millis = <Milliseconds>::new(5);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14704,"byte_end":14744,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ let millis = Milliseconds(5_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14745,"byte_end":14782,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ let millis = 5_u32.milliseconds();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14783,"byte_end":14821,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14822,"byte_end":14829,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14830,"byte_end":14833,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Get the integer part","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14834,"byte_end":14860,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14861,"byte_end":14864,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14865,"byte_end":14876,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14877,"byte_end":14912,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14913,"byte_end":14916,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let millis = Milliseconds(23_u32).integer();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14917,"byte_end":14965,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14966,"byte_end":14969,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(millis, 23_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":14970,"byte_end":15001,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15002,"byte_end":15009,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15010,"byte_end":15013,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Formatting","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15014,"byte_end":15030,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15031,"byte_end":15034,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Just forwards the underlying integer to [`core::fmt::Display::fmt()`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15035,"byte_end":15108,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15109,"byte_end":15112,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15113,"byte_end":15124,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15125,"byte_end":15160,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15161,"byte_end":15164,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(format!(\"{}\", Seconds(123_u32)), \"123\");","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15165,"byte_end":15220,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15221,"byte_end":15228,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15229,"byte_end":15232,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ # Getting H:M:S.MS... Components","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15233,"byte_end":15269,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15270,"byte_end":15273,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15274,"byte_end":15285,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15286,"byte_end":15321,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15322,"byte_end":15325,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // (the default duration _integer_ type is `u32`)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15326,"byte_end":15379,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ let duration = 38_238_479_u32.microseconds();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15380,"byte_end":15429,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ let hours: Hours = duration.into();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15430,"byte_end":15469,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ let minutes = <Minutes>::from(duration) % Hours(1_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15470,"byte_end":15529,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/ let seconds = <Seconds>::from(duration) % Minutes(1_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15530,"byte_end":15591,"line_start":65,"line_end":65,"column_start":1,"column_end":62}},{"value":"/ let milliseconds = <Milliseconds>::from(duration) % Seconds(1_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15592,"byte_end":15663,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/ // ...","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15664,"byte_end":15674,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15675,"byte_end":15682,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15683,"byte_end":15686,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Converting between `Duration`s","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15687,"byte_end":15723,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15724,"byte_end":15727,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Many intra-duration conversions can be done using `From`/`Into`:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15728,"byte_end":15796,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15797,"byte_end":15800,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15801,"byte_end":15812,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15813,"byte_end":15848,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15849,"byte_end":15852,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let seconds = Seconds::<u32>::from(23_000_u32.milliseconds());","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15853,"byte_end":15919,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(seconds.integer(), 23_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15920,"byte_end":15962,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15963,"byte_end":15966,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let seconds: Seconds<u32> = 23_000_u32.milliseconds().into();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":15967,"byte_end":16032,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(seconds.integer(), 23_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16033,"byte_end":16075,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16076,"byte_end":16083,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16084,"byte_end":16087,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Others require the use of `TryFrom`/`TryInto`:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16088,"byte_end":16138,"line_start":84,"line_end":84,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16139,"byte_end":16142,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16143,"byte_end":16154,"line_start":86,"line_end":86,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16155,"byte_end":16190,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ use std::convert::{TryInto, TryFrom};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16191,"byte_end":16232,"line_start":88,"line_end":88,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16233,"byte_end":16236,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ let millis = Milliseconds::<u32>::try_from(23_u32.seconds()).unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16237,"byte_end":16311,"line_start":90,"line_end":90,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(millis.integer(), 23_000_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16312,"byte_end":16357,"line_start":91,"line_end":91,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16358,"byte_end":16361,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ let millis: Milliseconds<u32> = 23_u32.seconds().try_into().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16362,"byte_end":16435,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(millis.integer(), 23_000_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16436,"byte_end":16481,"line_start":94,"line_end":94,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16482,"byte_end":16489,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16490,"byte_end":16493,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Converting to `core` types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16494,"byte_end":16526,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16527,"byte_end":16530,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ([`core::time::Duration`])","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16531,"byte_end":16561,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16562,"byte_end":16565,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ **Note**: Due to the inner types used by `core::time::Duration`, a lot of code bloat occurs when","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16566,"byte_end":16666,"line_start":101,"line_end":101,"column_start":1,"column_end":101}},{"value":"/ it is used.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16667,"byte_end":16682,"line_start":102,"line_end":102,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16683,"byte_end":16686,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16687,"byte_end":16702,"line_start":104,"line_end":104,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16703,"byte_end":16706,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16707,"byte_end":16718,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16719,"byte_end":16754,"line_start":107,"line_end":107,"column_start":1,"column_end":36}},{"value":"/ use core::convert::TryFrom;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16755,"byte_end":16786,"line_start":108,"line_end":108,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16787,"byte_end":16790,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let core_duration = core::time::Duration::try_from(2_569_u32.milliseconds()).unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16791,"byte_end":16881,"line_start":110,"line_end":110,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16882,"byte_end":16885,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(core_duration.as_secs(), 2);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16886,"byte_end":16929,"line_start":112,"line_end":112,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(core_duration.subsec_nanos(), 569_000_000);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16930,"byte_end":16988,"line_start":113,"line_end":113,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16989,"byte_end":16996,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":16997,"byte_end":17000,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17001,"byte_end":17012,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17013,"byte_end":17048,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ use core::convert::TryInto;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17049,"byte_end":17080,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17081,"byte_end":17084,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ let core_duration: core::time::Duration = 2_569_u32.milliseconds().try_into().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17085,"byte_end":17176,"line_start":120,"line_end":120,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17177,"byte_end":17180,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(core_duration.as_secs(), 2);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17181,"byte_end":17224,"line_start":122,"line_end":122,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(core_duration.subsec_nanos(), 569_000_000);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17225,"byte_end":17283,"line_start":123,"line_end":123,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17284,"byte_end":17291,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17292,"byte_end":17295,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ # Converting from `core` types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17296,"byte_end":17330,"line_start":126,"line_end":126,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17331,"byte_end":17334,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ([`core::time::Duration`])","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17335,"byte_end":17365,"line_start":128,"line_end":128,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17366,"byte_end":17369,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ **Note**: Due to the inner types used by `core::time::Duration`, a lot of code bloat occurs when","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17370,"byte_end":17470,"line_start":130,"line_end":130,"column_start":1,"column_end":101}},{"value":"/ it is used.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17471,"byte_end":17486,"line_start":131,"line_end":131,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17487,"byte_end":17490,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17491,"byte_end":17506,"line_start":133,"line_end":133,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17507,"byte_end":17510,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17511,"byte_end":17522,"line_start":135,"line_end":135,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17523,"byte_end":17558,"line_start":136,"line_end":136,"column_start":1,"column_end":36}},{"value":"/ use core::convert::TryFrom;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17559,"byte_end":17590,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17591,"byte_end":17594,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let core_duration = core::time::Duration::new(5, 730_023_852);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17595,"byte_end":17661,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17662,"byte_end":17665,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Milliseconds::<u32>::try_from(core_duration), Ok(5_730.milliseconds()));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17666,"byte_end":17753,"line_start":141,"line_end":141,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17754,"byte_end":17761,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17762,"byte_end":17765,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17766,"byte_end":17777,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17778,"byte_end":17813,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # use core::convert::TryInto;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17814,"byte_end":17847,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17848,"byte_end":17851,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let duration: Result<Milliseconds<u32>, _> = core::time::Duration::new(5, 730023852).try_into();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17852,"byte_end":17952,"line_start":148,"line_end":148,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17953,"byte_end":17956,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(duration, Ok(5_730.milliseconds()));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":17957,"byte_end":18008,"line_start":150,"line_end":150,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18009,"byte_end":18016,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18017,"byte_end":18020,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18021,"byte_end":18034,"line_start":153,"line_end":153,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18035,"byte_end":18038,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`ConversionError::ConversionFailure`] : The duration doesn't fit in the type specified","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18039,"byte_end":18130,"line_start":155,"line_end":155,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18131,"byte_end":18134,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18135,"byte_end":18146,"line_start":157,"line_end":157,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::{duration::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18147,"byte_end":18201,"line_start":158,"line_end":158,"column_start":1,"column_end":55}},{"value":"/ # use core::convert::{TryFrom, TryInto};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18202,"byte_end":18246,"line_start":159,"line_end":159,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18247,"byte_end":18250,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18251,"byte_end":18266,"line_start":161,"line_end":161,"column_start":1,"column_end":16}},{"value":"/     Milliseconds::<u32>::try_from(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18267,"byte_end":18305,"line_start":162,"line_end":162,"column_start":1,"column_end":39}},{"value":"/         core::time::Duration::from_millis((u32::MAX as u64) + 1)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18306,"byte_end":18374,"line_start":163,"line_end":163,"column_start":1,"column_end":69}},{"value":"/     ),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18375,"byte_end":18385,"line_start":164,"line_end":164,"column_start":1,"column_end":11}},{"value":"/     Err(ConversionError::ConversionFailure)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18386,"byte_end":18433,"line_start":165,"line_end":165,"column_start":1,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18434,"byte_end":18440,"line_start":166,"line_end":166,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18441,"byte_end":18444,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ let duration: Result<Milliseconds<u32>, _> =","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18445,"byte_end":18493,"line_start":168,"line_end":168,"column_start":1,"column_end":49}},{"value":"/     core::time::Duration::from_millis((u32::MAX as u64) + 1).try_into();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18494,"byte_end":18570,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(duration, Err(ConversionError::ConversionFailure));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18571,"byte_end":18637,"line_start":170,"line_end":170,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18638,"byte_end":18645,"line_start":171,"line_end":171,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18646,"byte_end":18649,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ # Converting from a [`Generic`] `Duration`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18650,"byte_end":18696,"line_start":173,"line_end":173,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18697,"byte_end":18700,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18701,"byte_end":18716,"line_start":175,"line_end":175,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18717,"byte_end":18720,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18721,"byte_end":18732,"line_start":177,"line_end":177,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18733,"byte_end":18768,"line_start":178,"line_end":178,"column_start":1,"column_end":36}},{"value":"/ # use core::convert::{TryFrom, TryInto};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18769,"byte_end":18813,"line_start":179,"line_end":179,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18814,"byte_end":18817,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ // A generic duration of 2 seconds","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18818,"byte_end":18856,"line_start":181,"line_end":181,"column_start":1,"column_end":39}},{"value":"/ let generic_duration = Generic::new(2_000_u32, Fraction::new(1, 1_000));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18857,"byte_end":18933,"line_start":182,"line_end":182,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18934,"byte_end":18937,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let secs = Seconds::<u64>::try_from(generic_duration).unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":18938,"byte_end":19005,"line_start":184,"line_end":184,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(secs.integer(), 2_u64);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19006,"byte_end":19044,"line_start":185,"line_end":185,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19045,"byte_end":19048,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ let secs: Seconds<u64> = generic_duration.try_into().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19049,"byte_end":19115,"line_start":187,"line_end":187,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(secs.integer(), 2_u64);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19116,"byte_end":19154,"line_start":188,"line_end":188,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19155,"byte_end":19162,"line_start":189,"line_end":189,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19163,"byte_end":19166,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19167,"byte_end":19180,"line_start":191,"line_end":191,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19181,"byte_end":19184,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ Failure will only occur if the provided value does not fit in the selected destination type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19185,"byte_end":19281,"line_start":193,"line_end":193,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19282,"byte_end":19285,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19286,"byte_end":19293,"line_start":195,"line_end":195,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19294,"byte_end":19297,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [`ConversionError::Unspecified`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19298,"byte_end":19334,"line_start":197,"line_end":197,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19335,"byte_end":19338,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19339,"byte_end":19350,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::{duration::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19351,"byte_end":19405,"line_start":200,"line_end":200,"column_start":1,"column_end":55}},{"value":"/ # use core::convert::TryFrom;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19406,"byte_end":19439,"line_start":201,"line_end":201,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19440,"byte_end":19443,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19444,"byte_end":19459,"line_start":203,"line_end":203,"column_start":1,"column_end":16}},{"value":"/     Seconds::<u32>::try_from(Generic::new(u32::MAX, Fraction::new(10,1))),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19460,"byte_end":19538,"line_start":204,"line_end":204,"column_start":1,"column_end":79}},{"value":"/     Err(ConversionError::Unspecified)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19539,"byte_end":19580,"line_start":205,"line_end":205,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19581,"byte_end":19587,"line_start":206,"line_end":206,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19588,"byte_end":19595,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19596,"byte_end":19599,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19600,"byte_end":19607,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19608,"byte_end":19611,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ [`ConversionError::ConversionFailure`] : The _integer_ conversion to that of the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19612,"byte_end":19696,"line_start":211,"line_end":211,"column_start":1,"column_end":85}},{"value":"/ destination type fails.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19697,"byte_end":19724,"line_start":212,"line_end":212,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19725,"byte_end":19728,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19729,"byte_end":19740,"line_start":214,"line_end":214,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::{duration::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19741,"byte_end":19795,"line_start":215,"line_end":215,"column_start":1,"column_end":55}},{"value":"/ # use core::convert::TryFrom;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19796,"byte_end":19829,"line_start":216,"line_end":216,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19830,"byte_end":19833,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19834,"byte_end":19849,"line_start":218,"line_end":218,"column_start":1,"column_end":16}},{"value":"/     Seconds::<u32>::try_from(Generic::new(u32::MAX as u64 + 1, Fraction::new(1,1))),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19850,"byte_end":19938,"line_start":219,"line_end":219,"column_start":1,"column_end":89}},{"value":"/     Err(ConversionError::ConversionFailure)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19939,"byte_end":19986,"line_start":220,"line_end":220,"column_start":1,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19987,"byte_end":19993,"line_start":221,"line_end":221,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":19994,"byte_end":20001,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20002,"byte_end":20005,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ # Converting to a [`Generic`] `Duration` with the same _scaling factor_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20006,"byte_end":20081,"line_start":224,"line_end":224,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20082,"byte_end":20085,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20086,"byte_end":20097,"line_start":226,"line_end":226,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20098,"byte_end":20133,"line_start":227,"line_end":227,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20134,"byte_end":20137,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let generic_duration = Generic::<u32>::from(5_u32.seconds());","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20138,"byte_end":20203,"line_start":229,"line_end":229,"column_start":1,"column_end":66}},{"value":"/ let generic_duration: Generic<u32> = 5_u32.seconds().into();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20204,"byte_end":20268,"line_start":230,"line_end":230,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20269,"byte_end":20272,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(generic_duration.integer(), 5_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20273,"byte_end":20323,"line_start":232,"line_end":232,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20324,"byte_end":20331,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20332,"byte_end":20335,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ # Converting to a [`Generic`] `Duration` with a different _scaling factor_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20336,"byte_end":20414,"line_start":235,"line_end":235,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20415,"byte_end":20418,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ See [`Duration::to_generic()`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20419,"byte_end":20453,"line_start":237,"line_end":237,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20454,"byte_end":20457,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ # Converting to a _named_ `Rate`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20458,"byte_end":20494,"line_start":239,"line_end":239,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20495,"byte_end":20498,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ See [`Duration::to_rate()`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20499,"byte_end":20530,"line_start":241,"line_end":241,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20531,"byte_end":20534,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ # Add/Sub","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20535,"byte_end":20548,"line_start":243,"line_end":243,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20549,"byte_end":20552,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ The result of the operation is the LHS type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20553,"byte_end":20600,"line_start":245,"line_end":245,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20601,"byte_end":20604,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20605,"byte_end":20620,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20621,"byte_end":20624,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20625,"byte_end":20636,"line_start":249,"line_end":249,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20637,"byte_end":20672,"line_start":250,"line_end":250,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20673,"byte_end":20676,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ assert_eq!((Milliseconds(1_u32) + Seconds(1_u32)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20677,"byte_end":20731,"line_start":252,"line_end":252,"column_start":1,"column_end":55}},{"value":"/     Milliseconds(1_001_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20732,"byte_end":20765,"line_start":253,"line_end":253,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20766,"byte_end":20769,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ assert_eq!((Milliseconds(2_001_u32) - Seconds(1_u32)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20770,"byte_end":20828,"line_start":255,"line_end":255,"column_start":1,"column_end":59}},{"value":"/     Milliseconds(1_001_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20829,"byte_end":20862,"line_start":256,"line_end":256,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20863,"byte_end":20870,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20871,"byte_end":20874,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ ## Panics","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20875,"byte_end":20888,"line_start":259,"line_end":259,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20889,"byte_end":20892,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ The same reason the integer operation would panic. Namely, if the result overflows the type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20893,"byte_end":20989,"line_start":261,"line_end":261,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20990,"byte_end":20993,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ```rust,should_panic","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":20994,"byte_end":21018,"line_start":263,"line_end":263,"column_start":1,"column_end":25}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21019,"byte_end":21054,"line_start":264,"line_end":264,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21055,"byte_end":21058,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ let _ = Seconds(u32::MAX) + Seconds(1_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21059,"byte_end":21106,"line_start":266,"line_end":266,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21107,"byte_end":21114,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21115,"byte_end":21118,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ # Mul/Div","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21119,"byte_end":21132,"line_start":269,"line_end":269,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21133,"byte_end":21136,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ Durations may also be multiplied and divided by integers. The result is of the LHS type. Both","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21137,"byte_end":21234,"line_start":271,"line_end":271,"column_start":1,"column_end":98}},{"value":"/ _panicky_ and _checked_ operations are available.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21235,"byte_end":21288,"line_start":272,"line_end":272,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21289,"byte_end":21292,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ # Comparisons","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21293,"byte_end":21310,"line_start":274,"line_end":274,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21311,"byte_end":21314,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21315,"byte_end":21326,"line_start":276,"line_end":276,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21327,"byte_end":21362,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21363,"byte_end":21366,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Seconds(2_u32), Milliseconds(2_000_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21367,"byte_end":21423,"line_start":279,"line_end":279,"column_start":1,"column_end":57}},{"value":"/ assert_ne!(Seconds(2_u32), Milliseconds(2_001_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21424,"byte_end":21480,"line_start":280,"line_end":280,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21481,"byte_end":21484,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ assert!(Seconds(2_u32) < Milliseconds(2_001_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21485,"byte_end":21539,"line_start":282,"line_end":282,"column_start":1,"column_end":55}},{"value":"/ assert!(Seconds(2_u32) > Milliseconds(1_999_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21540,"byte_end":21594,"line_start":283,"line_end":283,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21595,"byte_end":21602,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21603,"byte_end":21606,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ # Remainder","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21607,"byte_end":21622,"line_start":286,"line_end":286,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21623,"byte_end":21626,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21627,"byte_end":21638,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21639,"byte_end":21674,"line_start":289,"line_end":289,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21675,"byte_end":21678,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Minutes(62_u32) % Hours(1_u32), Minutes(2_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21679,"byte_end":21742,"line_start":291,"line_end":291,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21743,"byte_end":21750,"line_start":292,"line_end":292,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23112,"byte_end":23122,"line_start":338,"line_end":338,"column_start":8,"column_end":18},"name":"to_generic","qualname":"::duration::Duration::to_generic","value":"pub fn to_generic<DestInt: TimeInt>(Self, Fraction)\n-> Result<Generic<DestInt>, ConversionError> where Self: FixedPoint,\nDestInt: TryFrom<Self::T>","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Construct a `Generic` `Duration` from a _named_ `Duration` (eg.\n [`Milliseconds`])","sig":null,"attributes":[{"value":"/ Construct a `Generic` `Duration` from a _named_ `Duration` (eg.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21790,"byte_end":21857,"line_start":294,"line_end":294,"column_start":5,"column_end":72}},{"value":"/ [`Milliseconds`])","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21862,"byte_end":21883,"line_start":295,"line_end":295,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21888,"byte_end":21891,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21896,"byte_end":21910,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21915,"byte_end":21918,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21923,"byte_end":21934,"line_start":299,"line_end":299,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21939,"byte_end":21974,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21979,"byte_end":21982,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let millis = Milliseconds(20_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21987,"byte_end":22025,"line_start":302,"line_end":302,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22030,"byte_end":22033,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ // convert into a generic duration with a different _scaling factor_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22038,"byte_end":22110,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ let generic = millis.to_generic::<u32>(Fraction::new(1, 2_000)).unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22115,"byte_end":22192,"line_start":305,"line_end":305,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22197,"byte_end":22200,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(generic.integer(), 40_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22205,"byte_end":22247,"line_start":307,"line_end":307,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22252,"byte_end":22259,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22264,"byte_end":22267,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22272,"byte_end":22284,"line_start":310,"line_end":310,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22289,"byte_end":22292,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Failure will only occur if the provided value does not fit in the selected destination type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22297,"byte_end":22393,"line_start":312,"line_end":312,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22398,"byte_end":22401,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22406,"byte_end":22413,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22418,"byte_end":22421,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::Unspecified`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22426,"byte_end":22462,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22467,"byte_end":22470,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22475,"byte_end":22486,"line_start":318,"line_end":318,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::{duration::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22491,"byte_end":22545,"line_start":319,"line_end":319,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22550,"byte_end":22553,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22558,"byte_end":22573,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/     Seconds(u32::MAX).to_generic::<u32>(Fraction::new(1, 2)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22578,"byte_end":22643,"line_start":322,"line_end":322,"column_start":5,"column_end":70}},{"value":"/     Err(ConversionError::Unspecified)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22648,"byte_end":22689,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22694,"byte_end":22700,"line_start":324,"line_end":324,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22705,"byte_end":22712,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22717,"byte_end":22720,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22725,"byte_end":22732,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22737,"byte_end":22740,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::ConversionFailure`] : The integer conversion to that of the destination","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22745,"byte_end":22839,"line_start":329,"line_end":329,"column_start":5,"column_end":99}},{"value":"/ type fails.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22844,"byte_end":22859,"line_start":330,"line_end":330,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22864,"byte_end":22867,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22872,"byte_end":22883,"line_start":332,"line_end":332,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::{duration::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22888,"byte_end":22942,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22947,"byte_end":22950,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Seconds(u32::MAX as u64 + 1).to_generic::<u32>(Fraction::new(1, 1)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":22955,"byte_end":23038,"line_start":335,"line_end":335,"column_start":5,"column_end":88}},{"value":"/     Err(ConversionError::ConversionFailure));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23043,"byte_end":23092,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23097,"byte_end":23104,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24670,"byte_end":24677,"line_start":396,"line_end":396,"column_start":8,"column_end":15},"name":"to_rate","qualname":"::duration::Duration::to_rate","value":"pub fn to_rate<Rate: rate::Rate>(&Self) -> Result<Rate, ConversionError> where\nRate: FixedPoint, Self: FixedPoint, Rate::T: TryFrom<Self::T>","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" Convert to _named_ [`Rate`](rate::Rate)","sig":null,"attributes":[{"value":"/ Convert to _named_ [`Rate`](rate::Rate)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23450,"byte_end":23493,"line_start":352,"line_end":352,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23498,"byte_end":23501,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ (the duration is equal to the reciprocal of the rate)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23506,"byte_end":23563,"line_start":354,"line_end":354,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23568,"byte_end":23571,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23576,"byte_end":23590,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23595,"byte_end":23598,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23603,"byte_end":23614,"line_start":358,"line_end":358,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::{duration::*, rate::*};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23619,"byte_end":23665,"line_start":359,"line_end":359,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23670,"byte_end":23673,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23678,"byte_end":23693,"line_start":361,"line_end":361,"column_start":5,"column_end":20}},{"value":"/     Microseconds(500_u32).to_rate(),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23698,"byte_end":23738,"line_start":362,"line_end":362,"column_start":5,"column_end":45}},{"value":"/     Ok(Kilohertz(2_u32))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23743,"byte_end":23771,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23776,"byte_end":23782,"line_start":364,"line_end":364,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23787,"byte_end":23794,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23799,"byte_end":23802,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23807,"byte_end":23819,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23824,"byte_end":23827,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ Failure will only occur if the provided value does not fit in the selected destination type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23832,"byte_end":23928,"line_start":369,"line_end":369,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23933,"byte_end":23936,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23941,"byte_end":23948,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23953,"byte_end":23956,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::Overflow`] : The conversion of the _scaling factor_ causes an overflow.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":23961,"byte_end":24055,"line_start":373,"line_end":373,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24060,"byte_end":24063,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24068,"byte_end":24079,"line_start":375,"line_end":375,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::{duration::*, rate::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24084,"byte_end":24147,"line_start":376,"line_end":376,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24152,"byte_end":24155,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24160,"byte_end":24175,"line_start":378,"line_end":378,"column_start":5,"column_end":20}},{"value":"/     Hours(u32::MAX).to_rate::<Megahertz<u32>>(),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24180,"byte_end":24232,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/     Err(ConversionError::Overflow)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24237,"byte_end":24275,"line_start":380,"line_end":380,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24280,"byte_end":24286,"line_start":381,"line_end":381,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24291,"byte_end":24298,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24303,"byte_end":24306,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24311,"byte_end":24318,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24323,"byte_end":24326,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::DivByZero`] : The rate is `0`, therefore the reciprocal is undefined.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24331,"byte_end":24423,"line_start":386,"line_end":386,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24428,"byte_end":24431,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24436,"byte_end":24447,"line_start":388,"line_end":388,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::{duration::*, rate::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24452,"byte_end":24515,"line_start":389,"line_end":389,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24520,"byte_end":24523,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24528,"byte_end":24543,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"/     Seconds(0_u32).to_rate::<Hertz<u32>>(),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24548,"byte_end":24595,"line_start":392,"line_end":392,"column_start":5,"column_end":52}},{"value":"/     Err(ConversionError::DivByZero)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24600,"byte_end":24639,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24644,"byte_end":24650,"line_start":394,"line_end":394,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":24655,"byte_end":24662,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":26524,"byte_end":26531,"line_start":441,"line_end":441,"column_start":12,"column_end":19},"name":"Generic","qualname":"::duration::Generic","value":"Generic {  }","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"decl_id":null,"docs":" The `Generic` `Duration` type allows an arbitrary _scaling factor_ to be used without having to\n impl `FixedPoint`.","sig":null,"attributes":[{"value":"/ The `Generic` `Duration` type allows an arbitrary _scaling factor_ to be used without having to","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":26166,"byte_end":26265,"line_start":435,"line_end":435,"column_start":1,"column_end":100}},{"value":"/ impl `FixedPoint`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":26266,"byte_end":26288,"line_start":436,"line_end":436,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":26289,"byte_end":26292,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ The purpose of this type is to allow a simple `Duration` object that can be defined at run-time.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":26293,"byte_end":26393,"line_start":438,"line_end":438,"column_start":1,"column_end":101}},{"value":"/ It does this by replacing the `const` _scaling factor_ with a struct field.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":26394,"byte_end":26473,"line_start":439,"line_end":439,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27809,"byte_end":27812,"line_start":486,"line_end":486,"column_start":12,"column_end":15},"name":"new","qualname":"<Generic<T>>::new","value":"pub fn new(T, Fraction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new fixed-point `Generic` `Duration` value\n","sig":null,"attributes":[{"value":"/ Constructs a new fixed-point `Generic` `Duration` value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27738,"byte_end":27797,"line_start":485,"line_end":485,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27988,"byte_end":27995,"line_start":494,"line_end":494,"column_start":12,"column_end":19},"name":"integer","qualname":"<Generic<T>>::integer","value":"pub fn integer(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the _integer_ part\n","sig":null,"attributes":[{"value":"/ Returns the _integer_ part","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27946,"byte_end":27976,"line_start":493,"line_end":493,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28104,"byte_end":28118,"line_start":499,"line_end":499,"column_start":12,"column_end":26},"name":"scaling_factor","qualname":"<Generic<T>>::scaling_factor","value":"pub fn scaling_factor(&Self) -> &Fraction","parent":null,"children":[],"decl_id":null,"docs":" Returns the _scaling factor_ [`Fraction`] part\n","sig":null,"attributes":[{"value":"/ Returns the _scaling factor_ [`Fraction`] part","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28042,"byte_end":28092,"line_start":498,"line_end":498,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":71},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28266,"byte_end":28271,"line_start":508,"line_end":508,"column_start":9,"column_end":14},"name":"units","qualname":"::duration::units","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":485},{"krate":0,"index":510},{"krate":0,"index":507},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":499},{"krate":0,"index":495},{"krate":0,"index":492},{"krate":0,"index":489},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":454},{"krate":0,"index":459},{"krate":0,"index":464},{"krate":0,"index":468},{"krate":0,"index":472},{"krate":0,"index":477},{"krate":0,"index":482},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":570},{"krate":0,"index":595},{"krate":0,"index":592},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":584},{"krate":0,"index":580},{"krate":0,"index":577},{"krate":0,"index":574},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":539},{"krate":0,"index":544},{"krate":0,"index":549},{"krate":0,"index":553},{"krate":0,"index":557},{"krate":0,"index":562},{"krate":0,"index":567},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":655},{"krate":0,"index":680},{"krate":0,"index":677},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":669},{"krate":0,"index":665},{"krate":0,"index":662},{"krate":0,"index":659},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":624},{"krate":0,"index":629},{"krate":0,"index":634},{"krate":0,"index":638},{"krate":0,"index":642},{"krate":0,"index":647},{"krate":0,"index":652},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":741},{"krate":0,"index":766},{"krate":0,"index":763},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":755},{"krate":0,"index":751},{"krate":0,"index":748},{"krate":0,"index":745},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":710},{"krate":0,"index":715},{"krate":0,"index":720},{"krate":0,"index":724},{"krate":0,"index":728},{"krate":0,"index":733},{"krate":0,"index":738},{"krate":0,"index":682},{"krate":0,"index":686},{"krate":0,"index":827},{"krate":0,"index":852},{"krate":0,"index":849},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":841},{"krate":0,"index":837},{"krate":0,"index":834},{"krate":0,"index":831},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":796},{"krate":0,"index":801},{"krate":0,"index":806},{"krate":0,"index":810},{"krate":0,"index":814},{"krate":0,"index":819},{"krate":0,"index":824},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":913},{"krate":0,"index":938},{"krate":0,"index":935},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":927},{"krate":0,"index":923},{"krate":0,"index":920},{"krate":0,"index":917},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":882},{"krate":0,"index":887},{"krate":0,"index":892},{"krate":0,"index":896},{"krate":0,"index":900},{"krate":0,"index":905},{"krate":0,"index":910},{"krate":0,"index":854},{"krate":0,"index":858},{"krate":0,"index":940},{"krate":0,"index":944},{"krate":0,"index":948},{"krate":0,"index":952},{"krate":0,"index":956},{"krate":0,"index":960},{"krate":0,"index":964},{"krate":0,"index":968},{"krate":0,"index":972},{"krate":0,"index":976},{"krate":0,"index":980},{"krate":0,"index":984},{"krate":0,"index":988},{"krate":0,"index":992},{"krate":0,"index":996},{"krate":0,"index":1000},{"krate":0,"index":1004},{"krate":0,"index":1008},{"krate":0,"index":1012},{"krate":0,"index":1016},{"krate":0,"index":1020},{"krate":0,"index":1024},{"krate":0,"index":1028},{"krate":0,"index":1032},{"krate":0,"index":1036},{"krate":0,"index":1040},{"krate":0,"index":1044},{"krate":0,"index":1048},{"krate":0,"index":1052},{"krate":0,"index":1056},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1068},{"krate":0,"index":1072},{"krate":0,"index":1076},{"krate":0,"index":1080},{"krate":0,"index":1084},{"krate":0,"index":1088},{"krate":0,"index":1092},{"krate":0,"index":1096},{"krate":0,"index":1100},{"krate":0,"index":1104},{"krate":0,"index":1108},{"krate":0,"index":1112},{"krate":0,"index":1116},{"krate":0,"index":1120},{"krate":0,"index":1124},{"krate":0,"index":1128},{"krate":0,"index":1132},{"krate":0,"index":1136},{"krate":0,"index":1140},{"krate":0,"index":1144},{"krate":0,"index":1148},{"krate":0,"index":1152},{"krate":0,"index":1156},{"krate":0,"index":1160},{"krate":0,"index":1164},{"krate":0,"index":1168},{"krate":0,"index":1172},{"krate":0,"index":1176},{"krate":0,"index":1180},{"krate":0,"index":1184},{"krate":0,"index":1188},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1200},{"krate":0,"index":1204},{"krate":0,"index":1208},{"krate":0,"index":1212},{"krate":0,"index":1216},{"krate":0,"index":1220},{"krate":0,"index":1224},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1274},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1416},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1425},{"krate":0,"index":1429},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1510},{"krate":0,"index":100},{"krate":0,"index":107}],"decl_id":null,"docs":" Duration units\n","sig":null,"attributes":[{"value":"/ Duration units","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28224,"byte_end":28242,"line_start":506,"line_end":506,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":36518,"byte_end":36523,"line_start":732,"line_end":732,"column_start":20,"column_end":25},"name":"Hours","qualname":"::duration::units::Hours","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration unit type\n","sig":null,"attributes":[{"value":"/ A duration unit type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28706,"byte_end":28730,"line_start":527,"line_end":527,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":570},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":36565,"byte_end":36572,"line_start":733,"line_end":733,"column_start":20,"column_end":27},"name":"Minutes","qualname":"::duration::units::Minutes","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration unit type\n","sig":null,"attributes":[{"value":"/ A duration unit type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28706,"byte_end":28730,"line_start":527,"line_end":527,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":655},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":36612,"byte_end":36619,"line_start":734,"line_end":734,"column_start":20,"column_end":27},"name":"Seconds","qualname":"::duration::units::Seconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration unit type\n","sig":null,"attributes":[{"value":"/ A duration unit type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28706,"byte_end":28730,"line_start":527,"line_end":527,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":36658,"byte_end":36670,"line_start":735,"line_end":735,"column_start":20,"column_end":32},"name":"Milliseconds","qualname":"::duration::units::Milliseconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration unit type\n","sig":null,"attributes":[{"value":"/ A duration unit type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28706,"byte_end":28730,"line_start":527,"line_end":527,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":827},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":36728,"byte_end":36740,"line_start":736,"line_end":736,"column_start":20,"column_end":32},"name":"Microseconds","qualname":"::duration::units::Microseconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration unit type\n","sig":null,"attributes":[{"value":"/ A duration unit type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28706,"byte_end":28730,"line_start":527,"line_end":527,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":913},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":36802,"byte_end":36813,"line_start":737,"line_end":737,"column_start":20,"column_end":31},"name":"Nanoseconds","qualname":"::duration::units::Nanoseconds","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration unit type\n","sig":null,"attributes":[{"value":"/ A duration unit type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28706,"byte_end":28730,"line_start":527,"line_end":527,"column_start":13,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47905,"byte_end":47915,"line_start":1061,"line_end":1061,"column_start":15,"column_end":25},"name":"Extensions","qualname":"::duration::units::Extensions","value":"Extensions: TimeInt","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" Create duration-based extensions from primitive numeric types.","sig":null,"attributes":[{"value":"/ Create duration-based extensions from primitive numeric types.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47422,"byte_end":47488,"line_start":1049,"line_end":1049,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47493,"byte_end":47496,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47501,"byte_end":47512,"line_start":1051,"line_end":1051,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::duration::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47517,"byte_end":47552,"line_start":1052,"line_end":1052,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47557,"byte_end":47560,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(5.nanoseconds(), Nanoseconds(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47565,"byte_end":47617,"line_start":1054,"line_end":1054,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(5.microseconds(), Microseconds(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47622,"byte_end":47676,"line_start":1055,"line_end":1055,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(5.milliseconds(), Milliseconds(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47681,"byte_end":47735,"line_start":1056,"line_end":1056,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(5.seconds(), Seconds(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47740,"byte_end":47784,"line_start":1057,"line_end":1057,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(5.minutes(), Minutes(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47789,"byte_end":47833,"line_start":1058,"line_end":1058,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(5.hours(), Hours(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47838,"byte_end":47878,"line_start":1059,"line_end":1059,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47883,"byte_end":47890,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47962,"byte_end":47973,"line_start":1063,"line_end":1063,"column_start":12,"column_end":23},"name":"nanoseconds","qualname":"::duration::units::Extensions::nanoseconds","value":"pub fn nanoseconds(Self) -> Nanoseconds<Self>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" nanoseconds\n","sig":null,"attributes":[{"value":"/ nanoseconds","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47935,"byte_end":47950,"line_start":1062,"line_end":1062,"column_start":9,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48084,"byte_end":48096,"line_start":1067,"line_end":1067,"column_start":12,"column_end":24},"name":"microseconds","qualname":"::duration::units::Extensions::microseconds","value":"pub fn microseconds(Self) -> Microseconds<Self>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" microseconds\n","sig":null,"attributes":[{"value":"/ microseconds","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48056,"byte_end":48072,"line_start":1066,"line_end":1066,"column_start":9,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48209,"byte_end":48221,"line_start":1071,"line_end":1071,"column_start":12,"column_end":24},"name":"milliseconds","qualname":"::duration::units::Extensions::milliseconds","value":"pub fn milliseconds(Self) -> Milliseconds<Self>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" milliseconds\n","sig":null,"attributes":[{"value":"/ milliseconds","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48181,"byte_end":48197,"line_start":1070,"line_end":1070,"column_start":9,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48329,"byte_end":48336,"line_start":1075,"line_end":1075,"column_start":12,"column_end":19},"name":"seconds","qualname":"::duration::units::Extensions::seconds","value":"pub fn seconds(Self) -> Seconds<Self>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" seconds\n","sig":null,"attributes":[{"value":"/ seconds","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48306,"byte_end":48317,"line_start":1074,"line_end":1074,"column_start":9,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48434,"byte_end":48441,"line_start":1079,"line_end":1079,"column_start":12,"column_end":19},"name":"minutes","qualname":"::duration::units::Extensions::minutes","value":"pub fn minutes(Self) -> Minutes<Self>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" minutes\n","sig":null,"attributes":[{"value":"/ minutes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48411,"byte_end":48422,"line_start":1078,"line_end":1078,"column_start":9,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48537,"byte_end":48542,"line_start":1083,"line_end":1083,"column_start":12,"column_end":17},"name":"hours","qualname":"::duration::units::Extensions::hours","value":"pub fn hours(Self) -> Hours<Self>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" hours\n","sig":null,"attributes":[{"value":"/ hours","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":48516,"byte_end":48525,"line_start":1082,"line_end":1082,"column_start":9,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":108},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fixed_point","qualname":"::fixed_point","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":" Fixed-point values\n","sig":null,"attributes":[{"value":"/ Fixed-point values","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":48692,"byte_end":48714,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":121},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":48966,"byte_end":48976,"line_start":9,"line_end":9,"column_start":11,"column_end":21},"name":"FixedPoint","qualname":"::fixed_point::FixedPoint","value":"FixedPoint: Sized + Copy","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" Fixed-point value type","sig":null,"attributes":[{"value":"/ Fixed-point value type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":48889,"byte_end":48915,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":48916,"byte_end":48919,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ QX.32 where X: bit-width of `T`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":48920,"byte_end":48955,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":122},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49041,"byte_end":49042,"line_start":11,"line_end":11,"column_start":10,"column_end":11},"name":"T","qualname":"::fixed_point::FixedPoint::T","value":"type T: TimeInt;","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" The _integer_ (magnitude) type\n","sig":null,"attributes":[{"value":"/ The _integer_ (magnitude) type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":48997,"byte_end":49031,"line_start":10,"line_end":10,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":123},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49104,"byte_end":49118,"line_start":14,"line_end":14,"column_start":11,"column_end":25},"name":"SCALING_FACTOR","qualname":"::fixed_point::FixedPoint::SCALING_FACTOR","value":"Fraction","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" The fractional _scaling factor_\n","sig":null,"attributes":[{"value":"/ The fractional _scaling factor_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49058,"byte_end":49093,"line_start":13,"line_end":13,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49328,"byte_end":49331,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"new","qualname":"::fixed_point::FixedPoint::new","value":"pub fn new(Self::T) -> Self","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Not generally useful to call directly","sig":null,"attributes":[{"value":"/ Not generally useful to call directly","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49135,"byte_end":49176,"line_start":16,"line_end":16,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49181,"byte_end":49184,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ It only exists to allow FixedPoint methods with default definitions to create a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49189,"byte_end":49272,"line_start":18,"line_end":18,"column_start":5,"column_end":88}},{"value":"/ new fixed-point type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49277,"byte_end":49301,"line_start":19,"line_end":19,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49564,"byte_end":49571,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"integer","qualname":"::fixed_point::FixedPoint::integer","value":"pub fn integer(&Self) -> Self::T","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Returns the integer part of the `FixedPoint` value","sig":null,"attributes":[{"value":"/ Returns the integer part of the `FixedPoint` value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49362,"byte_end":49416,"line_start":23,"line_end":23,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49421,"byte_end":49424,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49429,"byte_end":49440,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{ rate::*};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49445,"byte_end":49481,"line_start":26,"line_end":26,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49486,"byte_end":49491,"line_start":27,"line_end":27,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(Hertz(45_u32).integer(), 45_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49496,"byte_end":49544,"line_start":28,"line_end":28,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49549,"byte_end":49556,"line_start":29,"line_end":29,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49989,"byte_end":49999,"line_start":42,"line_end":42,"column_start":8,"column_end":18},"name":"from_ticks","qualname":"::fixed_point::FixedPoint::from_ticks","value":"pub fn from_ticks<SourceInt: TimeInt>(SourceInt, Fraction)\n-> Result<Self, ConversionError> where Self::T: TryFrom<SourceInt>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Constructs a `FixedPoint` value from _integer_ and _scaling-factor_ ([`Fraction`]) parts","sig":null,"attributes":[{"value":"/ Constructs a `FixedPoint` value from _integer_ and _scaling-factor_ ([`Fraction`]) parts","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49596,"byte_end":49688,"line_start":32,"line_end":32,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49693,"byte_end":49696,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49701,"byte_end":49713,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49718,"byte_end":49721,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Failure will only occur if the provided value does not fit in the selected destination type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49726,"byte_end":49822,"line_start":36,"line_end":36,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49827,"byte_end":49830,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ - [`ConversionError::Unspecified`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49835,"byte_end":49873,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ - [`ConversionError::Overflow`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49878,"byte_end":49913,"line_start":39,"line_end":39,"column_start":5,"column_end":40}},{"value":"/ - [`ConversionError::ConversionFailure`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":49918,"byte_end":49962,"line_start":40,"line_end":40,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":50921,"byte_end":50934,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"convert_ticks","qualname":"::fixed_point::FixedPoint::convert_ticks","value":"pub fn convert_ticks<T: TimeInt>(T, Fraction) -> Option<T>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":52292,"byte_end":52302,"line_start":101,"line_end":101,"column_start":8,"column_end":18},"name":"into_ticks","qualname":"::fixed_point::FixedPoint::into_ticks","value":"pub fn into_ticks<T: TimeInt>(Self, Fraction) -> Result<T, ConversionError>\nwhere Self::T: TimeInt, T: TryFrom<Self::T>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Returns the _integer_ of the fixed-point value after converting to the _scaling factor_\n provided","sig":null,"attributes":[{"value":"/ Returns the _integer_ of the fixed-point value after converting to the _scaling factor_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51582,"byte_end":51673,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ provided","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51678,"byte_end":51690,"line_start":83,"line_end":83,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51695,"byte_end":51698,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51703,"byte_end":51717,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51722,"byte_end":51725,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51730,"byte_end":51741,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{fraction::Fraction,  rate::*};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51746,"byte_end":51802,"line_start":88,"line_end":88,"column_start":5,"column_end":61}},{"value":"/ #","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51807,"byte_end":51812,"line_start":89,"line_end":89,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(Hertz(2_u32).into_ticks(Fraction::new(1, 1_000)), Ok(2_000_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51817,"byte_end":51897,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51902,"byte_end":51909,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51914,"byte_end":51917,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51922,"byte_end":51934,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51939,"byte_end":51942,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Failure will only occur if the provided value does not fit in the selected destination type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":51947,"byte_end":52043,"line_start":95,"line_end":95,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":52048,"byte_end":52051,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::Overflow`] : The conversion of the _scaling factor_ causes an overflow.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":52056,"byte_end":52150,"line_start":97,"line_end":97,"column_start":5,"column_end":99}},{"value":"/ [`ConversionError::ConversionFailure`] : The _integer_ type cast to that of the destination","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":52155,"byte_end":52250,"line_start":98,"line_end":98,"column_start":5,"column_end":100}},{"value":"/ fails.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":52255,"byte_end":52265,"line_start":99,"line_end":99,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":54174,"byte_end":54177,"line_start":150,"line_end":150,"column_start":8,"column_end":11},"name":"add","qualname":"::fixed_point::FixedPoint::add","value":"pub fn add<Rhs: FixedPoint>(Self, Rhs) -> Self where Self: TryFrom<Rhs>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Panicky addition\n","sig":null,"attributes":[{"value":"/ Panicky addition","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":54127,"byte_end":54147,"line_start":148,"line_end":148,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":54500,"byte_end":54503,"line_start":164,"line_end":164,"column_start":8,"column_end":11},"name":"sub","qualname":"::fixed_point::FixedPoint::sub","value":"pub fn sub<Rhs: FixedPoint>(Self, Rhs) -> Self where Self: TryFrom<Rhs>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Panicky subtraction\n","sig":null,"attributes":[{"value":"/ Panicky subtraction","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":54450,"byte_end":54473,"line_start":162,"line_end":162,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":54830,"byte_end":54833,"line_start":179,"line_end":179,"column_start":8,"column_end":11},"name":"mul","qualname":"::fixed_point::FixedPoint::mul","value":"pub fn mul(Self, Self::T) -> Self","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Panicky multiplication\n","sig":null,"attributes":[{"value":"/ Panicky multiplication","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":54777,"byte_end":54803,"line_start":177,"line_end":177,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":54958,"byte_end":54969,"line_start":184,"line_end":184,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::fixed_point::FixedPoint::checked_mul","value":"pub fn checked_mul(&Self, &Self::T) -> Option<Self>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Multiply with overflow checking\n","sig":null,"attributes":[{"value":"/ Multiply with overflow checking","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":54915,"byte_end":54950,"line_start":183,"line_end":183,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":55128,"byte_end":55131,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"div","qualname":"::fixed_point::FixedPoint::div","value":"pub fn div(Self, Self::T) -> Self","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Panicky division\n","sig":null,"attributes":[{"value":"/ Panicky division","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":55081,"byte_end":55101,"line_start":188,"line_end":188,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":55256,"byte_end":55267,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::fixed_point::FixedPoint::checked_div","value":"pub fn checked_div(&Self, &Self::T) -> Option<Self>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Multiply with overflow checking\n","sig":null,"attributes":[{"value":"/ Multiply with overflow checking","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":55213,"byte_end":55248,"line_start":194,"line_end":194,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":55427,"byte_end":55430,"line_start":201,"line_end":201,"column_start":8,"column_end":11},"name":"rem","qualname":"::fixed_point::FixedPoint::rem","value":"pub fn rem<Rhs: FixedPoint>(Self, Rhs) -> Self where Self: TryFrom<Rhs>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Panicky remainder\n","sig":null,"attributes":[{"value":"/ Panicky remainder","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":55379,"byte_end":55400,"line_start":199,"line_end":199,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":55892,"byte_end":55901,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"min_value","qualname":"::fixed_point::FixedPoint::min_value","value":"pub fn min_value() -> Self::T","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Returns the minimum integer value\n","sig":null,"attributes":[{"value":"/ Returns the minimum integer value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":55847,"byte_end":55884,"line_start":217,"line_end":217,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":56002,"byte_end":56011,"line_start":223,"line_end":223,"column_start":8,"column_end":17},"name":"max_value","qualname":"::fixed_point::FixedPoint::max_value","value":"pub fn max_value() -> Self::T","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Returns the maximum integer value\n","sig":null,"attributes":[{"value":"/ Returns the maximum integer value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":55957,"byte_end":55994,"line_start":222,"line_end":222,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":148},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fraction","qualname":"::fraction","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":1513},{"krate":0,"index":1538},{"krate":0,"index":1536},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1527},{"krate":0,"index":1521},{"krate":0,"index":1518},{"krate":0,"index":1516},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185}],"decl_id":null,"docs":" Fractional/Rational values\n","sig":null,"attributes":[{"value":"/ Fractional/Rational values","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56511,"byte_end":56541,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57049,"byte_end":57057,"line_start":16,"line_end":16,"column_start":12,"column_end":20},"name":"Fraction","qualname":"::fraction::Fraction","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fractional value","sig":null,"attributes":[{"value":"/ A fractional value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56644,"byte_end":56666,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56667,"byte_end":56670,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Used primarily to define the _scaling factor_ for the [`Duration`], [`Rate`], [`Instant`] and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56671,"byte_end":56768,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ [`Clock`] traits and types.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56769,"byte_end":56800,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56801,"byte_end":56804,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Duration`]: duration/trait.Duration.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56805,"byte_end":56851,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/ [`Rate`]: rate/trait.Rate.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56852,"byte_end":56886,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ [`Clock`]: clock/trait.Clock.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56887,"byte_end":56924,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/ [`Instant`]: instant/struct.Instant.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":56925,"byte_end":56969,"line_start":14,"line_end":14,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57309,"byte_end":57312,"line_start":23,"line_end":23,"column_start":18,"column_end":21},"name":"new","qualname":"<Fraction>::new","value":"pub const fn new(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Fraction`.","sig":null,"attributes":[{"value":"/ Construct a new `Fraction`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57092,"byte_end":57123,"line_start":19,"line_end":19,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57128,"byte_end":57131,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A reduction is **not** performed. Also there is no check for a denominator of `0`. If these","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57136,"byte_end":57231,"line_start":21,"line_end":21,"column_start":5,"column_end":100}},{"value":"/ features are needed, use [`Fraction::new_reduce()`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57236,"byte_end":57291,"line_start":22,"line_end":22,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57479,"byte_end":57488,"line_start":28,"line_end":28,"column_start":18,"column_end":27},"name":"numerator","qualname":"<Fraction>::numerator","value":"pub const fn numerator(&Self) -> &u32","parent":null,"children":[],"decl_id":null,"docs":" Return the numerator of the fraction\n","sig":null,"attributes":[{"value":"/ Return the numerator of the fraction","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57421,"byte_end":57461,"line_start":27,"line_end":27,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57600,"byte_end":57611,"line_start":33,"line_end":33,"column_start":18,"column_end":29},"name":"denominator","qualname":"<Fraction>::denominator","value":"pub const fn denominator(&Self) -> &u32","parent":null,"children":[],"decl_id":null,"docs":" Return the denominator of the fraction\n","sig":null,"attributes":[{"value":"/ Return the denominator of the fraction","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57540,"byte_end":57582,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57930,"byte_end":57940,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"new_reduce","qualname":"<Fraction>::new_reduce","value":"pub fn new_reduce(u32, u32) -> Result<Self, ConversionError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Fraction`.","sig":null,"attributes":[{"value":"/ Construct a new `Fraction`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57681,"byte_end":57712,"line_start":39,"line_end":39,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57717,"byte_end":57720,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ A reduction and `denominator == 0` check **are** performed.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57725,"byte_end":57788,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57793,"byte_end":57796,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57801,"byte_end":57813,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57818,"byte_end":57821,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::DivByZero`] : A `0` denominator was detected","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57826,"byte_end":57893,"line_start":45,"line_end":45,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58242,"byte_end":58252,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"to_integer","qualname":"<Fraction>::to_integer","value":"pub fn to_integer(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the value truncated to an integer\n","sig":null,"attributes":[{"value":"/ Returns the value truncated to an integer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58185,"byte_end":58230,"line_start":55,"line_end":55,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58420,"byte_end":58432,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"from_integer","qualname":"<Fraction>::from_integer","value":"pub fn from_integer(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `Fraction` from an integer.","sig":null,"attributes":[{"value":"/ Constructs a `Fraction` from an integer.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58308,"byte_end":58352,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58357,"byte_end":58360,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `Fraction::new(value,1)`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58365,"byte_end":58408,"line_start":62,"line_end":62,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58561,"byte_end":58566,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"recip","qualname":"<Fraction>::recip","value":"pub fn recip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the reciprocal of the fraction\n","sig":null,"attributes":[{"value":"/ Returns the reciprocal of the fraction","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58507,"byte_end":58549,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59100,"byte_end":59111,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"checked_mul","qualname":"<Fraction>::checked_mul","value":"pub fn checked_mul(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Checked `Fraction` × `Fraction` = `Fraction`","sig":null,"attributes":[{"value":"/ Checked `Fraction` × `Fraction` = `Fraction`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58623,"byte_end":58672,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58677,"byte_end":58680,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] for any errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58685,"byte_end":58720,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58725,"byte_end":58728,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58733,"byte_end":58747,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58752,"byte_end":58755,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58760,"byte_end":58771,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{fraction::Fraction, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58776,"byte_end":58839,"line_start":79,"line_end":79,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58844,"byte_end":58849,"line_start":80,"line_end":80,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(Fraction::new(1000, 1).checked_mul(&Fraction::new(5,5)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58854,"byte_end":58925,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/     Some(Fraction::new(5_000, 5)));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58930,"byte_end":58969,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58974,"byte_end":58977,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Fraction::new(u32::MAX, 1).checked_mul(&Fraction::new(2,1)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":58982,"byte_end":59057,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/     None);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59062,"byte_end":59076,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59081,"byte_end":59088,"line_start":86,"line_end":86,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59687,"byte_end":59698,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"checked_div","qualname":"<Fraction>::checked_div","value":"pub fn checked_div(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Checked `Fraction` / `Fraction` = `Fraction`","sig":null,"attributes":[{"value":"/ Checked `Fraction` / `Fraction` = `Fraction`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59201,"byte_end":59249,"line_start":91,"line_end":91,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59254,"byte_end":59257,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] for any errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59262,"byte_end":59297,"line_start":93,"line_end":93,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59302,"byte_end":59305,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59310,"byte_end":59324,"line_start":95,"line_end":95,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59329,"byte_end":59332,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59337,"byte_end":59348,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{fraction::Fraction, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59353,"byte_end":59416,"line_start":98,"line_end":98,"column_start":5,"column_end":68}},{"value":"/ #","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59421,"byte_end":59426,"line_start":99,"line_end":99,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(Fraction::new(1000, 1).checked_div(&Fraction::new(10, 1000)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59431,"byte_end":59507,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/     Some(Fraction::new(1_000_000, 10)));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59512,"byte_end":59556,"line_start":101,"line_end":101,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59561,"byte_end":59564,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Fraction::new(1, u32::MAX).checked_div(&Fraction::new(2,1)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59569,"byte_end":59644,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/     None);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59649,"byte_end":59663,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":59668,"byte_end":59675,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1539},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63198,"byte_end":63205,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":1541}],"decl_id":null,"docs":" Represents an instant of time relative to a specific [`Clock`](clock/trait.Clock.html)","sig":null,"attributes":[{"value":"/ Represents an instant of time relative to a specific [`Clock`](clock/trait.Clock.html)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":61816,"byte_end":61906,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":61907,"byte_end":61910,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":61911,"byte_end":61924,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":61925,"byte_end":61928,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Typically an `Instant` will be obtained from a [`Clock`](clock/trait.Clock.html)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":61929,"byte_end":62013,"line_start":19,"line_end":19,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62014,"byte_end":62017,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62018,"byte_end":62029,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ # use embedded_time::{fraction::Fraction, Instant, Clock as _};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62030,"byte_end":62097,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62098,"byte_end":62120,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/ # struct SomeClock;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62121,"byte_end":62144,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ # impl embedded_time::Clock for SomeClock {","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62145,"byte_end":62192,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ #     type T = u32;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62193,"byte_end":62216,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/ #     const SCALING_FACTOR: Fraction = Fraction::new(1, 1_000);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62217,"byte_end":62284,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ #     fn try_now(&self) -> Result<Instant<Self>, embedded_time::clock::Error> {Ok(Instant::<Self>::new(23))}","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62285,"byte_end":62397,"line_start":28,"line_end":28,"column_start":1,"column_end":113}},{"value":"/ # }","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62398,"byte_end":62405,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ let some_clock = SomeClock;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62406,"byte_end":62437,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ let some_instant = some_clock.try_now().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62438,"byte_end":62491,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62492,"byte_end":62499,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62500,"byte_end":62503,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ However, an `Instant` can also be constructed directly. In this case the constructed `Instant`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62504,"byte_end":62602,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ is `23 * SomeClock::SCALING_FACTOR` seconds since the clock's epoch","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62603,"byte_end":62674,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62675,"byte_end":62678,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62679,"byte_end":62697,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/ # use embedded_time::{fraction::Fraction, Instant};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62698,"byte_end":62753,"line_start":38,"line_end":38,"column_start":1,"column_end":56}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62754,"byte_end":62776,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ # struct SomeClock;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62777,"byte_end":62800,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ # impl embedded_time::Clock for SomeClock {","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62801,"byte_end":62848,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ #     type T = u32;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62849,"byte_end":62872,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/ #     const SCALING_FACTOR: Fraction = Fraction::new(1, 1_000);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62873,"byte_end":62940,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/ #     fn try_now(&self) -> Result<Instant<Self>, embedded_time::clock::Error> {unimplemented!()}","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":62941,"byte_end":63041,"line_start":44,"line_end":44,"column_start":1,"column_end":101}},{"value":"/ # }","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63042,"byte_end":63049,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ Instant::<SomeClock>::new(23);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63050,"byte_end":63084,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63085,"byte_end":63092,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63391,"byte_end":63394,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Instant<Clock>>::new","value":"pub fn new(Clock::T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new Instant from the provided [`Clock`](clock/trait.Clock.html)\n","sig":null,"attributes":[{"value":"/ Construct a new Instant from the provided [`Clock`](clock/trait.Clock.html)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63300,"byte_end":63379,"line_start":55,"line_end":55,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64633,"byte_end":64655,"line_start":90,"line_end":90,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant<Clock>>::checked_duration_since","value":"pub fn checked_duration_since(&Self, &Self)\n-> Option<duration::Generic<Clock::T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one as a\n [`duration::Generic`] or [`None`] if the other instant is later than\n this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one as a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63456,"byte_end":63532,"line_start":60,"line_end":60,"column_start":5,"column_end":81}},{"value":"/ [`duration::Generic`] or [`None`] if the other instant is later than","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63537,"byte_end":63609,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ this one.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63614,"byte_end":63627,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63632,"byte_end":63635,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63640,"byte_end":63654,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63659,"byte_end":63662,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63667,"byte_end":63678,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{duration::*, Instant, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63683,"byte_end":63748,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ # use core::convert::TryInto;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63753,"byte_end":63786,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63791,"byte_end":63813,"line_start":69,"line_end":69,"column_start":5,"column_end":27}},{"value":"/ struct Clock;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63818,"byte_end":63835,"line_start":70,"line_end":70,"column_start":5,"column_end":22}},{"value":"/ impl embedded_time::Clock for Clock {","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63840,"byte_end":63881,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/     type T = u32;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63886,"byte_end":63907,"line_start":72,"line_end":72,"column_start":5,"column_end":26}},{"value":"/     const SCALING_FACTOR: Fraction = Fraction::new(1, 1_000);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63912,"byte_end":63977,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/     // ...","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63982,"byte_end":63996,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/ # fn try_now(&self) -> Result<Instant<Self>, embedded_time::clock::Error> {unimplemented!()}","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64001,"byte_end":64097,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ }","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64102,"byte_end":64107,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64112,"byte_end":64117,"line_start":77,"line_end":77,"column_start":5,"column_end":10}},{"value":"/ # let instant1 = Instant::<Clock>::new(3);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64122,"byte_end":64168,"line_start":78,"line_end":78,"column_start":5,"column_end":51}},{"value":"/ # let instant2 = Instant::<Clock>::new(5);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64173,"byte_end":64219,"line_start":79,"line_end":79,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64224,"byte_end":64227,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ // Given `instant1` at 3 `Clock` ticks","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64232,"byte_end":64274,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ // Given `instant2` at 5 `Clock` ticks","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64279,"byte_end":64321,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/ let generic_duration = instant2.checked_duration_since(&instant1).unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64326,"byte_end":64405,"line_start":83,"line_end":83,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64410,"byte_end":64413,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ // Convert into a _named_ `Duration`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64418,"byte_end":64458,"line_start":85,"line_end":85,"column_start":5,"column_end":45}},{"value":"/ let microseconds: Microseconds<u32> = generic_duration.try_into().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64463,"byte_end":64542,"line_start":86,"line_end":86,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64547,"byte_end":64550,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(microseconds, Microseconds(2_000_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64555,"byte_end":64609,"line_start":88,"line_end":88,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64614,"byte_end":64621,"line_start":89,"line_end":89,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66124,"byte_end":66146,"line_start":131,"line_end":131,"column_start":12,"column_end":34},"name":"checked_duration_until","qualname":"<Instant<Clock>>::checked_duration_until","value":"pub fn checked_duration_until(&Self, &Self)\n-> Option<duration::Generic<Clock::T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from self until that given instant\n [`duration::Generic`] or [`None`] if the other instant is later than\n this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from self until that given instant","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":64950,"byte_end":65023,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ [`duration::Generic`] or [`None`] if the other instant is later than","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65028,"byte_end":65100,"line_start":102,"line_end":102,"column_start":5,"column_end":77}},{"value":"/ this one.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65105,"byte_end":65118,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65123,"byte_end":65126,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65131,"byte_end":65145,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65150,"byte_end":65153,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65158,"byte_end":65169,"line_start":107,"line_end":107,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{duration::*, Instant, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65174,"byte_end":65239,"line_start":108,"line_end":108,"column_start":5,"column_end":70}},{"value":"/ # use core::convert::TryInto;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65244,"byte_end":65277,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65282,"byte_end":65304,"line_start":110,"line_end":110,"column_start":5,"column_end":27}},{"value":"/ struct Clock;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65309,"byte_end":65326,"line_start":111,"line_end":111,"column_start":5,"column_end":22}},{"value":"/ impl embedded_time::Clock for Clock {","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65331,"byte_end":65372,"line_start":112,"line_end":112,"column_start":5,"column_end":46}},{"value":"/     type T = u32;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65377,"byte_end":65398,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/     const SCALING_FACTOR: Fraction = Fraction::new(1, 1_000);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65403,"byte_end":65468,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/     // ...","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65473,"byte_end":65487,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/ # fn try_now(&self) -> Result<Instant<Self>, embedded_time::clock::Error> {unimplemented!()}","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65492,"byte_end":65588,"line_start":116,"line_end":116,"column_start":5,"column_end":101}},{"value":"/ }","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65593,"byte_end":65598,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65603,"byte_end":65608,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ # let instant1 = Instant::<Clock>::new(3);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65613,"byte_end":65659,"line_start":119,"line_end":119,"column_start":5,"column_end":51}},{"value":"/ # let instant2 = Instant::<Clock>::new(5);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65664,"byte_end":65710,"line_start":120,"line_end":120,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65715,"byte_end":65718,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ // Given `instant1` at 3 `Clock` ticks","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65723,"byte_end":65765,"line_start":122,"line_end":122,"column_start":5,"column_end":47}},{"value":"/ // Given `instant2` at 5 `Clock` ticks","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65770,"byte_end":65812,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ let generic_duration = instant1.checked_duration_until(&instant2).unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65817,"byte_end":65896,"line_start":124,"line_end":124,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65901,"byte_end":65904,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ // Convert into a _named_ `Duration`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65909,"byte_end":65949,"line_start":126,"line_end":126,"column_start":5,"column_end":45}},{"value":"/ let microseconds: Microseconds<u32> = generic_duration.try_into().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":65954,"byte_end":66033,"line_start":127,"line_end":127,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66038,"byte_end":66041,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(microseconds, Microseconds(2_000_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66046,"byte_end":66100,"line_start":129,"line_end":129,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66105,"byte_end":66112,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66585,"byte_end":66605,"line_start":144,"line_end":144,"column_start":12,"column_end":32},"name":"duration_since_epoch","qualname":"<Instant<Clock>>::duration_since_epoch","value":"pub fn duration_since_epoch(&Self) -> duration::Generic<Clock::T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Duration`] (in the provided units) since the beginning of time (the\n [`Clock`](clock/trait.Clock.html)'s 0)\n","sig":null,"attributes":[{"value":"/ Returns the [`Duration`] (in the provided units) since the beginning of time (the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66441,"byte_end":66526,"line_start":142,"line_end":142,"column_start":5,"column_end":90}},{"value":"/ [`Clock`](clock/trait.Clock.html)'s 0)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66531,"byte_end":66573,"line_start":143,"line_end":143,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67638,"byte_end":67649,"line_start":175,"line_end":175,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant<Clock>>::checked_add","value":"pub fn checked_add<Dur: Duration>(Self, Dur) -> Option<Self> where\nDur: FixedPoint, Clock::T: TryFrom<Dur::T> + core::ops::Div<Output = Clock::T>","parent":null,"children":[],"decl_id":null,"docs":" This `Instant` + [`Duration`] = later (future) `Instant`","sig":null,"attributes":[{"value":"/ This `Instant` + [`Duration`] = later (future) `Instant`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66723,"byte_end":66783,"line_start":148,"line_end":148,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66788,"byte_end":66791,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the [`Duration`] is too large","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66796,"byte_end":66849,"line_start":150,"line_end":150,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66854,"byte_end":66857,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66862,"byte_end":66876,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66881,"byte_end":66884,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66889,"byte_end":66900,"line_start":154,"line_end":154,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{fraction::Fraction, duration::*, Instant, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66905,"byte_end":66990,"line_start":155,"line_end":155,"column_start":5,"column_end":90}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":66995,"byte_end":67017,"line_start":156,"line_end":156,"column_start":5,"column_end":27}},{"value":"/ struct Clock;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67022,"byte_end":67039,"line_start":157,"line_end":157,"column_start":5,"column_end":22}},{"value":"/ impl embedded_time::Clock for Clock {","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67044,"byte_end":67085,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/     type T = u32;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67090,"byte_end":67111,"line_start":159,"line_end":159,"column_start":5,"column_end":26}},{"value":"/     const SCALING_FACTOR: Fraction = Fraction::new(1, 1_000);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67116,"byte_end":67181,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/     // ...","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67186,"byte_end":67200,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/ # fn try_now(&self) -> Result<Instant<Self>, embedded_time::clock::Error> {unimplemented!()}","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67205,"byte_end":67301,"line_start":162,"line_end":162,"column_start":5,"column_end":101}},{"value":"/ }","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67306,"byte_end":67311,"line_start":163,"line_end":163,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67316,"byte_end":67319,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67324,"byte_end":67339,"line_start":165,"line_end":165,"column_start":5,"column_end":20}},{"value":"/     Instant::<Clock>::new(0).checked_add(Milliseconds(u32::MAX/2)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67344,"byte_end":67415,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/     Some(Instant::<Clock>::new(u32::MAX/2))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67420,"byte_end":67467,"line_start":167,"line_end":167,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67472,"byte_end":67478,"line_start":168,"line_end":168,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67483,"byte_end":67486,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67491,"byte_end":67506,"line_start":170,"line_end":170,"column_start":5,"column_end":20}},{"value":"/     Instant::<Clock>::new(0).checked_add(Milliseconds(u32::MAX/2 + 1)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67511,"byte_end":67586,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/     None","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67591,"byte_end":67603,"line_start":172,"line_end":172,"column_start":5,"column_end":17}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67608,"byte_end":67614,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":67619,"byte_end":67626,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69020,"byte_end":69031,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant<Clock>>::checked_sub","value":"pub fn checked_sub<Dur: Duration>(Self, Dur) -> Option<Self> where\nDur: FixedPoint, Clock::T: TryFrom<Dur::T> + core::ops::Div<Output = Clock::T>","parent":null,"children":[],"decl_id":null,"docs":" This `Instant` - [`Duration`] = earlier `Instant`","sig":null,"attributes":[{"value":"/ This `Instant` - [`Duration`] = earlier `Instant`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68131,"byte_end":68184,"line_start":190,"line_end":190,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68189,"byte_end":68192,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if the [`Duration`] is too large","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68197,"byte_end":68250,"line_start":192,"line_end":192,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68255,"byte_end":68258,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68263,"byte_end":68277,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68282,"byte_end":68285,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68290,"byte_end":68301,"line_start":196,"line_end":196,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{fraction::Fraction, duration::*, Instant, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68306,"byte_end":68391,"line_start":197,"line_end":197,"column_start":5,"column_end":90}},{"value":"/ # #[derive(Debug)]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68396,"byte_end":68418,"line_start":198,"line_end":198,"column_start":5,"column_end":27}},{"value":"/ struct Clock;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68423,"byte_end":68440,"line_start":199,"line_end":199,"column_start":5,"column_end":22}},{"value":"/ impl embedded_time::Clock for Clock {","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68445,"byte_end":68486,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/     type T = u32;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68491,"byte_end":68512,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/     const SCALING_FACTOR: Fraction = Fraction::new(1, 1_000);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68517,"byte_end":68582,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/     // ...","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68587,"byte_end":68601,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/ # fn try_now(&self) -> Result<Instant<Self>, embedded_time::clock::Error> {unimplemented!()}","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68606,"byte_end":68702,"line_start":204,"line_end":204,"column_start":5,"column_end":101}},{"value":"/ }","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68707,"byte_end":68712,"line_start":205,"line_end":205,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68717,"byte_end":68720,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Instant::<Clock>::new(u32::MAX).checked_sub(Milliseconds(u32::MAX/2)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68725,"byte_end":68810,"line_start":207,"line_end":207,"column_start":5,"column_end":90}},{"value":"/     Some(Instant::<Clock>::new(u32::MAX - u32::MAX/2)));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68815,"byte_end":68875,"line_start":208,"line_end":208,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68880,"byte_end":68883,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Instant::<Clock>::new(u32::MAX).checked_sub(Milliseconds(u32::MAX/2 + 1)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68888,"byte_end":68977,"line_start":210,"line_end":210,"column_start":5,"column_end":94}},{"value":"/     None);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":68982,"byte_end":68996,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69001,"byte_end":69008,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":247},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rate","qualname":"::rate","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":1545},{"krate":0,"index":1587},{"krate":0,"index":1584},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1570},{"krate":0,"index":1559},{"krate":0,"index":1555},{"krate":0,"index":1552},{"krate":0,"index":1549},{"krate":0,"index":271},{"krate":0,"index":276},{"krate":0,"index":278}],"decl_id":null,"docs":" Rate-based types/units\n","sig":null,"attributes":[{"value":"/ Rate-based types/units","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":77514,"byte_end":77540,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82322,"byte_end":82326,"line_start":200,"line_end":200,"column_start":11,"column_end":15},"name":"Rate","qualname":"::rate::Rate","value":"Rate: Sized + Copy","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":268}],"decl_id":null,"docs":" An unsigned, fixed-point rate type","sig":null,"attributes":[{"value":"/ An unsigned, fixed-point rate type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":77870,"byte_end":77908,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":77909,"byte_end":77912,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Each implementation defines an _integer_ type and a _scaling factor_ [`Fraction`].","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":77913,"byte_end":77999,"line_start":19,"line_end":19,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78000,"byte_end":78003,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Constructing a rate","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78004,"byte_end":78029,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78030,"byte_end":78033,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78034,"byte_end":78045,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78046,"byte_end":78077,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78078,"byte_end":78081,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let _ = <Kilohertz>::new(5);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78082,"byte_end":78114,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ let _ = Kilohertz(5_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78115,"byte_end":78144,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ let _ = 5_u32.kHz();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78145,"byte_end":78169,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78170,"byte_end":78177,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78178,"byte_end":78181,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Get the integer part","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78182,"byte_end":78208,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78209,"byte_end":78212,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78213,"byte_end":78224,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78225,"byte_end":78256,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78257,"byte_end":78260,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Hertz(45_u32).integer(), 45_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78261,"byte_end":78309,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78310,"byte_end":78317,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78318,"byte_end":78321,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Formatting","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78322,"byte_end":78338,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78339,"byte_end":78342,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Just forwards the underlying integer to [`core::fmt::Display::fmt()`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78343,"byte_end":78416,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78417,"byte_end":78420,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78421,"byte_end":78432,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78433,"byte_end":78464,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78465,"byte_end":78468,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(format!(\"{}\", Hertz(123_u32)), \"123\");","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78469,"byte_end":78522,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78523,"byte_end":78530,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78531,"byte_end":78534,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Converting between `Rate`s","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78535,"byte_end":78567,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78568,"byte_end":78571,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Many intra-rate conversions can be done using `From`/`Into`:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78572,"byte_end":78636,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78637,"byte_end":78640,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78641,"byte_end":78652,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78653,"byte_end":78684,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78685,"byte_end":78688,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let kilohertz = Kilohertz::<u32>::from(23_000_u32.Hz());","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78689,"byte_end":78749,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(kilohertz.integer(), 23_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78750,"byte_end":78794,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78795,"byte_end":78798,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let kilohertz: Kilohertz<u32> = 23_000_u32.Hz().into();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78799,"byte_end":78858,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(kilohertz.integer(), 23_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78859,"byte_end":78903,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78904,"byte_end":78911,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78912,"byte_end":78915,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Others require the use of `TryFrom`/`TryInto`:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78916,"byte_end":78966,"line_start":63,"line_end":63,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78967,"byte_end":78970,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78971,"byte_end":78982,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":78983,"byte_end":79014,"line_start":66,"line_end":66,"column_start":1,"column_end":32}},{"value":"/ use std::convert::{TryInto, TryFrom};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79015,"byte_end":79056,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79057,"byte_end":79060,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let hertz = Hertz::<u32>::try_from(23_u32.kHz()).unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79061,"byte_end":79123,"line_start":69,"line_end":69,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(hertz.integer(), 23_000_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79124,"byte_end":79168,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79169,"byte_end":79172,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let hertz: Hertz<u32> = 23_u32.kHz().try_into().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79173,"byte_end":79234,"line_start":72,"line_end":72,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(hertz.integer(), 23_000_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79235,"byte_end":79279,"line_start":73,"line_end":73,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79280,"byte_end":79287,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79288,"byte_end":79291,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # Converting from a [`Generic`] `Rate`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79292,"byte_end":79334,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79335,"byte_end":79338,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79339,"byte_end":79354,"line_start":78,"line_end":78,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79355,"byte_end":79358,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79359,"byte_end":79370,"line_start":80,"line_end":80,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79371,"byte_end":79402,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/ use core::convert::{TryFrom, TryInto};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79403,"byte_end":79445,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79446,"byte_end":79449,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // A generic rate of 20_000 events/second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79450,"byte_end":79495,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ let generic_rate = Generic::new(10_u32, Fraction::new(2_000, 1));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79496,"byte_end":79565,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79566,"byte_end":79569,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let rate = KilobitsPerSecond::<u32>::try_from(generic_rate).unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79570,"byte_end":79643,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(rate, 20_u32.kbps());","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79644,"byte_end":79680,"line_start":88,"line_end":88,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79681,"byte_end":79684,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ let rate: KilobitsPerSecond<u32> = generic_rate.try_into().unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79685,"byte_end":79757,"line_start":90,"line_end":90,"column_start":1,"column_end":73}},{"value":"/ assert_eq!(rate, 20_u32.kbps());","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79758,"byte_end":79794,"line_start":91,"line_end":91,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79795,"byte_end":79802,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79803,"byte_end":79806,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ## Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79807,"byte_end":79820,"line_start":94,"line_end":94,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79821,"byte_end":79824,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Failure will only occur if the provided value does not fit in the selected destination type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79825,"byte_end":79921,"line_start":96,"line_end":96,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79922,"byte_end":79925,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79926,"byte_end":79933,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79934,"byte_end":79937,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ [`ConversionError::Unspecified`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79938,"byte_end":79974,"line_start":100,"line_end":100,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79975,"byte_end":79978,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79979,"byte_end":79990,"line_start":102,"line_end":102,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::{rate::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":79991,"byte_end":80041,"line_start":103,"line_end":103,"column_start":1,"column_end":51}},{"value":"/ use core::convert::TryFrom;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80042,"byte_end":80073,"line_start":104,"line_end":104,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80074,"byte_end":80077,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80078,"byte_end":80093,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/     Hertz::<u32>::try_from(Generic::new(u32::MAX, Fraction::new(10,1))),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80094,"byte_end":80170,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/     Err(ConversionError::Unspecified)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80171,"byte_end":80212,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80213,"byte_end":80219,"line_start":109,"line_end":109,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80220,"byte_end":80227,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80228,"byte_end":80231,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80232,"byte_end":80239,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80240,"byte_end":80243,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`ConversionError::ConversionFailure`] : The _integer_ conversion to that of the","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80244,"byte_end":80328,"line_start":114,"line_end":114,"column_start":1,"column_end":85}},{"value":"/ destination type fails.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80329,"byte_end":80356,"line_start":115,"line_end":115,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80357,"byte_end":80360,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80361,"byte_end":80372,"line_start":117,"line_end":117,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::{rate::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80373,"byte_end":80423,"line_start":118,"line_end":118,"column_start":1,"column_end":51}},{"value":"/ # use core::convert::TryFrom;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80424,"byte_end":80457,"line_start":119,"line_end":119,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80458,"byte_end":80461,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80462,"byte_end":80477,"line_start":121,"line_end":121,"column_start":1,"column_end":16}},{"value":"/     Hertz::<u32>::try_from(Generic::new(u32::MAX as u64 + 1, Fraction::new(1,1))),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80478,"byte_end":80564,"line_start":122,"line_end":122,"column_start":1,"column_end":87}},{"value":"/     Err(ConversionError::ConversionFailure)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80565,"byte_end":80612,"line_start":123,"line_end":123,"column_start":1,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80613,"byte_end":80619,"line_start":124,"line_end":124,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80620,"byte_end":80627,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80628,"byte_end":80631,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Converting to a [`Generic`] `Rate` with the same _scaling factor_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80632,"byte_end":80703,"line_start":127,"line_end":127,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80704,"byte_end":80707,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80708,"byte_end":80719,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80720,"byte_end":80751,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80752,"byte_end":80755,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ let generic_rate = Generic::<u32>::from(5_u32.Hz());","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80756,"byte_end":80812,"line_start":132,"line_end":132,"column_start":1,"column_end":57}},{"value":"/ let generic_rate: Generic<u32> = 5_u32.Hz().into();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80813,"byte_end":80868,"line_start":133,"line_end":133,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80869,"byte_end":80872,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(generic_rate.integer(), 5_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80873,"byte_end":80919,"line_start":135,"line_end":135,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80920,"byte_end":80927,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80928,"byte_end":80931,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ # Converting to a [`Generic`] `Rate` with a different _scaling factor_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":80932,"byte_end":81006,"line_start":138,"line_end":138,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81007,"byte_end":81010,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ See [`Rate::to_generic()`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81011,"byte_end":81041,"line_start":140,"line_end":140,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81042,"byte_end":81045,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ # Converting to a _named_ `Duration`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81046,"byte_end":81086,"line_start":142,"line_end":142,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81087,"byte_end":81090,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ See [`Rate::to_duration()`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81091,"byte_end":81122,"line_start":144,"line_end":144,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81123,"byte_end":81126,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ # Creating a custom `Rate`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81127,"byte_end":81157,"line_start":146,"line_end":146,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81158,"byte_end":81161,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81162,"byte_end":81165,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81166,"byte_end":81169,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ # Add/Sub","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81170,"byte_end":81183,"line_start":150,"line_end":150,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81184,"byte_end":81187,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ The result of the operation is the LHS type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81188,"byte_end":81235,"line_start":152,"line_end":152,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81236,"byte_end":81239,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81240,"byte_end":81255,"line_start":154,"line_end":154,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81256,"byte_end":81259,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81260,"byte_end":81271,"line_start":156,"line_end":156,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81272,"byte_end":81303,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81304,"byte_end":81307,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ assert_eq!((Hertz(1_u32) + 1_u32.kHz()),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81308,"byte_end":81352,"line_start":159,"line_end":159,"column_start":1,"column_end":45}},{"value":"/     Hertz(1_001_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81353,"byte_end":81379,"line_start":160,"line_end":160,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81380,"byte_end":81383,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ assert_eq!((Hertz(2_001_u32) - 1_u32.kHz()),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81384,"byte_end":81432,"line_start":162,"line_end":162,"column_start":1,"column_end":49}},{"value":"/     Hertz(1_001_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81433,"byte_end":81459,"line_start":163,"line_end":163,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81460,"byte_end":81467,"line_start":164,"line_end":164,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81468,"byte_end":81471,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## Panics","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81472,"byte_end":81485,"line_start":166,"line_end":166,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81486,"byte_end":81489,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ The same reason the integer operation would panic. Namely, if the result overflows the type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81490,"byte_end":81586,"line_start":168,"line_end":168,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81587,"byte_end":81590,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust,should_panic","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81591,"byte_end":81615,"line_start":170,"line_end":170,"column_start":1,"column_end":25}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81616,"byte_end":81647,"line_start":171,"line_end":171,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81648,"byte_end":81651,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ let _ = Hertz(u32::MAX) + Hertz(1_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81652,"byte_end":81695,"line_start":173,"line_end":173,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81696,"byte_end":81703,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81704,"byte_end":81707,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ # Mul/Div","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81708,"byte_end":81721,"line_start":176,"line_end":176,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81722,"byte_end":81725,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Rates may also be multiplied and divided by integers. The result is of the LHS type. Both","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81726,"byte_end":81819,"line_start":178,"line_end":178,"column_start":1,"column_end":94}},{"value":"/ _panicky_ and _checked_ operations are available.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81820,"byte_end":81873,"line_start":179,"line_end":179,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81874,"byte_end":81877,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ # Comparisons","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81878,"byte_end":81895,"line_start":181,"line_end":181,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81896,"byte_end":81899,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81900,"byte_end":81911,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81912,"byte_end":81943,"line_start":184,"line_end":184,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81944,"byte_end":81947,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Kilohertz(2_u32), Hertz(2_000_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":81948,"byte_end":81999,"line_start":186,"line_end":186,"column_start":1,"column_end":52}},{"value":"/ assert_ne!(Kilohertz(2_u32), Hertz(2_001_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82000,"byte_end":82051,"line_start":187,"line_end":187,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82052,"byte_end":82055,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ assert!(Kilohertz(2_u32) < Hertz(2_001_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82056,"byte_end":82105,"line_start":189,"line_end":189,"column_start":1,"column_end":50}},{"value":"/ assert!(Kilohertz(2_u32) > Hertz(1_999_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82106,"byte_end":82155,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82156,"byte_end":82163,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82164,"byte_end":82167,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ # Remainder","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82168,"byte_end":82183,"line_start":193,"line_end":193,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82184,"byte_end":82187,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82188,"byte_end":82199,"line_start":195,"line_end":195,"column_start":1,"column_end":12}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82200,"byte_end":82231,"line_start":196,"line_end":196,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82232,"byte_end":82235,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Hertz(2_037_u32) % Kilohertz(1_u32), Hertz(37_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82236,"byte_end":82303,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82304,"byte_end":82311,"line_start":199,"line_end":199,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83681,"byte_end":83691,"line_start":246,"line_end":246,"column_start":8,"column_end":18},"name":"to_generic","qualname":"::rate::Rate::to_generic","value":"pub fn to_generic<DestInt: TimeInt>(Self, Fraction)\n-> Result<Generic<DestInt>, ConversionError> where Self: FixedPoint,\nDestInt: TryFrom<Self::T>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Construct a `Generic` `Rate` from a _named_ `Rate` (eg. [`Kilohertz`])","sig":null,"attributes":[{"value":"/ Construct a `Generic` `Rate` from a _named_ `Rate` (eg. [`Kilohertz`])","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82347,"byte_end":82421,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82426,"byte_end":82429,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82434,"byte_end":82448,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82453,"byte_end":82456,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82461,"byte_end":82472,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::rate::*;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82477,"byte_end":82508,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82513,"byte_end":82516,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let kilobits = KilobitsPerSecond(20_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82521,"byte_end":82566,"line_start":208,"line_end":208,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82571,"byte_end":82574,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ // convert into a generic rate with a different _scaling factor_","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82579,"byte_end":82647,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ let generic = kilobits.to_generic::<u32>(Fraction::new(500, 1)).unwrap();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82652,"byte_end":82729,"line_start":211,"line_end":211,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82734,"byte_end":82737,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(generic.integer(), 40_u32);","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82742,"byte_end":82784,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82789,"byte_end":82796,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82801,"byte_end":82804,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82809,"byte_end":82821,"line_start":216,"line_end":216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82826,"byte_end":82829,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Failure will only occur if the provided value does not fit in the selected destination type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82834,"byte_end":82930,"line_start":218,"line_end":218,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82935,"byte_end":82938,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82943,"byte_end":82950,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82955,"byte_end":82958,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::Unspecified`]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82963,"byte_end":82999,"line_start":222,"line_end":222,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83004,"byte_end":83007,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83012,"byte_end":83023,"line_start":224,"line_end":224,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{rate::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83028,"byte_end":83080,"line_start":225,"line_end":225,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83085,"byte_end":83088,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83093,"byte_end":83108,"line_start":227,"line_end":227,"column_start":5,"column_end":20}},{"value":"/     Hertz(u32::MAX).to_generic::<u32>(Fraction::new(1, 2)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83113,"byte_end":83176,"line_start":228,"line_end":228,"column_start":5,"column_end":68}},{"value":"/     Err(ConversionError::Unspecified)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83181,"byte_end":83222,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83227,"byte_end":83233,"line_start":230,"line_end":230,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83238,"byte_end":83245,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83250,"byte_end":83253,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83258,"byte_end":83265,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83270,"byte_end":83273,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::ConversionFailure`] : The integer conversion to that of the destination","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83278,"byte_end":83372,"line_start":235,"line_end":235,"column_start":5,"column_end":99}},{"value":"/ type fails.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83377,"byte_end":83392,"line_start":236,"line_end":236,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83397,"byte_end":83400,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83405,"byte_end":83416,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::{fraction::Fraction, rate::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83421,"byte_end":83491,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83496,"byte_end":83499,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83504,"byte_end":83519,"line_start":241,"line_end":241,"column_start":5,"column_end":20}},{"value":"/     Hertz(u32::MAX as u64 + 1).to_generic::<u32>(Fraction::new(1, 1)),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83524,"byte_end":83598,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/     Err(ConversionError::ConversionFailure)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83603,"byte_end":83650,"line_start":243,"line_end":243,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83655,"byte_end":83661,"line_start":244,"line_end":244,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":83666,"byte_end":83673,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85263,"byte_end":85274,"line_start":304,"line_end":304,"column_start":8,"column_end":19},"name":"to_duration","qualname":"::rate::Rate::to_duration","value":"pub fn to_duration<Duration: duration::Duration>(&Self)\n-> Result<Duration, ConversionError> where Duration: FixedPoint,\nSelf: FixedPoint, Duration::T: TryFrom<Self::T>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Convert to _named_ [`Duration`](duration::Duration)","sig":null,"attributes":[{"value":"/ Convert to _named_ [`Duration`](duration::Duration)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84019,"byte_end":84074,"line_start":260,"line_end":260,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84079,"byte_end":84082,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ (the rate is equal to the reciprocal of the duration)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84087,"byte_end":84144,"line_start":262,"line_end":262,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84149,"byte_end":84152,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84157,"byte_end":84171,"line_start":264,"line_end":264,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84176,"byte_end":84179,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84184,"byte_end":84195,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::{duration::*, rate::*};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84200,"byte_end":84246,"line_start":267,"line_end":267,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84251,"byte_end":84254,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84259,"byte_end":84274,"line_start":269,"line_end":269,"column_start":5,"column_end":20}},{"value":"/     Kilohertz(500_u32).to_duration(),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84279,"byte_end":84320,"line_start":270,"line_end":270,"column_start":5,"column_end":46}},{"value":"/     Ok(Microseconds(2_u32))","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84325,"byte_end":84356,"line_start":271,"line_end":271,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84361,"byte_end":84367,"line_start":272,"line_end":272,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84372,"byte_end":84379,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84384,"byte_end":84387,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84392,"byte_end":84404,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84409,"byte_end":84412,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Failure will only occur if the provided value does not fit in the selected destination type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84417,"byte_end":84513,"line_start":277,"line_end":277,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84518,"byte_end":84521,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84526,"byte_end":84533,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84538,"byte_end":84541,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::Overflow`] : The conversion of the _scaling factor_ causes an overflow.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84546,"byte_end":84640,"line_start":281,"line_end":281,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84645,"byte_end":84648,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84653,"byte_end":84664,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::{duration::*, rate::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84669,"byte_end":84732,"line_start":284,"line_end":284,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84737,"byte_end":84740,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84745,"byte_end":84760,"line_start":286,"line_end":286,"column_start":5,"column_end":20}},{"value":"/     Megahertz(u32::MAX).to_duration::<Hours<u32>>(),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84765,"byte_end":84821,"line_start":287,"line_end":287,"column_start":5,"column_end":61}},{"value":"/     Err(ConversionError::Overflow)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84826,"byte_end":84864,"line_start":288,"line_end":288,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84869,"byte_end":84875,"line_start":289,"line_end":289,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84880,"byte_end":84887,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84892,"byte_end":84895,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ---","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84900,"byte_end":84907,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84912,"byte_end":84915,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`ConversionError::DivByZero`] : The rate is `0`, therefore the reciprocal is undefined.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":84920,"byte_end":85012,"line_start":294,"line_end":294,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85017,"byte_end":85020,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85025,"byte_end":85036,"line_start":296,"line_end":296,"column_start":5,"column_end":16}},{"value":"/ use embedded_time::{duration::*, rate::*, ConversionError};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85041,"byte_end":85104,"line_start":297,"line_end":297,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85109,"byte_end":85112,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85117,"byte_end":85132,"line_start":299,"line_end":299,"column_start":5,"column_end":20}},{"value":"/     Hertz(0_u32).to_duration::<Seconds<u32>>(),","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85137,"byte_end":85188,"line_start":300,"line_end":300,"column_start":5,"column_end":56}},{"value":"/     Err(ConversionError::DivByZero)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85193,"byte_end":85232,"line_start":301,"line_end":301,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85237,"byte_end":85243,"line_start":302,"line_end":302,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":85248,"byte_end":85255,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1545},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87203,"byte_end":87210,"line_start":349,"line_end":349,"column_start":12,"column_end":19},"name":"Generic","qualname":"::rate::Generic","value":"Generic {  }","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548}],"decl_id":null,"docs":" The `Generic` `Rate` type allows an arbitrary _scaling factor_ to be used without having to\n impl `FixedPoint`.","sig":null,"attributes":[{"value":"/ The `Generic` `Rate` type allows an arbitrary _scaling factor_ to be used without having to","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":86815,"byte_end":86910,"line_start":343,"line_end":343,"column_start":1,"column_end":96}},{"value":"/ impl `FixedPoint`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":86911,"byte_end":86933,"line_start":344,"line_end":344,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":86934,"byte_end":86937,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ The purpose of this type is to allow a simple `Rate` object that can be defined at run-time.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":86938,"byte_end":87034,"line_start":346,"line_end":346,"column_start":1,"column_end":97}},{"value":"/ It does this by replacing the `const` _scaling factor_ with a struct field.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87035,"byte_end":87114,"line_start":347,"line_end":347,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87366,"byte_end":87369,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"new","qualname":"<Generic<T>>::new","value":"pub fn new(T, Fraction) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new fixed-point `Generic` `Rate` value\n","sig":null,"attributes":[{"value":"/ Constructs a new fixed-point `Generic` `Rate` value","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87299,"byte_end":87354,"line_start":355,"line_end":355,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87545,"byte_end":87552,"line_start":364,"line_end":364,"column_start":12,"column_end":19},"name":"integer","qualname":"<Generic<T>>::integer","value":"pub fn integer(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the _integer_ part\n","sig":null,"attributes":[{"value":"/ Returns the _integer_ part","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87503,"byte_end":87533,"line_start":363,"line_end":363,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87661,"byte_end":87675,"line_start":369,"line_end":369,"column_start":12,"column_end":26},"name":"scaling_factor","qualname":"<Generic<T>>::scaling_factor","value":"pub fn scaling_factor(&Self) -> &Fraction","parent":null,"children":[],"decl_id":null,"docs":" Returns the _scaling factor_ [`Fraction`] part\n","sig":null,"attributes":[{"value":"/ Returns the _scaling factor_ [`Fraction`] part","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87599,"byte_end":87649,"line_start":368,"line_end":368,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":278},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87820,"byte_end":87825,"line_start":378,"line_end":378,"column_start":9,"column_end":14},"name":"units","qualname":"::rate::units","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":1634},{"krate":0,"index":1659},{"krate":0,"index":1656},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1648},{"krate":0,"index":1644},{"krate":0,"index":1641},{"krate":0,"index":1638},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1608},{"krate":0,"index":1613},{"krate":0,"index":1617},{"krate":0,"index":1621},{"krate":0,"index":1626},{"krate":0,"index":1631},{"krate":0,"index":1706},{"krate":0,"index":1731},{"krate":0,"index":1728},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1720},{"krate":0,"index":1716},{"krate":0,"index":1713},{"krate":0,"index":1710},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1666},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1680},{"krate":0,"index":1685},{"krate":0,"index":1689},{"krate":0,"index":1693},{"krate":0,"index":1698},{"krate":0,"index":1703},{"krate":0,"index":1778},{"krate":0,"index":1803},{"krate":0,"index":1800},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1792},{"krate":0,"index":1788},{"krate":0,"index":1785},{"krate":0,"index":1782},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1752},{"krate":0,"index":1757},{"krate":0,"index":1761},{"krate":0,"index":1765},{"krate":0,"index":1770},{"krate":0,"index":1775},{"krate":0,"index":1850},{"krate":0,"index":1875},{"krate":0,"index":1872},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1864},{"krate":0,"index":1860},{"krate":0,"index":1857},{"krate":0,"index":1854},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1824},{"krate":0,"index":1829},{"krate":0,"index":1833},{"krate":0,"index":1837},{"krate":0,"index":1842},{"krate":0,"index":1847},{"krate":0,"index":1922},{"krate":0,"index":1947},{"krate":0,"index":1944},{"krate":0,"index":1939},{"krate":0,"index":1941},{"krate":0,"index":1936},{"krate":0,"index":1932},{"krate":0,"index":1929},{"krate":0,"index":1926},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1896},{"krate":0,"index":1901},{"krate":0,"index":1905},{"krate":0,"index":1909},{"krate":0,"index":1914},{"krate":0,"index":1919},{"krate":0,"index":1994},{"krate":0,"index":2019},{"krate":0,"index":2016},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2008},{"krate":0,"index":2004},{"krate":0,"index":2001},{"krate":0,"index":1998},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1968},{"krate":0,"index":1973},{"krate":0,"index":1977},{"krate":0,"index":1981},{"krate":0,"index":1986},{"krate":0,"index":1991},{"krate":0,"index":2066},{"krate":0,"index":2091},{"krate":0,"index":2088},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2080},{"krate":0,"index":2076},{"krate":0,"index":2073},{"krate":0,"index":2070},{"krate":0,"index":2021},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2040},{"krate":0,"index":2045},{"krate":0,"index":2049},{"krate":0,"index":2053},{"krate":0,"index":2058},{"krate":0,"index":2063},{"krate":0,"index":2138},{"krate":0,"index":2163},{"krate":0,"index":2160},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2152},{"krate":0,"index":2148},{"krate":0,"index":2145},{"krate":0,"index":2142},{"krate":0,"index":2093},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2112},{"krate":0,"index":2117},{"krate":0,"index":2121},{"krate":0,"index":2125},{"krate":0,"index":2130},{"krate":0,"index":2135},{"krate":0,"index":2210},{"krate":0,"index":2235},{"krate":0,"index":2232},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2224},{"krate":0,"index":2220},{"krate":0,"index":2217},{"krate":0,"index":2214},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2184},{"krate":0,"index":2189},{"krate":0,"index":2193},{"krate":0,"index":2197},{"krate":0,"index":2202},{"krate":0,"index":2207},{"krate":0,"index":2282},{"krate":0,"index":2307},{"krate":0,"index":2304},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2296},{"krate":0,"index":2292},{"krate":0,"index":2289},{"krate":0,"index":2286},{"krate":0,"index":2237},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2248},{"krate":0,"index":2251},{"krate":0,"index":2256},{"krate":0,"index":2261},{"krate":0,"index":2265},{"krate":0,"index":2269},{"krate":0,"index":2274},{"krate":0,"index":2279},{"krate":0,"index":2354},{"krate":0,"index":2379},{"krate":0,"index":2376},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2368},{"krate":0,"index":2364},{"krate":0,"index":2361},{"krate":0,"index":2358},{"krate":0,"index":2309},{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":2320},{"krate":0,"index":2323},{"krate":0,"index":2328},{"krate":0,"index":2333},{"krate":0,"index":2337},{"krate":0,"index":2341},{"krate":0,"index":2346},{"krate":0,"index":2351},{"krate":0,"index":2426},{"krate":0,"index":2451},{"krate":0,"index":2448},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2440},{"krate":0,"index":2436},{"krate":0,"index":2433},{"krate":0,"index":2430},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2386},{"krate":0,"index":2392},{"krate":0,"index":2395},{"krate":0,"index":2400},{"krate":0,"index":2405},{"krate":0,"index":2409},{"krate":0,"index":2413},{"krate":0,"index":2418},{"krate":0,"index":2423},{"krate":0,"index":2498},{"krate":0,"index":2523},{"krate":0,"index":2520},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2512},{"krate":0,"index":2508},{"krate":0,"index":2505},{"krate":0,"index":2502},{"krate":0,"index":2453},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2464},{"krate":0,"index":2467},{"krate":0,"index":2472},{"krate":0,"index":2477},{"krate":0,"index":2481},{"krate":0,"index":2485},{"krate":0,"index":2490},{"krate":0,"index":2495},{"krate":0,"index":2570},{"krate":0,"index":2595},{"krate":0,"index":2592},{"krate":0,"index":2587},{"krate":0,"index":2589},{"krate":0,"index":2584},{"krate":0,"index":2580},{"krate":0,"index":2577},{"krate":0,"index":2574},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2536},{"krate":0,"index":2539},{"krate":0,"index":2544},{"krate":0,"index":2549},{"krate":0,"index":2553},{"krate":0,"index":2557},{"krate":0,"index":2562},{"krate":0,"index":2567},{"krate":0,"index":2642},{"krate":0,"index":2667},{"krate":0,"index":2664},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2656},{"krate":0,"index":2652},{"krate":0,"index":2649},{"krate":0,"index":2646},{"krate":0,"index":2597},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2616},{"krate":0,"index":2621},{"krate":0,"index":2625},{"krate":0,"index":2629},{"krate":0,"index":2634},{"krate":0,"index":2639},{"krate":0,"index":2714},{"krate":0,"index":2739},{"krate":0,"index":2736},{"krate":0,"index":2731},{"krate":0,"index":2733},{"krate":0,"index":2728},{"krate":0,"index":2724},{"krate":0,"index":2721},{"krate":0,"index":2718},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2688},{"krate":0,"index":2693},{"krate":0,"index":2697},{"krate":0,"index":2701},{"krate":0,"index":2706},{"krate":0,"index":2711},{"krate":0,"index":2786},{"krate":0,"index":2811},{"krate":0,"index":2808},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2800},{"krate":0,"index":2796},{"krate":0,"index":2793},{"krate":0,"index":2790},{"krate":0,"index":2741},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2752},{"krate":0,"index":2755},{"krate":0,"index":2760},{"krate":0,"index":2765},{"krate":0,"index":2769},{"krate":0,"index":2773},{"krate":0,"index":2778},{"krate":0,"index":2783},{"krate":0,"index":2858},{"krate":0,"index":2883},{"krate":0,"index":2880},{"krate":0,"index":2875},{"krate":0,"index":2877},{"krate":0,"index":2872},{"krate":0,"index":2868},{"krate":0,"index":2865},{"krate":0,"index":2862},{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2824},{"krate":0,"index":2827},{"krate":0,"index":2832},{"krate":0,"index":2837},{"krate":0,"index":2841},{"krate":0,"index":2845},{"krate":0,"index":2850},{"krate":0,"index":2855},{"krate":0,"index":2930},{"krate":0,"index":2955},{"krate":0,"index":2952},{"krate":0,"index":2947},{"krate":0,"index":2949},{"krate":0,"index":2944},{"krate":0,"index":2940},{"krate":0,"index":2937},{"krate":0,"index":2934},{"krate":0,"index":2885},{"krate":0,"index":2888},{"krate":0,"index":2890},{"krate":0,"index":2896},{"krate":0,"index":2899},{"krate":0,"index":2904},{"krate":0,"index":2909},{"krate":0,"index":2913},{"krate":0,"index":2917},{"krate":0,"index":2922},{"krate":0,"index":2927},{"krate":0,"index":3002},{"krate":0,"index":3027},{"krate":0,"index":3024},{"krate":0,"index":3019},{"krate":0,"index":3021},{"krate":0,"index":3016},{"krate":0,"index":3012},{"krate":0,"index":3009},{"krate":0,"index":3006},{"krate":0,"index":2957},{"krate":0,"index":2960},{"krate":0,"index":2962},{"krate":0,"index":2968},{"krate":0,"index":2971},{"krate":0,"index":2976},{"krate":0,"index":2981},{"krate":0,"index":2985},{"krate":0,"index":2989},{"krate":0,"index":2994},{"krate":0,"index":2999},{"krate":0,"index":3074},{"krate":0,"index":3099},{"krate":0,"index":3096},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3088},{"krate":0,"index":3084},{"krate":0,"index":3081},{"krate":0,"index":3078},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3034},{"krate":0,"index":3040},{"krate":0,"index":3043},{"krate":0,"index":3048},{"krate":0,"index":3053},{"krate":0,"index":3057},{"krate":0,"index":3061},{"krate":0,"index":3066},{"krate":0,"index":3071},{"krate":0,"index":3146},{"krate":0,"index":3171},{"krate":0,"index":3168},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":3160},{"krate":0,"index":3156},{"krate":0,"index":3153},{"krate":0,"index":3150},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3112},{"krate":0,"index":3115},{"krate":0,"index":3120},{"krate":0,"index":3125},{"krate":0,"index":3129},{"krate":0,"index":3133},{"krate":0,"index":3138},{"krate":0,"index":3143},{"krate":0,"index":3218},{"krate":0,"index":3243},{"krate":0,"index":3240},{"krate":0,"index":3235},{"krate":0,"index":3237},{"krate":0,"index":3232},{"krate":0,"index":3228},{"krate":0,"index":3225},{"krate":0,"index":3222},{"krate":0,"index":3173},{"krate":0,"index":3176},{"krate":0,"index":3178},{"krate":0,"index":3184},{"krate":0,"index":3187},{"krate":0,"index":3192},{"krate":0,"index":3197},{"krate":0,"index":3201},{"krate":0,"index":3205},{"krate":0,"index":3210},{"krate":0,"index":3215},{"krate":0,"index":3290},{"krate":0,"index":3315},{"krate":0,"index":3312},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3304},{"krate":0,"index":3300},{"krate":0,"index":3297},{"krate":0,"index":3294},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3250},{"krate":0,"index":3256},{"krate":0,"index":3259},{"krate":0,"index":3264},{"krate":0,"index":3269},{"krate":0,"index":3273},{"krate":0,"index":3277},{"krate":0,"index":3282},{"krate":0,"index":3287},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3322},{"krate":0,"index":3326},{"krate":0,"index":3330},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3340},{"krate":0,"index":3344},{"krate":0,"index":3347},{"krate":0,"index":3351},{"krate":0,"index":3355},{"krate":0,"index":3359},{"krate":0,"index":3363},{"krate":0,"index":3366},{"krate":0,"index":3368},{"krate":0,"index":3371},{"krate":0,"index":3373},{"krate":0,"index":3377},{"krate":0,"index":3380},{"krate":0,"index":3384},{"krate":0,"index":3388},{"krate":0,"index":3392},{"krate":0,"index":3396},{"krate":0,"index":3398},{"krate":0,"index":3401},{"krate":0,"index":3405},{"krate":0,"index":3409},{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3423},{"krate":0,"index":3426},{"krate":0,"index":3430},{"krate":0,"index":3434},{"krate":0,"index":3438},{"krate":0,"index":3442},{"krate":0,"index":3444},{"krate":0,"index":3447},{"krate":0,"index":3451},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3463},{"krate":0,"index":3465},{"krate":0,"index":3469},{"krate":0,"index":3472},{"krate":0,"index":3476},{"krate":0,"index":3480},{"krate":0,"index":3484},{"krate":0,"index":3488},{"krate":0,"index":3491},{"krate":0,"index":3493},{"krate":0,"index":3496},{"krate":0,"index":3498},{"krate":0,"index":3502},{"krate":0,"index":3505},{"krate":0,"index":3509},{"krate":0,"index":3513},{"krate":0,"index":3517},{"krate":0,"index":3521},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3530},{"krate":0,"index":3534},{"krate":0,"index":3537},{"krate":0,"index":3539},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3548},{"krate":0,"index":3551},{"krate":0,"index":3555},{"krate":0,"index":3559},{"krate":0,"index":3563},{"krate":0,"index":3567},{"krate":0,"index":3569},{"krate":0,"index":3572},{"krate":0,"index":3576},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3585},{"krate":0,"index":3589},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3598},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3607},{"krate":0,"index":3610},{"krate":0,"index":3614},{"krate":0,"index":3618},{"krate":0,"index":3622},{"krate":0,"index":3626},{"krate":0,"index":3628},{"krate":0,"index":3631},{"krate":0,"index":3635},{"krate":0,"index":3639},{"krate":0,"index":3642},{"krate":0,"index":3644},{"krate":0,"index":3647},{"krate":0,"index":3649},{"krate":0,"index":3653},{"krate":0,"index":3656},{"krate":0,"index":3660},{"krate":0,"index":3664},{"krate":0,"index":3668},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3677},{"krate":0,"index":3681},{"krate":0,"index":3685},{"krate":0,"index":3688},{"krate":0,"index":3690},{"krate":0,"index":3693},{"krate":0,"index":3695},{"krate":0,"index":3699},{"krate":0,"index":3702},{"krate":0,"index":3706},{"krate":0,"index":3710},{"krate":0,"index":3714},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3723},{"krate":0,"index":3727},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3739},{"krate":0,"index":3741},{"krate":0,"index":3745},{"krate":0,"index":3748},{"krate":0,"index":3752},{"krate":0,"index":3756},{"krate":0,"index":3760},{"krate":0,"index":3764},{"krate":0,"index":3766},{"krate":0,"index":3769},{"krate":0,"index":3773},{"krate":0,"index":3777},{"krate":0,"index":3780},{"krate":0,"index":3782},{"krate":0,"index":3785},{"krate":0,"index":3787},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3798},{"krate":0,"index":3802},{"krate":0,"index":3806},{"krate":0,"index":3810},{"krate":0,"index":3813},{"krate":0,"index":3815},{"krate":0,"index":3818},{"krate":0,"index":3820},{"krate":0,"index":3824},{"krate":0,"index":3827},{"krate":0,"index":3831},{"krate":0,"index":3835},{"krate":0,"index":3839},{"krate":0,"index":3843},{"krate":0,"index":3846},{"krate":0,"index":3848},{"krate":0,"index":3851},{"krate":0,"index":3853},{"krate":0,"index":3857},{"krate":0,"index":3860},{"krate":0,"index":3864},{"krate":0,"index":3868},{"krate":0,"index":3872},{"krate":0,"index":3876},{"krate":0,"index":3879},{"krate":0,"index":3881},{"krate":0,"index":3884},{"krate":0,"index":3886},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3897},{"krate":0,"index":3901},{"krate":0,"index":3905},{"krate":0,"index":3909},{"krate":0,"index":3912},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3919},{"krate":0,"index":3923},{"krate":0,"index":3926},{"krate":0,"index":3930},{"krate":0,"index":3934},{"krate":0,"index":3938},{"krate":0,"index":3942},{"krate":0,"index":3944},{"krate":0,"index":3947},{"krate":0,"index":3951},{"krate":0,"index":3955},{"krate":0,"index":3958},{"krate":0,"index":3960},{"krate":0,"index":3963},{"krate":0,"index":3965},{"krate":0,"index":3969},{"krate":0,"index":3972},{"krate":0,"index":3976},{"krate":0,"index":3980},{"krate":0,"index":3984},{"krate":0,"index":3988},{"krate":0,"index":3991},{"krate":0,"index":3993},{"krate":0,"index":3996},{"krate":0,"index":3998},{"krate":0,"index":4002},{"krate":0,"index":4005},{"krate":0,"index":4009},{"krate":0,"index":4013},{"krate":0,"index":4017},{"krate":0,"index":4021},{"krate":0,"index":4024},{"krate":0,"index":4026},{"krate":0,"index":4029},{"krate":0,"index":4031},{"krate":0,"index":4035},{"krate":0,"index":4038},{"krate":0,"index":4042},{"krate":0,"index":4046},{"krate":0,"index":4050},{"krate":0,"index":4054},{"krate":0,"index":4057},{"krate":0,"index":4059},{"krate":0,"index":4062},{"krate":0,"index":4064},{"krate":0,"index":4068},{"krate":0,"index":4071},{"krate":0,"index":4075},{"krate":0,"index":4079},{"krate":0,"index":4083},{"krate":0,"index":4087},{"krate":0,"index":4089},{"krate":0,"index":4092},{"krate":0,"index":4096},{"krate":0,"index":4100},{"krate":0,"index":4103},{"krate":0,"index":4105},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4114},{"krate":0,"index":4117},{"krate":0,"index":4121},{"krate":0,"index":4125},{"krate":0,"index":4129},{"krate":0,"index":4133},{"krate":0,"index":4136},{"krate":0,"index":4138},{"krate":0,"index":4141},{"krate":0,"index":4143},{"krate":0,"index":4147},{"krate":0,"index":4150},{"krate":0,"index":4154},{"krate":0,"index":4158},{"krate":0,"index":4162},{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":4171},{"krate":0,"index":4174},{"krate":0,"index":4176},{"krate":0,"index":4180},{"krate":0,"index":4183},{"krate":0,"index":4187},{"krate":0,"index":4191},{"krate":0,"index":4195},{"krate":0,"index":4199},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4208},{"krate":0,"index":4212},{"krate":0,"index":4215},{"krate":0,"index":4217},{"krate":0,"index":4220},{"krate":0,"index":4222},{"krate":0,"index":4226},{"krate":0,"index":4229},{"krate":0,"index":4233},{"krate":0,"index":4237},{"krate":0,"index":4241},{"krate":0,"index":4245},{"krate":0,"index":4248},{"krate":0,"index":4250},{"krate":0,"index":4253},{"krate":0,"index":4255},{"krate":0,"index":4259},{"krate":0,"index":4262},{"krate":0,"index":4266},{"krate":0,"index":4270},{"krate":0,"index":4274},{"krate":0,"index":4278},{"krate":0,"index":4280},{"krate":0,"index":4283},{"krate":0,"index":4287},{"krate":0,"index":4291},{"krate":0,"index":4294},{"krate":0,"index":4296},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":4305},{"krate":0,"index":4308},{"krate":0,"index":4312},{"krate":0,"index":4316},{"krate":0,"index":4320},{"krate":0,"index":4324},{"krate":0,"index":4327},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4334},{"krate":0,"index":4338},{"krate":0,"index":4341},{"krate":0,"index":4345},{"krate":0,"index":4349},{"krate":0,"index":4353},{"krate":0,"index":4357},{"krate":0,"index":4360},{"krate":0,"index":4362},{"krate":0,"index":4365},{"krate":0,"index":4367},{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4378},{"krate":0,"index":4382},{"krate":0,"index":4386},{"krate":0,"index":4390},{"krate":0,"index":4393},{"krate":0,"index":4395},{"krate":0,"index":4398},{"krate":0,"index":4400},{"krate":0,"index":4404},{"krate":0,"index":4407},{"krate":0,"index":4411},{"krate":0,"index":4415},{"krate":0,"index":4419},{"krate":0,"index":4423},{"krate":0,"index":4426},{"krate":0,"index":4428},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4437},{"krate":0,"index":4440},{"krate":0,"index":4444},{"krate":0,"index":4448},{"krate":0,"index":4452},{"krate":0,"index":4456},{"krate":0,"index":4458},{"krate":0,"index":4461},{"krate":0,"index":4465},{"krate":0,"index":4469},{"krate":0,"index":4472},{"krate":0,"index":4474},{"krate":0,"index":4477},{"krate":0,"index":4479},{"krate":0,"index":4483},{"krate":0,"index":4486},{"krate":0,"index":4490},{"krate":0,"index":4494},{"krate":0,"index":4498},{"krate":0,"index":4502},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4510},{"krate":0,"index":4512},{"krate":0,"index":4516},{"krate":0,"index":4519},{"krate":0,"index":4523},{"krate":0,"index":4527},{"krate":0,"index":4531},{"krate":0,"index":4535},{"krate":0,"index":4538},{"krate":0,"index":4540},{"krate":0,"index":4543},{"krate":0,"index":4545},{"krate":0,"index":4549},{"krate":0,"index":4552},{"krate":0,"index":4556},{"krate":0,"index":4560},{"krate":0,"index":4564},{"krate":0,"index":4568},{"krate":0,"index":4571},{"krate":0,"index":4573},{"krate":0,"index":4576},{"krate":0,"index":4578},{"krate":0,"index":4582},{"krate":0,"index":4585},{"krate":0,"index":4589},{"krate":0,"index":4593},{"krate":0,"index":4597},{"krate":0,"index":4601},{"krate":0,"index":4603},{"krate":0,"index":4606},{"krate":0,"index":4610},{"krate":0,"index":4614},{"krate":0,"index":4617},{"krate":0,"index":4619},{"krate":0,"index":4622},{"krate":0,"index":4624},{"krate":0,"index":4628},{"krate":0,"index":4631},{"krate":0,"index":4635},{"krate":0,"index":4639},{"krate":0,"index":4643},{"krate":0,"index":4647},{"krate":0,"index":4650},{"krate":0,"index":4652},{"krate":0,"index":4655},{"krate":0,"index":4657},{"krate":0,"index":4661},{"krate":0,"index":4664},{"krate":0,"index":4668},{"krate":0,"index":4672},{"krate":0,"index":4676},{"krate":0,"index":4680},{"krate":0,"index":4683},{"krate":0,"index":4685},{"krate":0,"index":4688},{"krate":0,"index":4690},{"krate":0,"index":4694},{"krate":0,"index":4697},{"krate":0,"index":4701},{"krate":0,"index":4705},{"krate":0,"index":4709},{"krate":0,"index":4713},{"krate":0,"index":4715},{"krate":0,"index":4718},{"krate":0,"index":4722},{"krate":0,"index":4726},{"krate":0,"index":4729},{"krate":0,"index":4731},{"krate":0,"index":4734},{"krate":0,"index":4736},{"krate":0,"index":4740},{"krate":0,"index":4743},{"krate":0,"index":4747},{"krate":0,"index":4751},{"krate":0,"index":4755},{"krate":0,"index":4759},{"krate":0,"index":4762},{"krate":0,"index":4764},{"krate":0,"index":4767},{"krate":0,"index":4769},{"krate":0,"index":4773},{"krate":0,"index":4776},{"krate":0,"index":4780},{"krate":0,"index":4784},{"krate":0,"index":4788},{"krate":0,"index":4792},{"krate":0,"index":4794},{"krate":0,"index":4797},{"krate":0,"index":4801},{"krate":0,"index":4805},{"krate":0,"index":4808},{"krate":0,"index":4810},{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4819},{"krate":0,"index":4822},{"krate":0,"index":4826},{"krate":0,"index":4830},{"krate":0,"index":4834},{"krate":0,"index":4838},{"krate":0,"index":4840},{"krate":0,"index":4843},{"krate":0,"index":4847},{"krate":0,"index":4851},{"krate":0,"index":4853},{"krate":0,"index":4856},{"krate":0,"index":4860},{"krate":0,"index":4864},{"krate":0,"index":4867},{"krate":0,"index":4869},{"krate":0,"index":4872},{"krate":0,"index":4874},{"krate":0,"index":4878},{"krate":0,"index":4881},{"krate":0,"index":4885},{"krate":0,"index":4889},{"krate":0,"index":4893},{"krate":0,"index":4897},{"krate":0,"index":4900},{"krate":0,"index":4902},{"krate":0,"index":4905},{"krate":0,"index":4907},{"krate":0,"index":4911},{"krate":0,"index":4914},{"krate":0,"index":4918},{"krate":0,"index":4922},{"krate":0,"index":4926},{"krate":0,"index":4930},{"krate":0,"index":4932},{"krate":0,"index":4935},{"krate":0,"index":4939},{"krate":0,"index":4943},{"krate":0,"index":4946},{"krate":0,"index":4948},{"krate":0,"index":4951},{"krate":0,"index":4953},{"krate":0,"index":4957},{"krate":0,"index":4960},{"krate":0,"index":4964},{"krate":0,"index":4968},{"krate":0,"index":4972},{"krate":0,"index":4976},{"krate":0,"index":4978},{"krate":0,"index":4981},{"krate":0,"index":4985},{"krate":0,"index":4989},{"krate":0,"index":4992},{"krate":0,"index":4994},{"krate":0,"index":4997},{"krate":0,"index":4999},{"krate":0,"index":5003},{"krate":0,"index":5006},{"krate":0,"index":5010},{"krate":0,"index":5014},{"krate":0,"index":5018},{"krate":0,"index":5022},{"krate":0,"index":5025},{"krate":0,"index":5027},{"krate":0,"index":5030},{"krate":0,"index":5032},{"krate":0,"index":5036},{"krate":0,"index":5039},{"krate":0,"index":5043},{"krate":0,"index":5047},{"krate":0,"index":5051},{"krate":0,"index":5055},{"krate":0,"index":5057},{"krate":0,"index":5060},{"krate":0,"index":5064},{"krate":0,"index":5068},{"krate":0,"index":5071},{"krate":0,"index":5073},{"krate":0,"index":5076},{"krate":0,"index":5078},{"krate":0,"index":5082},{"krate":0,"index":5085},{"krate":0,"index":5089},{"krate":0,"index":5093},{"krate":0,"index":5097},{"krate":0,"index":5101},{"krate":0,"index":5103},{"krate":0,"index":5106},{"krate":0,"index":5110},{"krate":0,"index":297},{"krate":0,"index":318}],"decl_id":null,"docs":" Rate-type units\n","sig":null,"attributes":[{"value":"/ Rate-type units","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87777,"byte_end":87796,"line_start":376,"line_end":376,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1634},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92462,"byte_end":92471,"line_start":516,"line_end":516,"column_start":16,"column_end":25},"name":"Mebihertz","qualname":"::rate::units::Mebihertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"Hertz × 1,048,576\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1706},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92527,"byte_end":92536,"line_start":517,"line_end":517,"column_start":16,"column_end":25},"name":"Megahertz","qualname":"::rate::units::Megahertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"Hertz × 1,000,000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92592,"byte_end":92601,"line_start":518,"line_end":518,"column_start":16,"column_end":25},"name":"Kibihertz","qualname":"::rate::units::Kibihertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"Hertz × 1,024\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92649,"byte_end":92658,"line_start":519,"line_end":519,"column_start":16,"column_end":25},"name":"Kilohertz","qualname":"::rate::units::Kilohertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"Hertz × 1,000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1922},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92706,"byte_end":92711,"line_start":520,"line_end":520,"column_start":16,"column_end":21},"name":"Hertz","qualname":"::rate::units::Hertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"Hertz\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1994},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92746,"byte_end":92755,"line_start":521,"line_end":521,"column_start":16,"column_end":25},"name":"Decihertz","qualname":"::rate::units::Decihertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"Hertz / 10\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2066},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92796,"byte_end":92806,"line_start":522,"line_end":522,"column_start":16,"column_end":26},"name":"Centihertz","qualname":"::rate::units::Centihertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"Hertz / 100\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2138},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92849,"byte_end":92859,"line_start":523,"line_end":523,"column_start":16,"column_end":26},"name":"Millihertz","qualname":"::rate::units::Millihertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"Hertz / 1000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2210},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92905,"byte_end":92915,"line_start":524,"line_end":524,"column_start":16,"column_end":26},"name":"Microhertz","qualname":"::rate::units::Microhertz","value":"","parent":null,"children":[],"decl_id":null,"docs":"Hertz / 1,000,000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2282},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":92979,"byte_end":92997,"line_start":526,"line_end":526,"column_start":9,"column_end":27},"name":"MebibytesPerSecond","qualname":"::rate::units::MebibytesPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bytes/s × 1,048,576\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2354},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93089,"byte_end":93107,"line_start":531,"line_end":531,"column_start":9,"column_end":27},"name":"MegabytesPerSecond","qualname":"::rate::units::MegabytesPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bytes/s × 1,000,000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2426},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93190,"byte_end":93208,"line_start":535,"line_end":535,"column_start":16,"column_end":34},"name":"KibibytesPerSecond","qualname":"::rate::units::KibibytesPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bytes/s × 1,024\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2498},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93262,"byte_end":93280,"line_start":536,"line_end":536,"column_start":16,"column_end":34},"name":"KilobytesPerSecond","qualname":"::rate::units::KilobytesPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bytes/s × 1,000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2570},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93334,"byte_end":93348,"line_start":537,"line_end":537,"column_start":16,"column_end":30},"name":"BytesPerSecond","qualname":"::rate::units::BytesPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bytes/s\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2642},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93385,"byte_end":93402,"line_start":538,"line_end":538,"column_start":16,"column_end":33},"name":"MebibitsPerSecond","qualname":"::rate::units::MebibitsPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bits/s × 1,048,576\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2714},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93459,"byte_end":93476,"line_start":539,"line_end":539,"column_start":16,"column_end":33},"name":"MegabitsPerSecond","qualname":"::rate::units::MegabitsPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bits/s × 1,000,000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2786},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93533,"byte_end":93550,"line_start":540,"line_end":540,"column_start":16,"column_end":33},"name":"KibibitsPerSecond","qualname":"::rate::units::KibibitsPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bits/s × 1,024\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2858},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93599,"byte_end":93616,"line_start":541,"line_end":541,"column_start":16,"column_end":33},"name":"KilobitsPerSecond","qualname":"::rate::units::KilobitsPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bits/s × 1,000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2930},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93665,"byte_end":93678,"line_start":542,"line_end":542,"column_start":16,"column_end":29},"name":"BitsPerSecond","qualname":"::rate::units::BitsPerSecond","value":"","parent":null,"children":[],"decl_id":null,"docs":"Bits/s\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3002},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93714,"byte_end":93722,"line_start":543,"line_end":543,"column_start":16,"column_end":24},"name":"Mebibaud","qualname":"::rate::units::Mebibaud","value":"","parent":null,"children":[],"decl_id":null,"docs":"Baud × 1,048,576\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3074},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93777,"byte_end":93785,"line_start":544,"line_end":544,"column_start":16,"column_end":24},"name":"Megabaud","qualname":"::rate::units::Megabaud","value":"","parent":null,"children":[],"decl_id":null,"docs":"Baud × 1,000,000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3146},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93840,"byte_end":93848,"line_start":545,"line_end":545,"column_start":16,"column_end":24},"name":"Kibibaud","qualname":"::rate::units::Kibibaud","value":"","parent":null,"children":[],"decl_id":null,"docs":"Baud × 1,024\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3218},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93895,"byte_end":93903,"line_start":546,"line_end":546,"column_start":16,"column_end":24},"name":"Kilobaud","qualname":"::rate::units::Kilobaud","value":"","parent":null,"children":[],"decl_id":null,"docs":"Baud × 1,000\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3290},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":93950,"byte_end":93954,"line_start":547,"line_end":547,"column_start":16,"column_end":20},"name":"Baud","qualname":"::rate::units::Baud","value":"","parent":null,"children":[],"decl_id":null,"docs":"Baud\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":297},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104057,"byte_end":104067,"line_start":796,"line_end":796,"column_start":15,"column_end":25},"name":"Extensions","qualname":"::rate::units::Extensions","value":"Extensions: TimeInt","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"decl_id":null,"docs":" Create rate-based extensions from primitive numeric types.","sig":null,"attributes":[{"value":"/ Create rate-based extensions from primitive numeric types.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":102857,"byte_end":102919,"line_start":770,"line_end":770,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":102924,"byte_end":102927,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":102932,"byte_end":102943,"line_start":772,"line_end":772,"column_start":5,"column_end":16}},{"value":"/ # use embedded_time::{rate::*};","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":102948,"byte_end":102983,"line_start":773,"line_end":773,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(5.MiHz(), Mebihertz(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":102988,"byte_end":103031,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(5.MHz(), Megahertz(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103036,"byte_end":103078,"line_start":775,"line_end":775,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(5.KiHz(), Kibihertz(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103083,"byte_end":103126,"line_start":776,"line_end":776,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(5.kHz(), Kilohertz(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103131,"byte_end":103173,"line_start":777,"line_end":777,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(5.Hz(), Hertz(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103178,"byte_end":103215,"line_start":778,"line_end":778,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(5.MiBps(), MebibytesPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103220,"byte_end":103273,"line_start":779,"line_end":779,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(5.MBps(), MegabytesPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103278,"byte_end":103330,"line_start":780,"line_end":780,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(5.KiBps(), KibibytesPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103335,"byte_end":103388,"line_start":781,"line_end":781,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(5.kBps(), KilobytesPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103393,"byte_end":103445,"line_start":782,"line_end":782,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(5.Bps(), BytesPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103450,"byte_end":103497,"line_start":783,"line_end":783,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(5.Mibps(), MebibitsPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103502,"byte_end":103554,"line_start":784,"line_end":784,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(5.Mbps(), MegabitsPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103559,"byte_end":103610,"line_start":785,"line_end":785,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.Kibps(), KibibitsPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103615,"byte_end":103667,"line_start":786,"line_end":786,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(5.kbps(), KilobitsPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103672,"byte_end":103723,"line_start":787,"line_end":787,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.bps(), BitsPerSecond(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103728,"byte_end":103774,"line_start":788,"line_end":788,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(5.MiBd(), Mebibaud(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103779,"byte_end":103821,"line_start":789,"line_end":789,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(5.MBd(), Megabaud(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103826,"byte_end":103867,"line_start":790,"line_end":790,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(5.KiBd(), Kibibaud(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103872,"byte_end":103914,"line_start":791,"line_end":791,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(5.kBd(), Kilobaud(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103919,"byte_end":103960,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(5.Bd(), Baud(5_u32));","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":103965,"byte_end":104001,"line_start":793,"line_end":793,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104006,"byte_end":104013,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104018,"byte_end":104042,"line_start":795,"line_end":795,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104112,"byte_end":104116,"line_start":798,"line_end":798,"column_start":12,"column_end":16},"name":"MiHz","qualname":"::rate::units::Extensions::MiHz","value":"pub fn MiHz(Self) -> Mebihertz<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" mebihertz\n","sig":null,"attributes":[{"value":"/ mebihertz","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104087,"byte_end":104100,"line_start":797,"line_end":797,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104221,"byte_end":104224,"line_start":803,"line_end":803,"column_start":12,"column_end":15},"name":"MHz","qualname":"::rate::units::Extensions::MHz","value":"pub fn MHz(Self) -> Megahertz<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" megahertz\n","sig":null,"attributes":[{"value":"/ megahertz","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104196,"byte_end":104209,"line_start":802,"line_end":802,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104329,"byte_end":104333,"line_start":808,"line_end":808,"column_start":12,"column_end":16},"name":"KiHz","qualname":"::rate::units::Extensions::KiHz","value":"pub fn KiHz(Self) -> Kibihertz<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" kibihertz\n","sig":null,"attributes":[{"value":"/ kibihertz","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104304,"byte_end":104317,"line_start":807,"line_end":807,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104438,"byte_end":104441,"line_start":813,"line_end":813,"column_start":12,"column_end":15},"name":"kHz","qualname":"::rate::units::Extensions::kHz","value":"pub fn kHz(Self) -> Kilohertz<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" kilohertz\n","sig":null,"attributes":[{"value":"/ kilohertz","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104413,"byte_end":104426,"line_start":812,"line_end":812,"column_start":9,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104542,"byte_end":104544,"line_start":818,"line_end":818,"column_start":12,"column_end":14},"name":"Hz","qualname":"::rate::units::Extensions::Hz","value":"pub fn Hz(Self) -> Hertz<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" hertz\n","sig":null,"attributes":[{"value":"/ hertz","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104521,"byte_end":104530,"line_start":817,"line_end":817,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104652,"byte_end":104657,"line_start":823,"line_end":823,"column_start":12,"column_end":17},"name":"MiBps","qualname":"::rate::units::Extensions::MiBps","value":"pub fn MiBps(Self) -> MebibytesPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" mebibytes per second\n","sig":null,"attributes":[{"value":"/ mebibytes per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104616,"byte_end":104640,"line_start":822,"line_end":822,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104791,"byte_end":104795,"line_start":828,"line_end":828,"column_start":12,"column_end":16},"name":"MBps","qualname":"::rate::units::Extensions::MBps","value":"pub fn MBps(Self) -> MegabytesPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" megabytes per second\n","sig":null,"attributes":[{"value":"/ megabytes per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104755,"byte_end":104779,"line_start":827,"line_end":827,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104929,"byte_end":104934,"line_start":833,"line_end":833,"column_start":12,"column_end":17},"name":"KiBps","qualname":"::rate::units::Extensions::KiBps","value":"pub fn KiBps(Self) -> KibibytesPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" kibibytes per second\n","sig":null,"attributes":[{"value":"/ kibibytes per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104893,"byte_end":104917,"line_start":832,"line_end":832,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105068,"byte_end":105072,"line_start":838,"line_end":838,"column_start":12,"column_end":16},"name":"kBps","qualname":"::rate::units::Extensions::kBps","value":"pub fn kBps(Self) -> KilobytesPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" kiloBytes per second\n","sig":null,"attributes":[{"value":"/ kiloBytes per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105032,"byte_end":105056,"line_start":837,"line_end":837,"column_start":9,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105202,"byte_end":105205,"line_start":843,"line_end":843,"column_start":12,"column_end":15},"name":"Bps","qualname":"::rate::units::Extensions::Bps","value":"pub fn Bps(Self) -> BytesPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" bytes per second\n","sig":null,"attributes":[{"value":"/ bytes per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105170,"byte_end":105190,"line_start":842,"line_end":842,"column_start":9,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105330,"byte_end":105335,"line_start":848,"line_end":848,"column_start":12,"column_end":17},"name":"Mibps","qualname":"::rate::units::Extensions::Mibps","value":"pub fn Mibps(Self) -> MebibitsPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" mebibits per second\n","sig":null,"attributes":[{"value":"/ mebibits per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105295,"byte_end":105318,"line_start":847,"line_end":847,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105466,"byte_end":105470,"line_start":853,"line_end":853,"column_start":12,"column_end":16},"name":"Mbps","qualname":"::rate::units::Extensions::Mbps","value":"pub fn Mbps(Self) -> MegabitsPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" megabits per second\n","sig":null,"attributes":[{"value":"/ megabits per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105431,"byte_end":105454,"line_start":852,"line_end":852,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105601,"byte_end":105606,"line_start":858,"line_end":858,"column_start":12,"column_end":17},"name":"Kibps","qualname":"::rate::units::Extensions::Kibps","value":"pub fn Kibps(Self) -> KibibitsPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" kibibits per second\n","sig":null,"attributes":[{"value":"/ kibibits per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105566,"byte_end":105589,"line_start":857,"line_end":857,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105737,"byte_end":105741,"line_start":863,"line_end":863,"column_start":12,"column_end":16},"name":"kbps","qualname":"::rate::units::Extensions::kbps","value":"pub fn kbps(Self) -> KilobitsPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" kilobits per second\n","sig":null,"attributes":[{"value":"/ kilobits per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105702,"byte_end":105725,"line_start":862,"line_end":862,"column_start":9,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105868,"byte_end":105871,"line_start":868,"line_end":868,"column_start":12,"column_end":15},"name":"bps","qualname":"::rate::units::Extensions::bps","value":"pub fn bps(Self) -> BitsPerSecond<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" bits per second\n","sig":null,"attributes":[{"value":"/ bits per second","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105837,"byte_end":105856,"line_start":867,"line_end":867,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105983,"byte_end":105987,"line_start":873,"line_end":873,"column_start":12,"column_end":16},"name":"MiBd","qualname":"::rate::units::Extensions::MiBd","value":"pub fn MiBd(Self) -> Mebibaud<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" mebibaud\n","sig":null,"attributes":[{"value":"/ mebibaud","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":105959,"byte_end":105971,"line_start":872,"line_end":872,"column_start":9,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":106089,"byte_end":106092,"line_start":878,"line_end":878,"column_start":12,"column_end":15},"name":"MBd","qualname":"::rate::units::Extensions::MBd","value":"pub fn MBd(Self) -> Megabaud<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" megabaud\n","sig":null,"attributes":[{"value":"/ megabaud","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":106065,"byte_end":106077,"line_start":877,"line_end":877,"column_start":9,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":106194,"byte_end":106198,"line_start":883,"line_end":883,"column_start":12,"column_end":16},"name":"KiBd","qualname":"::rate::units::Extensions::KiBd","value":"pub fn KiBd(Self) -> Kibibaud<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" kibibaud\n","sig":null,"attributes":[{"value":"/ kibibaud","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":106170,"byte_end":106182,"line_start":882,"line_end":882,"column_start":9,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":106300,"byte_end":106303,"line_start":888,"line_end":888,"column_start":12,"column_end":15},"name":"kBd","qualname":"::rate::units::Extensions::kBd","value":"pub fn kBd(Self) -> Kilobaud<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" kilobaud\n","sig":null,"attributes":[{"value":"/ kilobaud","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":106276,"byte_end":106288,"line_start":887,"line_end":887,"column_start":9,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":106401,"byte_end":106403,"line_start":893,"line_end":893,"column_start":12,"column_end":14},"name":"Bd","qualname":"::rate::units::Extensions::Bd","value":"pub fn Bd(Self) -> Baud<Self>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" baud\n","sig":null,"attributes":[{"value":"/ baud","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":106381,"byte_end":106389,"line_start":892,"line_end":892,"column_start":9,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":324},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106649,"byte_end":106656,"line_start":5,"line_end":5,"column_start":11,"column_end":18},"name":"TimeInt","qualname":"::time_int::TimeInt","value":"TimeInt: Copy + num::Integer + num::Bounded + num::traits::WrappingAdd +\nnum::traits::WrappingSub + num::CheckedAdd + num::CheckedSub +\nnum::CheckedMul + num::CheckedDiv + From<u32> + ops::Mul<Fraction, Output =\nSelf> + ops::Div<Fraction, Output = Self> + fmt::Display + fmt::Debug","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":" The core inner-type trait for time-related types\n","sig":null,"attributes":[{"value":"/ The core inner-type trait for time-related types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106586,"byte_end":106638,"line_start":4,"line_end":4,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":107134,"byte_end":107154,"line_start":24,"line_end":24,"column_start":8,"column_end":28},"name":"checked_mul_fraction","qualname":"::time_int::TimeInt::checked_mul_fraction","value":"pub fn checked_mul_fraction(&Self, &Fraction) -> Option<Self>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Checked integer × [`Fraction`] = integer","sig":null,"attributes":[{"value":"/ Checked integer × [`Fraction`] = integer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106993,"byte_end":107038,"line_start":21,"line_end":21,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":107043,"byte_end":107046,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Returns truncated (rounded toward `0`) integer or [`None`] upon failure","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":107051,"byte_end":107126,"line_start":23,"line_end":23,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":107471,"byte_end":107491,"line_start":32,"line_end":32,"column_start":8,"column_end":28},"name":"checked_div_fraction","qualname":"::time_int::TimeInt::checked_div_fraction","value":"pub fn checked_div_fraction(&Self, &Fraction) -> Option<Self>","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":" Checked integer / [`Fraction`] = integer","sig":null,"attributes":[{"value":"/ Checked integer / [`Fraction`] = integer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":107331,"byte_end":107375,"line_start":29,"line_end":29,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":107380,"byte_end":107383,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Returns truncated (rounded toward `0`) integer or [`None`] upon failure","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":107388,"byte_end":107463,"line_start":31,"line_end":31,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":329},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"timer","qualname":"::timer","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":5401},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":5149},{"krate":0,"index":5168},{"krate":0,"index":5160},{"krate":0,"index":346},{"krate":0,"index":351},{"krate":0,"index":359},{"krate":0,"index":365},{"krate":0,"index":373},{"krate":0,"index":379}],"decl_id":null,"docs":" Software timers coupled to a [crate::Clock] implementation\n","sig":null,"attributes":[{"value":"/ Software timers coupled to a [crate::Clock] implementation","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":108453,"byte_end":108515,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":345},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":108798,"byte_end":108803,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"param","qualname":"::timer::param","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5119},{"krate":0,"index":5116},{"krate":0,"index":5121},{"krate":0,"index":5126},{"krate":0,"index":5123},{"krate":0,"index":5128},{"krate":0,"index":5133},{"krate":0,"index":5130},{"krate":0,"index":5135},{"krate":0,"index":5140},{"krate":0,"index":5137},{"krate":0,"index":5142},{"krate":0,"index":5147},{"krate":0,"index":5144}],"decl_id":null,"docs":" Timer type/state parameters\n","sig":null,"attributes":[{"value":"/ Timer type/state parameters","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":108758,"byte_end":108789,"line_start":12,"line_end":12,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5114},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":108874,"byte_end":108878,"line_start":16,"line_end":16,"column_start":16,"column_end":20},"name":"None","qualname":"::timer::param::None","value":"","parent":null,"children":[],"decl_id":null,"docs":" Parameter not set\n","sig":null,"attributes":[{"value":"/ Parameter not set","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":108810,"byte_end":108831,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":5121},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":108955,"byte_end":108960,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"name":"Armed","qualname":"::timer::param::Armed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Timer is ready to start\n","sig":null,"attributes":[{"value":"/ Timer is ready to start","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":108885,"byte_end":108912,"line_start":18,"line_end":18,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5128},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109030,"byte_end":109037,"line_start":24,"line_end":24,"column_start":16,"column_end":23},"name":"Running","qualname":"::timer::param::Running","value":"","parent":null,"children":[],"decl_id":null,"docs":" Timer is running\n","sig":null,"attributes":[{"value":"/ Timer is running","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":108967,"byte_end":108987,"line_start":22,"line_end":22,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":5135},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109139,"byte_end":109147,"line_start":28,"line_end":28,"column_start":16,"column_end":24},"name":"Periodic","qualname":"::timer::param::Periodic","value":"","parent":null,"children":[],"decl_id":null,"docs":" Timer will automatically restart when it expires\n","sig":null,"attributes":[{"value":"/ Timer will automatically restart when it expires","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109044,"byte_end":109096,"line_start":26,"line_end":26,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5142},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109232,"byte_end":109239,"line_start":32,"line_end":32,"column_start":16,"column_end":23},"name":"OneShot","qualname":"::timer::param::OneShot","value":"","parent":null,"children":[],"decl_id":null,"docs":" Timer will stop when it expires\n","sig":null,"attributes":[{"value":"/ Timer will stop when it expires","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109154,"byte_end":109189,"line_start":30,"line_end":30,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5149},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109415,"byte_end":109420,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Timer","qualname":"::timer::Timer","value":"Timer {  }","parent":null,"children":[{"krate":0,"index":5155},{"krate":0,"index":5156},{"krate":0,"index":5157},{"krate":0,"index":5158},{"krate":0,"index":5159}],"decl_id":null,"docs":" A `Timer` counts toward an expiration, can be polled for elapsed and remaining time, and can be\n one-shot or continuous/periodic.\n","sig":null,"attributes":[{"value":"/ A `Timer` counts toward an expiration, can be polled for elapsed and remaining time, and can be","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109244,"byte_end":109343,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"/ one-shot or continuous/periodic.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109344,"byte_end":109380,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109801,"byte_end":109804,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Timer>::new","value":"pub fn new(&Clock, Dur) -> Timer<, OneShot, Armed, Clock, Dur>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new, `OneShot` `Timer`\n","sig":null,"attributes":[{"value":"/ Construct a new, `OneShot` `Timer`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109713,"byte_end":109751,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109756,"byte_end":109789,"line_start":48,"line_end":48,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":110246,"byte_end":110258,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"name":"into_oneshot","qualname":"<Timer>::into_oneshot","value":"pub fn into_oneshot(Self) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Change timer type to one-shot\n","sig":null,"attributes":[{"value":"/ Change timer type to one-shot","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":110201,"byte_end":110234,"line_start":61,"line_end":61,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":110596,"byte_end":110609,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"into_periodic","qualname":"<Timer>::into_periodic","value":"pub fn into_periodic(Self) -> Timer","parent":null,"children":[],"decl_id":null,"docs":" Change timer type into periodic\n","sig":null,"attributes":[{"value":"/ Change timer type into periodic","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":110549,"byte_end":110584,"line_start":72,"line_end":72,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":111041,"byte_end":111046,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"start","qualname":"<Timer>::start","value":"pub fn start(Self) -> Result<Timer, TimeError> where\nClock::T: TryFrom<Dur::T>, Dur: FixedPoint","parent":null,"children":[],"decl_id":null,"docs":" Start the timer from this instant\n","sig":null,"attributes":[{"value":"/ Start the timer from this instant","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":110992,"byte_end":111029,"line_start":85,"line_end":85,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":112005,"byte_end":112012,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Timer>::elapsed","value":"pub fn elapsed(&Self) -> Result<Dur, TimeError> where Dur: FixedPoint +\nTryFrom<duration::Generic<Clock::T>, Error = ConversionError>,\nDur::T: TryFrom<Clock::T>, Clock::T: TryFrom<Dur::T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Duration`] of time elapsed since it was started","sig":null,"attributes":[{"value":"/ Returns the [`Duration`] of time elapsed since it was started","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":111770,"byte_end":111835,"line_start":110,"line_end":110,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":111840,"byte_end":111843,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ **The duration is truncated, not rounded**.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":111848,"byte_end":111895,"line_start":112,"line_end":112,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":111900,"byte_end":111903,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The units of the [`Duration`] are the same as that used to construct the `Timer`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":111908,"byte_end":111993,"line_start":114,"line_end":114,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":112842,"byte_end":112851,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Timer>::remaining","value":"pub fn remaining(&Self) -> Result<Dur, TimeError> where Dur: FixedPoint +\nTryFrom<duration::Generic<Clock::T>, Error = ConversionError>,\nDur::T: TryFrom<u32> + TryFrom<Clock::T>, Clock::T: TryFrom<Dur::T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Duration`] until the expiration of the timer","sig":null,"attributes":[{"value":"/ Returns the [`Duration`] until the expiration of the timer","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":112610,"byte_end":112672,"line_start":135,"line_end":135,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":112677,"byte_end":112680,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ **The duration is truncated, not rounded**.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":112685,"byte_end":112732,"line_start":137,"line_end":137,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":112737,"byte_end":112740,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The units of the [`Duration`] are the same as that used to construct the `Timer`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":112745,"byte_end":112830,"line_start":139,"line_end":139,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":113603,"byte_end":113607,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"wait","qualname":"<Timer>::wait","value":"pub fn wait(Self) -> Result<Timer, TimeError>","parent":null,"children":[],"decl_id":null,"docs":" Block until the timer has expired\n","sig":null,"attributes":[{"value":"/ Block until the timer has expired","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":113554,"byte_end":113591,"line_start":162,"line_end":162,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114018,"byte_end":114028,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"is_expired","qualname":"<Timer>::is_expired","value":"pub fn is_expired(&Self) -> Result<bool, TimeError>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the timer has expired","sig":null,"attributes":[{"value":"/ Check whether the timer has expired","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":113924,"byte_end":113963,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":113968,"byte_end":113971,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The timer is not restarted","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":113976,"byte_end":114006,"line_start":175,"line_end":175,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114277,"byte_end":114281,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"wait","qualname":"<Timer>::wait","value":"pub fn wait(Self) -> Result<Self, TimeError> where Instant<Clock>: Add<Dur,\nOutput = Instant<Clock>>","parent":null,"children":[],"decl_id":null,"docs":" Block until the timer has expired","sig":null,"attributes":[{"value":"/ Block until the timer has expired","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114189,"byte_end":114226,"line_start":182,"line_end":182,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114231,"byte_end":114234,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The timer is restarted","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114239,"byte_end":114265,"line_start":184,"line_end":184,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114990,"byte_end":115005,"line_start":206,"line_end":206,"column_start":12,"column_end":27},"name":"period_complete","qualname":"<Timer>::period_complete","value":"pub fn period_complete(&mut Self) -> Result<bool, TimeError> where\nInstant<Clock>: Add<Dur, Output = Instant<Clock>>","parent":null,"children":[],"decl_id":null,"docs":" Check whether a _periodic_ timer has elapsed","sig":null,"attributes":[{"value":"/ Check whether a _periodic_ timer has elapsed","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114872,"byte_end":114920,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114925,"byte_end":114928,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The timer is restarted if it has elapsed.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114933,"byte_end":114978,"line_start":205,"line_end":205,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5176},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10613,"byte_end":10624,"line_start":300,"line_end":300,"column_start":5,"column_end":16},"name":"Unspecified","qualname":"::TimeError::Unspecified","value":"TimeError::Unspecified","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":" Exact cause of failure is unknown\n","sig":null,"attributes":[{"value":"/ Exact cause of failure is unknown","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10571,"byte_end":10608,"line_start":299,"line_end":299,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5178},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10671,"byte_end":10688,"line_start":302,"line_end":302,"column_start":5,"column_end":22},"name":"ConversionFailure","qualname":"::TimeError::ConversionFailure","value":"TimeError::ConversionFailure","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":" Attempted type conversion failed\n","sig":null,"attributes":[{"value":"/ Attempted type conversion failed","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10630,"byte_end":10666,"line_start":301,"line_end":301,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5180},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10749,"byte_end":10757,"line_start":304,"line_end":304,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::TimeError::Overflow","value":"TimeError::Overflow","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":" Result is outside of those valid for this type\n","sig":null,"attributes":[{"value":"/ Result is outside of those valid for this type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10694,"byte_end":10744,"line_start":303,"line_end":303,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5182},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10799,"byte_end":10808,"line_start":306,"line_end":306,"column_start":5,"column_end":14},"name":"DivByZero","qualname":"::TimeError::DivByZero","value":"TimeError::DivByZero","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":" Attempted to divide by zero\n","sig":null,"attributes":[{"value":"/ Attempted to divide by zero","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10763,"byte_end":10794,"line_start":305,"line_end":305,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5184},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10901,"byte_end":10912,"line_start":308,"line_end":308,"column_start":5,"column_end":16},"name":"NegDuration","qualname":"::TimeError::NegDuration","value":"TimeError::NegDuration","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":" Resulting [`Duration`](duration/trait.Duration.html) is negative (not allowed)\n","sig":null,"attributes":[{"value":"/ Resulting [`Duration`](duration/trait.Duration.html) is negative (not allowed)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10814,"byte_end":10896,"line_start":307,"line_end":307,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5186},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10966,"byte_end":10971,"line_start":310,"line_end":310,"column_start":5,"column_end":10},"name":"Clock","qualname":"::TimeError::Clock","value":"TimeError::Clock(clock::Error)","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":" [`Clock`]-implementation-specific error\n","sig":null,"attributes":[{"value":"/ [`Clock`]-implementation-specific error","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10918,"byte_end":10961,"line_start":309,"line_end":309,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":5175},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10555,"byte_end":10564,"line_start":298,"line_end":298,"column_start":10,"column_end":19},"name":"TimeError","qualname":"::TimeError","value":"pub enum TimeError {\n\n    /// Exact cause of failure is unknown\n    Unspecified,\n\n    /// Attempted type conversion failed\n    ConversionFailure,\n\n    /// Result is outside of those valid for this type\n    Overflow,\n\n    /// Attempted to divide by zero\n    DivByZero,\n\n    /// Resulting [`Duration`](duration/trait.Duration.html) is negative (not allowed)\n    NegDuration,\n\n    /// [`Clock`]-implementation-specific error\n    Clock(clock::Error),\n}","parent":null,"children":[{"krate":0,"index":5176},{"krate":0,"index":5178},{"krate":0,"index":5180},{"krate":0,"index":5182},{"krate":0,"index":5184},{"krate":0,"index":5186}],"decl_id":null,"docs":" Crate errors\n","sig":null,"attributes":[{"value":"/ Crate errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10473,"byte_end":10489,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"non_exhaustive","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10490,"byte_end":10507,"line_start":296,"line_end":296,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5202},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11368,"byte_end":11379,"line_start":330,"line_end":330,"column_start":5,"column_end":16},"name":"Unspecified","qualname":"::ConversionError::Unspecified","value":"ConversionError::Unspecified","parent":{"krate":0,"index":5201},"children":[],"decl_id":null,"docs":" Exact cause of failure is unknown\n","sig":null,"attributes":[{"value":"/ Exact cause of failure is unknown","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11326,"byte_end":11363,"line_start":329,"line_end":329,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5204},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11426,"byte_end":11443,"line_start":332,"line_end":332,"column_start":5,"column_end":22},"name":"ConversionFailure","qualname":"::ConversionError::ConversionFailure","value":"ConversionError::ConversionFailure","parent":{"krate":0,"index":5201},"children":[],"decl_id":null,"docs":" Attempted type conversion failed\n","sig":null,"attributes":[{"value":"/ Attempted type conversion failed","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11385,"byte_end":11421,"line_start":331,"line_end":331,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5206},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11504,"byte_end":11512,"line_start":334,"line_end":334,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::ConversionError::Overflow","value":"ConversionError::Overflow","parent":{"krate":0,"index":5201},"children":[],"decl_id":null,"docs":" Result is outside of those valid for this type\n","sig":null,"attributes":[{"value":"/ Result is outside of those valid for this type","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11449,"byte_end":11499,"line_start":333,"line_end":333,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5208},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11554,"byte_end":11563,"line_start":336,"line_end":336,"column_start":5,"column_end":14},"name":"DivByZero","qualname":"::ConversionError::DivByZero","value":"ConversionError::DivByZero","parent":{"krate":0,"index":5201},"children":[],"decl_id":null,"docs":" Attempted to divide by zero\n","sig":null,"attributes":[{"value":"/ Attempted to divide by zero","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11518,"byte_end":11549,"line_start":335,"line_end":335,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5210},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11656,"byte_end":11667,"line_start":338,"line_end":338,"column_start":5,"column_end":16},"name":"NegDuration","qualname":"::ConversionError::NegDuration","value":"ConversionError::NegDuration","parent":{"krate":0,"index":5201},"children":[],"decl_id":null,"docs":" Resulting [`Duration`](duration/trait.Duration.html) is negative (not allowed)\n","sig":null,"attributes":[{"value":"/ Resulting [`Duration`](duration/trait.Duration.html) is negative (not allowed)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11569,"byte_end":11651,"line_start":337,"line_end":337,"column_start":5,"column_end":87}}]},{"kind":"Enum","id":{"krate":0,"index":5201},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11304,"byte_end":11319,"line_start":328,"line_end":328,"column_start":10,"column_end":25},"name":"ConversionError","qualname":"::ConversionError","value":"pub enum ConversionError {\n\n    /// Exact cause of failure is unknown\n    Unspecified,\n\n    /// Attempted type conversion failed\n    ConversionFailure,\n\n    /// Result is outside of those valid for this type\n    Overflow,\n\n    /// Attempted to divide by zero\n    DivByZero,\n\n    /// Resulting [`Duration`](duration/trait.Duration.html) is negative (not allowed)\n    NegDuration,\n}","parent":null,"children":[{"krate":0,"index":5202},{"krate":0,"index":5204},{"krate":0,"index":5206},{"krate":0,"index":5208},{"krate":0,"index":5210}],"decl_id":null,"docs":" Conversion errors\n","sig":null,"attributes":[{"value":"/ Conversion errors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11217,"byte_end":11238,"line_start":325,"line_end":325,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11239,"byte_end":11256,"line_start":326,"line_end":326,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12740,"byte_end":12745,"line_start":19,"line_end":19,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":26630,"byte_end":26637,"line_start":446,"line_end":446,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27002,"byte_end":27009,"line_start":457,"line_end":457,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27251,"byte_end":27258,"line_start":467,"line_end":467,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27467,"byte_end":27474,"line_start":474,"line_end":474,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27515,"byte_end":27522,"line_start":476,"line_end":476,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27721,"byte_end":27728,"line_start":484,"line_end":484,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28209,"byte_end":28216,"line_start":504,"line_end":504,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57077,"byte_end":57085,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57666,"byte_end":57674,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":60814,"byte_end":60822,"line_start":149,"line_end":149,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":61148,"byte_end":61156,"line_start":163,"line_end":163,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":61480,"byte_end":61488,"line_start":177,"line_end":177,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63279,"byte_end":63286,"line_start":54,"line_end":54,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69546,"byte_end":69553,"line_start":229,"line_end":229,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69601,"byte_end":69608,"line_start":231,"line_end":231,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69732,"byte_end":69739,"line_start":237,"line_end":237,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69866,"byte_end":69873,"line_start":243,"line_end":243,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69926,"byte_end":69933,"line_start":245,"line_end":245,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":70884,"byte_end":70891,"line_start":269,"line_end":269,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":71353,"byte_end":71360,"line_start":286,"line_end":286,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":73487,"byte_end":73494,"line_start":348,"line_end":348,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":75657,"byte_end":75664,"line_start":410,"line_end":410,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":77339,"byte_end":77346,"line_start":459,"line_end":459,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87282,"byte_end":87289,"line_start":354,"line_end":354,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87762,"byte_end":87769,"line_start":374,"line_end":374,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109659,"byte_end":109664,"line_start":46,"line_end":46,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":110160,"byte_end":110165,"line_start":60,"line_end":60,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":110951,"byte_end":110956,"line_start":84,"line_end":84,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":111612,"byte_end":111617,"line_start":105,"line_end":105,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":113508,"byte_end":113513,"line_start":161,"line_end":161,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114142,"byte_end":114147,"line_start":181,"line_end":181,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11018,"byte_end":11027,"line_start":313,"line_end":313,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11143,"byte_end":11152,"line_start":319,"line_end":319,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11703,"byte_end":11712,"line_start":341,"line_end":341,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":12161,"byte_end":12176,"line_start":353,"line_end":353,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10254,"byte_end":10259,"line_start":281,"line_end":281,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10269,"byte_end":10277,"line_start":282,"line_end":282,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":22}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10287,"byte_end":10298,"line_start":283,"line_end":283,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":108}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10308,"byte_end":10316,"line_start":284,"line_end":284,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":148}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10339,"byte_end":10343,"line_start":286,"line_end":286,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":247}},{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":10367,"byte_end":10372,"line_start":288,"line_end":288,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":329}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":12740,"byte_end":12745,"line_start":19,"line_end":19,"column_start":18,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":396},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/clock.rs","byte_start":13404,"byte_end":13409,"line_start":35,"line_end":35,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2086},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21771,"byte_end":21776,"line_start":293,"line_end":293,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":2086},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":21779,"byte_end":21783,"line_start":293,"line_end":293,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":1,"index":2091},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":26630,"byte_end":26637,"line_start":446,"line_end":446,"column_start":45,"column_end":52},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":412},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27002,"byte_end":27009,"line_start":457,"line_end":457,"column_start":26,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":412},"to":{"krate":1,"index":1830}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27251,"byte_end":27258,"line_start":467,"line_end":467,"column_start":44,"column_end":51},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":412},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27467,"byte_end":27474,"line_start":474,"line_end":474,"column_start":25,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":412},"to":{"krate":1,"index":1803}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27515,"byte_end":27522,"line_start":476,"line_end":476,"column_start":34,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":412},"to":{"krate":1,"index":7148}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":27721,"byte_end":27728,"line_start":484,"line_end":484,"column_start":18,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":28209,"byte_end":28216,"line_start":504,"line_end":504,"column_start":31,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":412},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/duration.rs","byte_start":47917,"byte_end":47924,"line_start":1061,"line_end":1061,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":324},"to":{"krate":0,"index":100}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":48978,"byte_end":48983,"line_start":9,"line_end":9,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2086},"to":{"krate":0,"index":121}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fixed_point.rs","byte_start":48986,"byte_end":48990,"line_start":9,"line_end":9,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2091},"to":{"krate":0,"index":121}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57077,"byte_end":57085,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":57666,"byte_end":57674,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":60814,"byte_end":60822,"line_start":149,"line_end":149,"column_start":19,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1513},"to":{"krate":1,"index":2156}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":61148,"byte_end":61156,"line_start":163,"line_end":163,"column_start":19,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1513},"to":{"krate":1,"index":2161}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/fraction.rs","byte_start":61480,"byte_end":61488,"line_start":177,"line_end":177,"column_start":18,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1513},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":63279,"byte_end":63286,"line_start":54,"line_end":54,"column_start":27,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69546,"byte_end":69553,"line_start":229,"line_end":229,"column_start":36,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":2091}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69601,"byte_end":69608,"line_start":231,"line_end":231,"column_start":37,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":1770}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69732,"byte_end":69739,"line_start":237,"line_end":237,"column_start":41,"column_end":48},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":1798}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69866,"byte_end":69873,"line_start":243,"line_end":243,"column_start":34,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":1803}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":69926,"byte_end":69933,"line_start":245,"line_end":245,"column_start":42,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":1841}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":70884,"byte_end":70891,"line_start":269,"line_end":269,"column_start":21,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":1830}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":71353,"byte_end":71360,"line_start":286,"line_end":286,"column_start":60,"column_end":67},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":2146}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":73487,"byte_end":73494,"line_start":348,"line_end":348,"column_start":60,"column_end":67},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":2151}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":75657,"byte_end":75664,"line_start":410,"line_end":410,"column_start":56,"column_end":63},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":2151}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs","byte_start":77339,"byte_end":77346,"line_start":459,"line_end":459,"column_start":43,"column_end":50},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1539},"to":{"krate":1,"index":7148}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82328,"byte_end":82333,"line_start":200,"line_end":200,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2086},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":82336,"byte_end":82340,"line_start":200,"line_end":200,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2091},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87282,"byte_end":87289,"line_start":354,"line_end":354,"column_start":18,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":87762,"byte_end":87769,"line_start":374,"line_end":374,"column_start":27,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1545},"to":{"krate":0,"index":265}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/rate.rs","byte_start":104069,"byte_end":104076,"line_start":796,"line_end":796,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":324},"to":{"krate":0,"index":297}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106662,"byte_end":106666,"line_start":6,"line_end":6,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2091},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106678,"byte_end":106685,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":8,"index":65},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106697,"byte_end":106704,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":6,"index":90},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106724,"byte_end":106735,"line_start":9,"line_end":9,"column_start":20,"column_end":31},"kind":"SuperTrait","from":{"krate":6,"index":418},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106755,"byte_end":106766,"line_start":10,"line_end":10,"column_start":20,"column_end":31},"kind":"SuperTrait","from":{"krate":6,"index":420},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106778,"byte_end":106788,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"kind":"SuperTrait","from":{"krate":6,"index":316},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106800,"byte_end":106810,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"kind":"SuperTrait","from":{"krate":6,"index":319},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106822,"byte_end":106832,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"kind":"SuperTrait","from":{"krate":6,"index":321},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106844,"byte_end":106854,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"kind":"SuperTrait","from":{"krate":6,"index":323},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106861,"byte_end":106865,"line_start":15,"line_end":15,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":1997},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106882,"byte_end":106885,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2156},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106922,"byte_end":106925,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"kind":"SuperTrait","from":{"krate":1,"index":2161},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106962,"byte_end":106969,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"kind":"SuperTrait","from":{"krate":1,"index":6965},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/time_int.rs","byte_start":106981,"byte_end":106986,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":6960},"to":{"krate":0,"index":324}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":109659,"byte_end":109664,"line_start":46,"line_end":46,"column_start":46,"column_end":51},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":110160,"byte_end":110165,"line_start":60,"line_end":60,"column_start":59,"column_end":64},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":5149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":110951,"byte_end":110956,"line_start":84,"line_end":84,"column_start":52,"column_end":57},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":111612,"byte_end":111617,"line_start":105,"line_end":105,"column_start":48,"column_end":53},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":113508,"byte_end":113513,"line_start":161,"line_end":161,"column_start":46,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/timer.rs","byte_start":114142,"byte_end":114147,"line_start":181,"line_end":181,"column_start":42,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":5149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11018,"byte_end":11027,"line_start":313,"line_end":313,"column_start":29,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5175},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11143,"byte_end":11152,"line_start":319,"line_end":319,"column_start":18,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5175},"to":{"krate":1,"index":2069}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":11703,"byte_end":11712,"line_start":341,"line_end":341,"column_start":32,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5175},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/lib.rs","byte_start":12161,"byte_end":12176,"line_start":353,"line_end":353,"column_start":18,"column_end":33},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5201},"to":{"krate":1,"index":2069}}]}