{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1","program":"/home/d33p/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","micromath","--edition=2018","/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"generic-array\"","--cfg","feature=\"vector\"","-C","metadata=dfe8b0577ce3069f","-C","extra-filename=-dfe8b0577ce3069f","--out-dir","/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/debug/deps","--extern","generic_array=/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libgeneric_array-12574cd0ce52c1c2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/d33p/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/d33p/dev/BareMetal/baremetal-embedded/led_toggle_0/led_toggle_rust_0/target/rls/thumbv7em-none-eabihf/debug/deps/libmicromath-dfe8b0577ce3069f.rmeta"},"prelude":{"crate_id":{"name":"micromath","disambiguator":[2534128060887115294,10016125377924218597]},"crate_root":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src","external_crates":[{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2184632775997829466,18026496178680965583]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3726307931522043477,4911878782996857177]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8506066526834043935,2338947288633172727]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","num":4,"id":{"name":"generic_array","disambiguator":[13428866255613034633,5868400920583730306]}},{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","num":5,"id":{"name":"typenum","disambiguator":[6568856327963469585,836838312901979677]}}],"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":0,"byte_end":4134,"line_start":1,"line_end":118,"column_start":1,"column_end":3}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5659,"byte_end":5660,"line_start":36,"line_end":36,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Component","parent":{"krate":0,"index":4}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5668,"byte_end":5669,"line_start":36,"line_end":36,"column_start":36,"column_end":37},"alias_span":null,"name":"*","value":"Iter","parent":{"krate":0,"index":4}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5675,"byte_end":5676,"line_start":36,"line_end":36,"column_start":43,"column_end":44},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5683,"byte_end":5684,"line_start":36,"line_end":36,"column_start":51,"column_end":52},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":3956,"byte_end":3962,"line_start":109,"line_end":109,"column_start":24,"column_end":30},"alias_span":null,"name":"F32Ext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":95},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":4093,"byte_end":4099,"line_start":116,"line_end":116,"column_start":21,"column_end":27},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":4101,"byte_end":4110,"line_start":116,"line_end":116,"column_start":29,"column_end":38},"alias_span":null,"name":"VectorExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":4117,"byte_end":4130,"line_start":117,"line_end":117,"column_start":5,"column_end":18},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":0,"byte_end":4134,"line_start":1,"line_end":118,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":118},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"decl_id":null,"docs":" Embedded-friendly (i.e. `#![no_std]`) math library featuring fast, safe\n floating point approximations for common arithmetic operations, as well as\n 2D and 3D vector types, statistical analysis functions, and quaternions.","sig":null,"attributes":[{"value":"/ Embedded-friendly (i.e. `#![no_std]`) math library featuring fast, safe","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":0,"byte_end":75,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/ floating point approximations for common arithmetic operations, as well as","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":76,"byte_end":154,"line_start":2,"line_end":2,"column_start":1,"column_end":79}},{"value":"/ 2D and 3D vector types, statistical analysis functions, and quaternions.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":155,"byte_end":231,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":232,"byte_end":235,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## Floating point approximations","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":236,"byte_end":272,"line_start":5,"line_end":5,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":273,"byte_end":276,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `micromath` supports approximating many arithmetic operations on `f32`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":277,"byte_end":351,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ using bitwise operations, providing great performance and small code size","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":352,"byte_end":429,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ at the cost of precision. For use cases like graphics and signal","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":430,"byte_end":498,"line_start":9,"line_end":9,"column_start":1,"column_end":69}},{"value":"/ processing, these approximations are often sufficient and the performance","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":499,"byte_end":576,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ gains worth the lost precision.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":577,"byte_end":612,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":613,"byte_end":616,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ These approximations are provided by the [micromath::F32Ext] trait which is","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":617,"byte_end":696,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ impl'd for `f32`, providing a drop-in `std`-compatible (sans lost precision) API.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":697,"byte_end":782,"line_start":14,"line_end":14,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":783,"byte_end":786,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":787,"byte_end":794,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use micromath::F32Ext;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":795,"byte_end":821,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":822,"byte_end":825,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let n = 2.0.sqrt();","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":826,"byte_end":849,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/ assert_eq!(n, 1.5); // close enough","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":850,"byte_end":889,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":890,"byte_end":897,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":898,"byte_end":901,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ### Unused import warnings when linking `std`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":902,"byte_end":951,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":952,"byte_end":955,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Since the `F32Ext` trait provides methods which are already defined in","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":956,"byte_end":1030,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ `std`, in cases where your crate links `std` the `F32Ext` versions of","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1031,"byte_end":1104,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/ the same methods will not be used, in which case you will get an unused","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1105,"byte_end":1180,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ import warning for `F32Ext`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1181,"byte_end":1213,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1214,"byte_end":1217,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If you encounter this, add an `#[allow(unused_imports)]` above the import.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1218,"byte_end":1296,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1297,"byte_end":1300,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1301,"byte_end":1308,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ #[allow(unused_imports)]","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1309,"byte_end":1337,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ use micromath::F32Ext;","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1338,"byte_end":1364,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1365,"byte_end":1372,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1373,"byte_end":1376,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ## Vector types","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1377,"byte_end":1396,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1397,"byte_end":1400,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ See the [`vector` module] for more information on vector types.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1401,"byte_end":1468,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1469,"byte_end":1472,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The following vector types are available, all of which have `pub x` and","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1473,"byte_end":1548,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ `pub y` (and on 3D vectors, `pub z`) members:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1549,"byte_end":1598,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1599,"byte_end":1602,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ | Rust  | 2D      | 3D      |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1603,"byte_end":1636,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ |-------|---------|---------|","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1637,"byte_end":1670,"line_start":45,"line_end":45,"column_start":1,"column_end":34}},{"value":"/ | `i8`  | `I8x2`  | `I8x3`  |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1671,"byte_end":1704,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/ | `i16` | `I16x2` | `I16x3` |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1705,"byte_end":1738,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ | `i32` | `I32x2` | `I32x3` |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1739,"byte_end":1772,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ | `u8`  | `U8x2`  | `U8x3`  |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1773,"byte_end":1806,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/ | `u16` | `U16x2` | `U16x3` |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1807,"byte_end":1840,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ | `u32` | `U32x2` | `U32x3` |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1841,"byte_end":1874,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ | `f32` | `F32x2` | `F32x3` |","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1875,"byte_end":1908,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1909,"byte_end":1912,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Statistical analysis","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1913,"byte_end":1940,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1941,"byte_end":1944,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ See the [`statistics` module] for more information on statistical analysis","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":1945,"byte_end":2023,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ traits and functionality.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2024,"byte_end":2053,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2054,"byte_end":2057,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ The following traits are available and impl'd for slices and iterators of","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2058,"byte_end":2135,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ `f32` (and can be impl'd for other types):","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2136,"byte_end":2182,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2183,"byte_end":2186,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ - [Mean] - compute arithmetic mean with the `mean()` method","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2187,"byte_end":2250,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/ - [StdDev] - compute standard deviation with the `stddev()` method","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2251,"byte_end":2321,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ - [Trim] - cull outliers from a sample slice with the `trim()` method.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2322,"byte_end":2396,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/ - [Variance] - compute variance with the `variance() method","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2397,"byte_end":2460,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2461,"byte_end":2464,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Quaternions","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2465,"byte_end":2483,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2484,"byte_end":2487,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ See the [`quaternion` module] for more information.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2488,"byte_end":2543,"line_start":69,"line_end":69,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2544,"byte_end":2547,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [micromath::F32Ext]: https://docs.rs/micromath/latest/micromath/trait.F32Ext.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2548,"byte_end":2633,"line_start":71,"line_end":71,"column_start":1,"column_end":86}},{"value":"/ [`vector` module]: https://docs.rs/micromath/latest/micromath/vector/index.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2634,"byte_end":2717,"line_start":72,"line_end":72,"column_start":1,"column_end":84}},{"value":"/ [`statistics` module]: https://docs.rs/micromath/latest/micromath/statistics/index.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2718,"byte_end":2809,"line_start":73,"line_end":73,"column_start":1,"column_end":92}},{"value":"/ [`quaternion` module]: https://docs.rs/micromath/latest/micromath/quaternion/index.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2810,"byte_end":2901,"line_start":74,"line_end":74,"column_start":1,"column_end":92}},{"value":"/ [Mean]: https://docs.rs/micromath/latest/micromath/statistics/trait.Mean.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2902,"byte_end":2983,"line_start":75,"line_end":75,"column_start":1,"column_end":82}},{"value":"/ [StdDev]: https://docs.rs/micromath/latest/micromath/statistics/trait.StdDev.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":2984,"byte_end":3069,"line_start":76,"line_end":76,"column_start":1,"column_end":86}},{"value":"/ [Trim]: https://docs.rs/micromath/latest/micromath/statistics/trim/trait.Trim.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":3070,"byte_end":3156,"line_start":77,"line_end":77,"column_start":1,"column_end":87}},{"value":"/ [Variance]: https://docs.rs/micromath/latest/micromath/statistics/trait.Variance.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":3157,"byte_end":3246,"line_start":78,"line_end":78,"column_start":1,"column_end":90}},{"value":"no_std","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":3248,"byte_end":3258,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":3465,"byte_end":3488,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, trivial_casts, trivial_numeric_casts,\n       unused_qualifications)","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":3489,"byte_end":3612,"line_start":87,"line_end":93,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vector","qualname":"::vector","value":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":883},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":28},{"krate":0,"index":44},{"krate":0,"index":71},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":106},{"krate":0,"index":109}],"decl_id":null,"docs":" Algebraic vector types generic over a number of axes and a component type.","sig":null,"attributes":[{"value":"cfg(feature = \"vector\")","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":3826,"byte_end":3852,"line_start":103,"line_end":103,"column_start":1,"column_end":27}},{"value":"/ Algebraic vector types generic over a number of axes and a component type.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4136,"byte_end":4214,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4215,"byte_end":4218,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `vector` Cargo feature must be enabled to use this functionality.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4219,"byte_end":4292,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4293,"byte_end":4296,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ All vectors types impl the [Vector] trait, and all vector components","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4297,"byte_end":4369,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ impl the [Component] trait. The [Vector] trait provides a number of","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4370,"byte_end":4441,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ features, including accessing components by `Index<usize>`, iterator","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4442,"byte_end":4514,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ support via an [iter()] method which returns an [Iter] type,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4515,"byte_end":4579,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ and a [to_array()] method for returning the vector components as a","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4580,"byte_end":4650,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ `GenericArray`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4651,"byte_end":4670,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4671,"byte_end":4674,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ For vectors whose components impl `Into<f32>`, a set of vector geometry","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4675,"byte_end":4750,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ extensions are provided by the [VectorExt] trait, including computing","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4751,"byte_end":4824,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ the distance between vectors and the magnitude of a vector.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4825,"byte_end":4888,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4889,"byte_end":4892,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [Vector]: https://docs.rs/micromath/latest/micromath/vector/trait.Vector.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4893,"byte_end":4974,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ [Component]: https://docs.rs/micromath/latest/micromath/vector/trait.Component.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":4975,"byte_end":5062,"line_start":17,"line_end":17,"column_start":1,"column_end":88}},{"value":"/ [iter()]: https://docs.rs/micromath/latest/micromath/vector/trait.Vector.html#method.iter","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5063,"byte_end":5156,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"/ [Iter]: https://docs.rs/micromath/latest/micromath/vector/struct.Iter.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5157,"byte_end":5235,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ [to_array()]: https://docs.rs/micromath/latest/micromath/vector/trait.Vector.html#tymethod.to_array","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5236,"byte_end":5339,"line_start":20,"line_end":20,"column_start":1,"column_end":104}},{"value":"/ [VectorExt]: https://docs.rs/micromath/latest/micromath/vector/trait.VectorExt.html","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5340,"byte_end":5427,"line_start":21,"line_end":21,"column_start":1,"column_end":88}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8411,"byte_end":8420,"line_start":14,"line_end":14,"column_start":11,"column_end":20},"name":"Component","qualname":"::vector::component::Component","value":"Component: Copy + Default + PartialEq + PartialOrd + Sized + Add<Output = Self> +\nSub<Output = Self> + Mul<Output = Self> + Div<Output = Self>","parent":null,"children":[],"decl_id":null,"docs":" Vector components. All components must be `Copy` + `Sized` types which\n support basic arithmetic (`Add`, `Sub`, `Mul`, `Div`), as well as `Default`,\n `PartialEq` and `PartialOrd`.","sig":null,"attributes":[{"value":"/ Vector components. All components must be `Copy` + `Sized` types which","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8081,"byte_end":8155,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ support basic arithmetic (`Add`, `Sub`, `Mul`, `Div`), as well as `Default`,","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8156,"byte_end":8236,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ `PartialEq` and `PartialOrd`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8237,"byte_end":8270,"line_start":7,"line_end":7,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8271,"byte_end":8274,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is impl'd for the following primitive types:","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8275,"byte_end":8334,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8335,"byte_end":8338,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - `i8`, `i16`, `i32`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8339,"byte_end":8363,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ - `u8`, `u16`, `u32`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8364,"byte_end":8388,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/ - `f32`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8389,"byte_end":8400,"line_start":13,"line_end":13,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/iter.rs","byte_start":8863,"byte_end":8867,"line_start":4,"line_end":4,"column_start":12,"column_end":16},"name":"Iter","qualname":"::vector::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" Iterator over the components of an algebraic vector\n","sig":null,"attributes":[{"value":"/ Iterator over the components of an algebraic vector","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/iter.rs","byte_start":8796,"byte_end":8851,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":354},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12206,"byte_end":12210,"line_start":93,"line_end":93,"column_start":21,"column_end":25},"name":"I8x2","qualname":"::vector::xy::I8x2","value":"I8x2 { x, y }","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"decl_id":null,"docs":"2-dimensional XY vector of `i8` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12279,"byte_end":12284,"line_start":94,"line_end":94,"column_start":21,"column_end":26},"name":"I16x2","qualname":"::vector::xy::I16x2","value":"I16x2 { x, y }","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"decl_id":null,"docs":"2-dimensional XY vector of `i16` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":430},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12351,"byte_end":12356,"line_start":95,"line_end":95,"column_start":17,"column_end":22},"name":"I32x2","qualname":"::vector::xy::I32x2","value":"I32x2 { x, y }","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432}],"decl_id":null,"docs":"2-dimensional XY vector of `i32` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":469},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12427,"byte_end":12431,"line_start":96,"line_end":96,"column_start":21,"column_end":25},"name":"U8x2","qualname":"::vector::xy::U8x2","value":"U8x2 { x, y }","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"decl_id":null,"docs":"2-dimensional XY vector of `u8` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":508},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12500,"byte_end":12505,"line_start":97,"line_end":97,"column_start":21,"column_end":26},"name":"U16x2","qualname":"::vector::xy::U16x2","value":"U16x2 { x, y }","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"decl_id":null,"docs":"2-dimensional XY vector of `u16` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":545},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12572,"byte_end":12577,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"name":"U32x2","qualname":"::vector::xy::U32x2","value":"U32x2 { x, y }","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547}],"decl_id":null,"docs":"2-dimensional XY vector of `u32` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":584},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12648,"byte_end":12653,"line_start":99,"line_end":99,"column_start":21,"column_end":26},"name":"F32x2","qualname":"::vector::xy::F32x2","value":"F32x2 { x, y }","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"decl_id":null,"docs":"2-dimensional XY vector of `f32` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":623},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":16694,"byte_end":16698,"line_start":99,"line_end":99,"column_start":21,"column_end":25},"name":"I8x3","qualname":"::vector::xyz::I8x3","value":"I8x3 { x, y, z }","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"decl_id":null,"docs":"3-dimensional XYZ vector of `i8` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":663},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":16768,"byte_end":16773,"line_start":100,"line_end":100,"column_start":21,"column_end":26},"name":"I16x3","qualname":"::vector::xyz::I16x3","value":"I16x3 { x, y, z }","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666}],"decl_id":null,"docs":"3-dimensional XYZ vector of `i16` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":701},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":16841,"byte_end":16846,"line_start":101,"line_end":101,"column_start":17,"column_end":22},"name":"I32x3","qualname":"::vector::xyz::I32x3","value":"I32x3 { x, y, z }","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"decl_id":null,"docs":"3-dimensional XYZ vector of `i32` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":16918,"byte_end":16922,"line_start":102,"line_end":102,"column_start":21,"column_end":25},"name":"U8x3","qualname":"::vector::xyz::U8x3","value":"U8x3 { x, y, z }","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"decl_id":null,"docs":"3-dimensional XYZ vector of `u8` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":781},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":16992,"byte_end":16997,"line_start":103,"line_end":103,"column_start":21,"column_end":26},"name":"U16x3","qualname":"::vector::xyz::U16x3","value":"U16x3 { x, y, z }","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"decl_id":null,"docs":"3-dimensional XYZ vector of `u16` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":819},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17065,"byte_end":17070,"line_start":104,"line_end":104,"column_start":17,"column_end":22},"name":"U32x3","qualname":"::vector::xyz::U32x3","value":"U32x3 { x, y, z }","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822}],"decl_id":null,"docs":"3-dimensional XYZ vector of `u16` values\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":859},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17142,"byte_end":17147,"line_start":105,"line_end":105,"column_start":21,"column_end":26},"name":"F32x3","qualname":"::vector::xyz::F32x3","value":"F32x3 { x, y, z }","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862}],"decl_id":null,"docs":"3-dimensional XYZ vector of `f32` values\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":95},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5734,"byte_end":5740,"line_start":39,"line_end":39,"column_start":11,"column_end":17},"name":"Vector","qualname":"::vector::Vector","value":"Vector: Copy + Debug + Default + Index<usize> + PartialEq + Sized + Send + Sync","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" Vectors with numeric components\n","sig":null,"attributes":[{"value":"/ Vectors with numeric components","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5688,"byte_end":5723,"line_start":38,"line_end":38,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5848,"byte_end":5852,"line_start":41,"line_end":41,"column_start":10,"column_end":14},"name":"Axes","qualname":"::vector::Vector::Axes","value":"type Axes: ArrayLength<Self::Component>;","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Number of axes\n","sig":null,"attributes":[{"value":"/ Number of axes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5820,"byte_end":5838,"line_start":40,"line_end":40,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5964,"byte_end":5973,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"Component","qualname":"::vector::Vector::Component","value":"type Component: Component;","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Type representing measured acceleration for a particular axis\n","sig":null,"attributes":[{"value":"/ Type representing measured acceleration for a particular axis","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5889,"byte_end":5954,"line_start":43,"line_end":43,"column_start":5,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":98},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6056,"byte_end":6059,"line_start":47,"line_end":47,"column_start":11,"column_end":14},"name":"MIN","qualname":"::vector::Vector::MIN","value":"Self::Component","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Smallest value representable by a vector component\n","sig":null,"attributes":[{"value":"/ Smallest value representable by a vector component","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5991,"byte_end":6045,"line_start":46,"line_end":46,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":99},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6147,"byte_end":6150,"line_start":50,"line_end":50,"column_start":11,"column_end":14},"name":"MAX","qualname":"::vector::Vector::MAX","value":"Self::Component","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Largest value representable by a vector component\n","sig":null,"attributes":[{"value":"/ Largest value representable by a vector component","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6083,"byte_end":6136,"line_start":49,"line_end":49,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6322,"byte_end":6331,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::vector::Vector::from_iter","value":"pub fn from_iter<I>(I) -> Self where I: IntoIterator<Item = Self::Component>","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Instantiate a `Vector` from an iterator over `Self::Component` values.","sig":null,"attributes":[{"value":"/ Instantiate a `Vector` from an iterator over `Self::Component` values.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6174,"byte_end":6248,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6253,"byte_end":6256,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Panics of the iterator is not the correct length.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6261,"byte_end":6314,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6535,"byte_end":6545,"line_start":62,"line_end":62,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::vector::Vector::from_slice","value":"pub fn from_slice(&[Self::Component]) -> Self","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Instantiate a vector from a slice of components.","sig":null,"attributes":[{"value":"/ Instantiate a vector from a slice of components.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6416,"byte_end":6468,"line_start":59,"line_end":59,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6473,"byte_end":6476,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Panics if the slice is not the right size.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6481,"byte_end":6527,"line_start":61,"line_end":61,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6699,"byte_end":6702,"line_start":67,"line_end":67,"column_start":8,"column_end":11},"name":"get","qualname":"::vector::Vector::get","value":"pub fn get(Self, usize) -> Option<Self::Component>","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Get the component value for a particular index\n","sig":null,"attributes":[{"value":"/ Get the component value for a particular index","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6641,"byte_end":6691,"line_start":66,"line_end":66,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6807,"byte_end":6811,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"iter","qualname":"::vector::Vector::iter","value":"pub fn iter(&Self) -> Iter<, Self>","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Iterate over the components of a vector\n","sig":null,"attributes":[{"value":"/ Iterate over the components of a vector","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6756,"byte_end":6799,"line_start":69,"line_end":69,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6953,"byte_end":6961,"line_start":75,"line_end":75,"column_start":8,"column_end":16},"name":"to_array","qualname":"::vector::Vector::to_array","value":"pub fn to_array(Self) -> GenericArray<Self::Component, Self::Axes>","parent":{"krate":0,"index":95},"children":[],"decl_id":null,"docs":" Obtain an array of the acceleration components for each of the axes\n","sig":null,"attributes":[{"value":"/ Obtain an array of the acceleration components for each of the axes","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":6874,"byte_end":6945,"line_start":74,"line_end":74,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":106},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7126,"byte_end":7135,"line_start":80,"line_end":80,"column_start":11,"column_end":20},"name":"VectorExt","qualname":"::vector::VectorExt","value":"VectorExt: Vector + MulAssign<f32>","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" Vector geometry extensions usable on vectors whose components can be\n converted into `f32`.\n","sig":null,"attributes":[{"value":"/ Vector geometry extensions usable on vectors whose components can be","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7017,"byte_end":7089,"line_start":78,"line_end":78,"column_start":1,"column_end":73}},{"value":"/ converted into `f32`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7090,"byte_end":7115,"line_start":79,"line_end":79,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7219,"byte_end":7227,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"distance","qualname":"::vector::VectorExt::distance","value":"pub fn distance(Self, Self) -> f32","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Compute the distance between two vectors\n","sig":null,"attributes":[{"value":"/ Compute the distance between two vectors","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7167,"byte_end":7211,"line_start":81,"line_end":81,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7305,"byte_end":7314,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"magnitude","qualname":"::vector::VectorExt::magnitude","value":"pub fn magnitude(Self) -> f32","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Compute the magnitude of a vector\n","sig":null,"attributes":[{"value":"/ Compute the magnitude of a vector","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7260,"byte_end":7297,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":270},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18304,"byte_end":18310,"line_start":35,"line_end":35,"column_start":11,"column_end":17},"name":"F32Ext","qualname":"::f32ext::F32Ext","value":"F32Ext: Sized","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"decl_id":null,"docs":" `f32` extension providing various arithmetic approximations and polyfills\n for `std` functionality.\n","sig":null,"attributes":[{"value":"/ `f32` extension providing various arithmetic approximations and polyfills","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18187,"byte_end":18264,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ for `std` functionality.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18265,"byte_end":18293,"line_start":34,"line_end":34,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18421,"byte_end":18424,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"abs","qualname":"::f32ext::F32Ext::abs","value":"pub fn abs(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Compute absolute value with a constant-time, data-independent\n implementation.\n","sig":null,"attributes":[{"value":"/ Compute absolute value with a constant-time, data-independent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18324,"byte_end":18389,"line_start":36,"line_end":36,"column_start":5,"column_end":70}},{"value":"/ implementation.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18394,"byte_end":18413,"line_start":37,"line_end":37,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18518,"byte_end":18522,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"asin","qualname":"::f32ext::F32Ext::asin","value":"pub fn asin(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `asin(x)` in radians in the range `[-pi/2, pi/2]`.\n","sig":null,"attributes":[{"value":"/ Approximate `asin(x)` in radians in the range `[-pi/2, pi/2]`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18444,"byte_end":18510,"line_start":40,"line_end":40,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18609,"byte_end":18613,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"acos","qualname":"::f32ext::F32Ext::acos","value":"pub fn acos(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `acos(x)` in radians in the range `[0, pi]`\n","sig":null,"attributes":[{"value":"/ Approximate `acos(x)` in radians in the range `[0, pi]`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18542,"byte_end":18601,"line_start":43,"line_end":43,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18710,"byte_end":18714,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"atan","qualname":"::f32ext::F32Ext::atan","value":"pub fn atan(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `atan(x)` in radians with a maximum error of `0.002`.\n","sig":null,"attributes":[{"value":"/ Approximate `atan(x)` in radians with a maximum error of `0.002`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18633,"byte_end":18702,"line_start":46,"line_end":46,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18852,"byte_end":18861,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"atan_norm","qualname":"::f32ext::F32Ext::atan_norm","value":"pub fn atan_norm(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `atan(x)` normalized to the `[−1,1]` range with a maximum\n error of `0.1620` degrees.\n","sig":null,"attributes":[{"value":"/ Approximate `atan(x)` normalized to the `[−1,1]` range with a maximum","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18734,"byte_end":18809,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ error of `0.1620` degrees.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18814,"byte_end":18844,"line_start":50,"line_end":50,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18997,"byte_end":19002,"line_start":55,"line_end":55,"column_start":8,"column_end":13},"name":"atan2","qualname":"::f32ext::F32Ext::atan2","value":"pub fn atan2(Self, f32) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate the four quadrant arctangent `atan2(x)` in radians, with\n a maximum error of `0.002`.\n","sig":null,"attributes":[{"value":"/ Approximate the four quadrant arctangent `atan2(x)` in radians, with","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18881,"byte_end":18953,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ a maximum error of `0.002`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18958,"byte_end":18989,"line_start":54,"line_end":54,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19169,"byte_end":19179,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"atan2_norm","qualname":"::f32ext::F32Ext::atan2_norm","value":"pub fn atan2_norm(Self, f32) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate the four quadrant arctangent.\n Normalized to the `[0,4)` range with a maximum error of `0.1620` degrees.\n","sig":null,"attributes":[{"value":"/ Approximate the four quadrant arctangent.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19034,"byte_end":19079,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/ Normalized to the `[0,4)` range with a maximum error of `0.1620` degrees.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19084,"byte_end":19161,"line_start":58,"line_end":58,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19258,"byte_end":19262,"line_start":62,"line_end":62,"column_start":8,"column_end":12},"name":"ceil","qualname":"::f32ext::F32Ext::ceil","value":"pub fn ceil(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate floating point ceiling.\n","sig":null,"attributes":[{"value":"/ Approximate floating point ceiling.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19211,"byte_end":19250,"line_start":61,"line_end":61,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19356,"byte_end":19359,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"cos","qualname":"::f32ext::F32Ext::cos","value":"pub fn cos(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate cosine in radians with a maximum error of `0.002`.\n","sig":null,"attributes":[{"value":"/ Approximate cosine in radians with a maximum error of `0.002`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19282,"byte_end":19348,"line_start":64,"line_end":64,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19459,"byte_end":19469,"line_start":68,"line_end":68,"column_start":8,"column_end":18},"name":"div_euclid","qualname":"::f32ext::F32Ext::div_euclid","value":"pub fn div_euclid(Self, f32) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Calculates Euclidean division, the matching method for `rem_euclid`.\n","sig":null,"attributes":[{"value":"/ Calculates Euclidean division, the matching method for `rem_euclid`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19379,"byte_end":19451,"line_start":67,"line_end":67,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19546,"byte_end":19551,"line_start":71,"line_end":71,"column_start":8,"column_end":13},"name":"floor","qualname":"::f32ext::F32Ext::floor","value":"pub fn floor(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate floating point floor.\n","sig":null,"attributes":[{"value":"/ Approximate floating point floor.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19501,"byte_end":19538,"line_start":70,"line_end":70,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19691,"byte_end":19696,"line_start":75,"line_end":75,"column_start":8,"column_end":13},"name":"hypot","qualname":"::f32ext::F32Ext::hypot","value":"pub fn hypot(Self, f32) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.\n","sig":null,"attributes":[{"value":"/ Approximate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19571,"byte_end":19647,"line_start":73,"line_end":73,"column_start":5,"column_end":81}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19652,"byte_end":19683,"line_start":74,"line_end":74,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19791,"byte_end":19794,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"inv","qualname":"::f32ext::F32Ext::inv","value":"pub fn inv(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `1/x` with an average deviation of ~8%.\n","sig":null,"attributes":[{"value":"/ Approximate `1/x` with an average deviation of ~8%.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19728,"byte_end":19783,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19891,"byte_end":19898,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"invsqrt","qualname":"::f32ext::F32Ext::invsqrt","value":"pub fn invsqrt(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate inverse square root with an average deviation of ~5%.\n","sig":null,"attributes":[{"value":"/ Approximate inverse square root with an average deviation of ~5%.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19814,"byte_end":19883,"line_start":80,"line_end":80,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19995,"byte_end":20005,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"rem_euclid","qualname":"::f32ext::F32Ext::rem_euclid","value":"pub fn rem_euclid(Self, f32) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Calculates the least nonnegative remainder of `self (mod other)`.\n","sig":null,"attributes":[{"value":"/ Calculates the least nonnegative remainder of `self (mod other)`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":19918,"byte_end":19987,"line_start":83,"line_end":83,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20109,"byte_end":20112,"line_start":87,"line_end":87,"column_start":8,"column_end":11},"name":"sin","qualname":"::f32ext::F32Ext::sin","value":"pub fn sin(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate sine in radians with a maximum error of `0.002`.\n","sig":null,"attributes":[{"value":"/ Approximate sine in radians with a maximum error of `0.002`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20037,"byte_end":20101,"line_start":86,"line_end":86,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20201,"byte_end":20205,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::f32ext::F32Ext::sqrt","value":"pub fn sqrt(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate square root with an average deviation of ~5%.\n","sig":null,"attributes":[{"value":"/ Approximate square root with an average deviation of ~5%.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20132,"byte_end":20193,"line_start":89,"line_end":89,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20299,"byte_end":20302,"line_start":93,"line_end":93,"column_start":8,"column_end":11},"name":"tan","qualname":"::f32ext::F32Ext::tan","value":"pub fn tan(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `tan(x)` in radians with a maximum error of `0.6`.\n","sig":null,"attributes":[{"value":"/ Approximate `tan(x)` in radians with a maximum error of `0.6`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20225,"byte_end":20291,"line_start":92,"line_end":92,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20389,"byte_end":20394,"line_start":96,"line_end":96,"column_start":8,"column_end":13},"name":"trunc","qualname":"::f32ext::F32Ext::trunc","value":"pub fn trunc(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Retrieve whole number part of floating point with sign.\n","sig":null,"attributes":[{"value":"/ Retrieve whole number part of floating point with sign.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20322,"byte_end":20381,"line_start":95,"line_end":95,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20476,"byte_end":20481,"line_start":99,"line_end":99,"column_start":8,"column_end":13},"name":"round","qualname":"::f32ext::F32Ext::round","value":"pub fn round(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Round the number part of floating point with sign.\n","sig":null,"attributes":[{"value":"/ Round the number part of floating point with sign.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20414,"byte_end":20468,"line_start":98,"line_end":98,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20570,"byte_end":20575,"line_start":102,"line_end":102,"column_start":8,"column_end":13},"name":"fract","qualname":"::f32ext::F32Ext::fract","value":"pub fn fract(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Retrieve the fractional part of floating point with sign.\n","sig":null,"attributes":[{"value":"/ Retrieve the fractional part of floating point with sign.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20501,"byte_end":20562,"line_start":101,"line_end":101,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20665,"byte_end":20673,"line_start":105,"line_end":105,"column_start":8,"column_end":16},"name":"copysign","qualname":"::f32ext::F32Ext::copysign","value":"pub fn copysign(Self, f32) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Copies the sign from one number to another and returns it.\n","sig":null,"attributes":[{"value":"/ Copies the sign from one number to another and returns it.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20595,"byte_end":20657,"line_start":104,"line_end":104,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20736,"byte_end":20738,"line_start":108,"line_end":108,"column_start":8,"column_end":10},"name":"ln","qualname":"::f32ext::F32Ext::ln","value":"pub fn ln(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `ln(x)`.\n","sig":null,"attributes":[{"value":"/ Approximate `ln(x)`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20704,"byte_end":20728,"line_start":107,"line_end":107,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20788,"byte_end":20791,"line_start":111,"line_end":111,"column_start":8,"column_end":11},"name":"exp","qualname":"::f32ext::F32Ext::exp","value":"pub fn exp(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `e^x`.\n","sig":null,"attributes":[{"value":"/ Approximate `e^x`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20758,"byte_end":20780,"line_start":110,"line_end":110,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20864,"byte_end":20867,"line_start":114,"line_end":114,"column_start":8,"column_end":11},"name":"log","qualname":"::f32ext::F32Ext::log","value":"pub fn log(Self, f32) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `log` with an arbitrary base.\n","sig":null,"attributes":[{"value":"/ Approximate `log` with an arbitrary base.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20811,"byte_end":20856,"line_start":113,"line_end":113,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20929,"byte_end":20933,"line_start":117,"line_end":117,"column_start":8,"column_end":12},"name":"log2","qualname":"::f32ext::F32Ext::log2","value":"pub fn log2(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `log2`.\n","sig":null,"attributes":[{"value":"/ Approximate `log2`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20898,"byte_end":20921,"line_start":116,"line_end":116,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20985,"byte_end":20990,"line_start":120,"line_end":120,"column_start":8,"column_end":13},"name":"log10","qualname":"::f32ext::F32Ext::log10","value":"pub fn log10(Self) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `log10`.\n","sig":null,"attributes":[{"value":"/ Approximate `log10`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":20953,"byte_end":20977,"line_start":119,"line_end":119,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":21043,"byte_end":21047,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"powf","qualname":"::f32ext::F32Ext::powf","value":"pub fn powf(Self, f32) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `self^n`.\n","sig":null,"attributes":[{"value":"/ Approximate `self^n`.","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":21010,"byte_end":21035,"line_start":122,"line_end":122,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":21127,"byte_end":21131,"line_start":126,"line_end":126,"column_start":8,"column_end":12},"name":"powi","qualname":"::f32ext::F32Ext::powi","value":"pub fn powi(Self, i32) -> f32","parent":{"krate":0,"index":270},"children":[],"decl_id":null,"docs":" Approximate `self^n` where n is an `i32`\n","sig":null,"attributes":[{"value":"/ Approximate `self^n` where n is an `i32`","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":21075,"byte_end":21119,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]}],"impls":[{"id":7,"kind":"Inherent","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/iter.rs","byte_start":9040,"byte_end":9044,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/iter.rs","byte_start":9285,"byte_end":9289,"line_start":28,"line_end":28,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12728,"byte_end":12732,"line_start":101,"line_end":101,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12848,"byte_end":12853,"line_start":108,"line_end":108,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12969,"byte_end":12973,"line_start":115,"line_end":115,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13089,"byte_end":13094,"line_start":122,"line_end":122,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13207,"byte_end":13212,"line_start":129,"line_end":129,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13335,"byte_end":13340,"line_start":135,"line_end":135,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13463,"byte_end":13468,"line_start":141,"line_end":141,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13591,"byte_end":13596,"line_start":147,"line_end":147,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17220,"byte_end":17225,"line_start":107,"line_end":107,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17365,"byte_end":17370,"line_start":113,"line_end":113,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17510,"byte_end":17515,"line_start":119,"line_end":119,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17655,"byte_end":17660,"line_start":125,"line_end":125,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7360,"byte_end":7361,"line_start":88,"line_end":88,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/lib.rs","byte_start":3911,"byte_end":3917,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8426,"byte_end":8430,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2091},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8437,"byte_end":8444,"line_start":16,"line_end":16,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2069},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8451,"byte_end":8460,"line_start":17,"line_end":17,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":1798},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8467,"byte_end":8477,"line_start":18,"line_end":18,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":1841},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8484,"byte_end":8489,"line_start":19,"line_end":19,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2086},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8496,"byte_end":8499,"line_start":20,"line_end":20,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2146},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8521,"byte_end":8524,"line_start":21,"line_end":21,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2151},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8546,"byte_end":8549,"line_start":22,"line_end":22,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2156},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/component.rs","byte_start":8571,"byte_end":8574,"line_start":23,"line_end":23,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2161},"to":{"krate":0,"index":20}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/iter.rs","byte_start":9040,"byte_end":9044,"line_start":15,"line_end":15,"column_start":13,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/iter.rs","byte_start":9285,"byte_end":9289,"line_start":28,"line_end":28,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":30},"to":{"krate":1,"index":5632}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12728,"byte_end":12732,"line_start":101,"line_end":101,"column_start":24,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":354},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12848,"byte_end":12853,"line_start":108,"line_end":108,"column_start":25,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":393},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":12969,"byte_end":12973,"line_start":115,"line_end":115,"column_start":24,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13089,"byte_end":13094,"line_start":122,"line_end":122,"column_start":25,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":508},"to":{"krate":1,"index":2185}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13207,"byte_end":13212,"line_start":129,"line_end":129,"column_start":21,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":584},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13335,"byte_end":13340,"line_start":135,"line_end":135,"column_start":22,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":584},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13463,"byte_end":13468,"line_start":141,"line_end":141,"column_start":21,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":584},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xy.rs","byte_start":13591,"byte_end":13596,"line_start":147,"line_end":147,"column_start":22,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":584},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17220,"byte_end":17225,"line_start":107,"line_end":107,"column_start":21,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":859},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17365,"byte_end":17370,"line_start":113,"line_end":113,"column_start":22,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":859},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17510,"byte_end":17515,"line_start":119,"line_end":119,"column_start":21,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":859},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector/xyz.rs","byte_start":17655,"byte_end":17660,"line_start":125,"line_end":125,"column_start":22,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":859},"to":{"krate":1,"index":1997}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5742,"byte_end":5746,"line_start":39,"line_end":39,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":2091},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5749,"byte_end":5754,"line_start":39,"line_end":39,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":6960},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5757,"byte_end":5764,"line_start":39,"line_end":39,"column_start":34,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2069},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5767,"byte_end":5772,"line_start":39,"line_end":39,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":1,"index":2362},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5782,"byte_end":5791,"line_start":39,"line_end":39,"column_start":59,"column_end":68},"kind":"SuperTrait","from":{"krate":1,"index":1798},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5794,"byte_end":5799,"line_start":39,"line_end":39,"column_start":71,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":2086},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5802,"byte_end":5806,"line_start":39,"line_end":39,"column_start":79,"column_end":83},"kind":"SuperTrait","from":{"krate":1,"index":2081},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":5809,"byte_end":5813,"line_start":39,"line_end":39,"column_start":86,"column_end":90},"kind":"SuperTrait","from":{"krate":1,"index":2093},"to":{"krate":0,"index":95}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7137,"byte_end":7143,"line_start":80,"line_end":80,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":95},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7146,"byte_end":7155,"line_start":80,"line_end":80,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":1,"index":2185},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/vector.rs","byte_start":7360,"byte_end":7361,"line_start":88,"line_end":88,"column_start":29,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":110},"to":{"krate":0,"index":106}},{"span":{"file_name":"/home/d33p/.cargo/registry/src/github.com-1ecc6299db9ec823/micromath-1.1.1/src/f32ext.rs","byte_start":18312,"byte_end":18317,"line_start":35,"line_end":35,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2086},"to":{"krate":0,"index":270}}]}